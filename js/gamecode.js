var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var GameUI_1 = require("./script/GameUI");
var GameControl_1 = require("./script/GameControl");
var Bullet_1 = require("./script/Bullet");
var DropBox_1 = require("./script/DropBox");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }    
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./script/Bullet":79,"./script/DropBox":80,"./script/GameControl":81,"./script/GameUI":82}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var App_1 = require("./game/App");
var MyGameInit_1 = require("./mygame/MyGameInit");
var MyEvent_1 = require("./mygame/MyEvent");
var MyEffect_1 = require("./mygame/effect/MyEffect");
var SysConfig_1 = require("./mygame/config/SysConfig");
var LoadView_1 = require("./mygame/scene/LoadView");
var GameEvent_1 = require("./game/GameEvent");
var DataSession_1 = require("./mygame/session/DataSession");
var LoadView2_1 = require("./mygame/scene/LoadView2");
var LogType_1 = require("./mygame/session/LogType");
var MyConfig_1 = require("./MyConfig");
var MyDeBug_1 = require("./MyDeBug");
var Main = /** @class */ (function () {
    function Main() {
        this.t = null;
        this.tableArr = [];
        UIConfig.closeDialogOnSide = false;
        Laya.MouseManager.multiTouchEnabled = false;
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        if (Laya.Browser.onMiniGame == false) {
            //Laya.Stat.show();
        }
        Laya.stage.bgColor = "#000000";
        UIConfig.popupBgAlpha = 0.7;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        // if( Laya.Browser.onMiniGame ){
        // }else{
        // 	Laya.stage.scaleMode = Laya.Stage.SCALE_SHOWALL;
        // 	if( Laya.Browser.onPC ){
        // 		Laya.stage.screenMode = Laya.Stage.SCREEN_HORIZONTAL;
        // 	}else{
        // 		Laya.stage.screenMode = Laya.Stage.SCREEN_VERTICAL;
        // 	}
        // 	Laya.stage.alignH = "center"; 
        // }
        Laya.ClassUtils.regClass("laya.ui.WXOpenDataViewer", Laya.WXOpenDataViewer);
        Laya.ClassUtils.regClass("Laya.WXOpenDataViewer", Laya.WXOpenDataViewer);
        this.t = new Laya.Text();
        this.t.color = "#ffffff";
        this.t.fontSize = 40;
        this.t.y = Laya.stage.height / 2;
        Laya.stage.addChild(this.t);
        this.setText("正在加载config文件");
        //return;
        
        console.log(Laya.URL.basePath + "config.json?ver=" + Math.random());
        Laya.loader.load("config.json?ver=" + Math.random(), new Laya.Handler(this, this.configFun), null, Laya.Loader.JSON);
        DataSession_1.default.staticLog(LogType_1.default.LOAD_CONFIG);
        // Laya.Browser.window.wx = Laya.Browser.window.qg;
        // console.log( Laya.Browser.window.wx );
        // console.log( Laya.Browser.window.qg );
    }
    Main.prototype.configFun = function (configJson) {
        try {
            console.log(configJson);
            DataSession_1.default.staticLog(LogType_1.default.LOAD_VERSION, JSON.stringify(configJson));
            MyConfig_1.default.IP = configJson.IP;
            //MyConfig.PLATFORM = configJson.PLATFORM;
            MyConfig_1.default.PLATFORM = configJson.PLATFORM = 0;
            MyConfig_1.default.TEST = configJson.TEST;
            // if( MyConfig.PLATFORM == 10 ){
            
            // }
        }
        catch (error) {
            console.log(222);
            DataSession_1.default.staticLog(LogType_1.default.LOAD_CONFIG_ERR);            
            MyConfig_1.default.PLATFORM = 1;
            MyConfig_1.default.TEST = 0;
        }
        MyConfig_1.default.PLATFORM = 0;
        //ZipLoader.load("all.zip",new Laya.Handler(this,this.allZipFun) );
        this.loadVersion();
        //this.setText( "正在加载version文件" );
    };
    Main.prototype.allZipFun = function (arr) {
        var j = JSON.parse(arr[1]);
        var l = new Laya.Loader();
        l.parsePLFData(j);
        for (var k in j.json) {
            if (k.indexOf(".atlas") == -1) {
                Laya.loader.cacheRes(k, j.json[k]);
                //Laya.loader.load( k);
            }
        }
        //this.loadVersion();
        //this.onVersionLoaded();
    };
    Main.prototype.loadVersion = function () {
        Laya.ResourceVersion.enable("version.json?v=" + Math.random(), Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    };
    Main.prototype.onVersionLoaded = function () {
        this.setText("正在加载fileconfig文件");
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
        DataSession_1.default.staticLog(LogType_1.default.LOAD_fileconfig);
        //this.onConfigLoaded();
        // var arr = [];
        // arr.push("res/atlas/newhand.atlas");
        // arr.push("res/atlas/sence.atlas");
        // arr.push("res/atlas/shengli.atlas");
        // arr.push("res/atlas/loading.atlas");
        // arr.push("res/atlas/rank.atlas");
        // Laya.loader.load(arr, new Laya.Handler(this, this.uiFun));
    };
    Main.prototype.onConfigLoaded = function () {
        //Laya.loader.load("res/atlas/loading.atlas", new Laya.Handler(this, this.uiFun));
        this.uiFun(null);
    };
    Main.prototype.uiFun = function (arr) {
        //Laya.View.uiMap = JSON.parse(arr[1]);
        //console.log( Laya.View.uiMap );
        //new LoadingScene()
        MyDeBug_1.default.trace("ui");
        this.setText("正在加载游戏配置文件");
        // if( arr != null ){
        // 	for( let i :number = 0; i < arr.length; i+=2 ){
        // 		Laya.loader.cacheRes( arr[i] , JSON.parse( arr[i+1] ) );
        // 	}
        // }
        App_1.default.getInstance().init();
        //console.log( Laya.Loader.loadedMap );
        var lv = new LoadView2_1.default();
        lv.zOrder = 1000000;
        Laya.Scene.setLoadingPage(lv);
        Laya.Scene.showLoadingPage();
        Laya.SoundManager.setMusicVolume(0.2);
        MyDeBug_1.default.trace("1");
        App_1.default.getInstance().initEvent(GameEvent_1.default);
        App_1.default.getInstance().initEvent(MyEvent_1.default);
        App_1.default.getInstance().setGameInit(MyGameInit_1.default);
        MyDeBug_1.default.trace("2");
        Laya.Dialog.manager.setLockView(new LoadView_1.default());
        MyDeBug_1.default.trace("3");
        // ZipLoader.load("config.zip?ver=" + Math.random(), new Laya.Handler(this, this.zipFun));
        this.tableArr.push("~table/sys_compose.txt");
        this.tableArr.push("~table/sys_enemy.txt");
        this.tableArr.push("~table/sys_item.txt");
        this.tableArr.push("~table/sys_mission.txt");
        this.tableArr.push("~table/sys_pet.txt");
        this.tableArr.push("~table/sys_skill.txt");
        this.tableArr.push("~table/sys_stageinfo.txt");
        this.tableArr.push("~table/sys_stagemap.txt");
        this.tableArr.push("~table/sys_talent.txt");
        this.tableArr.push("~table/sys_talentcost.txt");
        this.tableArr.push("~table/sys_talentinfo.txt");
        Laya.loader.load(this.tableArr, new Laya.Handler(this, this.onTableCom));
        DataSession_1.default.staticLog(LogType_1.default.LOAD_CONFIGZIP);
    };
    Main.prototype.onTableCom = function () {
        var arr = [];
        for (var i = 0; i < this.tableArr.length; i++) {
            var str = this.tableArr[i];
            var strArr = str.split("/");
            var json = Laya.Loader.getRes(str);
            arr.push(strArr[1], json);
        }
        this.zipFun(arr);
    };
    Main.prototype.zipFun = function (arr) {
        App_1.default.getInstance().configManager.init(arr);
        SysConfig_1.SysItem.init();
        SysConfig_1.SysStageInfo.init();
        App_1.default.sendEvent(MyEvent_1.default.LOGIN);
        MyEffect_1.default.init();
        this.t.removeSelf();
    };
    Main.prototype.setText = function (text) {
        this.t.text = text;
        this.t.x = (Laya.stage.width - this.t.textWidth) / 2;
        //let t = new Laya.Tween();
        //t.from( this.t,{alpha:0} , 300 );
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1,"./MyConfig":3,"./MyDeBug":4,"./game/App":5,"./game/GameEvent":9,"./mygame/MyEvent":21,"./mygame/MyGameInit":22,"./mygame/config/SysConfig":23,"./mygame/effect/MyEffect":24,"./mygame/scene/LoadView":58,"./mygame/scene/LoadView2":59,"./mygame/session/DataSession":68,"./mygame/session/LogType":70}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyConfig = /** @class */ (function () {
    function MyConfig() {
    }
    MyConfig.IP = "";
    MyConfig.TEST = 0;
    MyConfig.PLATFORM = 0;
    return MyConfig;
}());
exports.default = MyConfig;
},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyDeBug = /** @class */ (function () {
    function MyDeBug() {
    }
    MyDeBug.trace = function (txt) {
        return;
        var a = Laya.stage.getChildByName("ttt");
        if (a == null) {
            a = new Laya.Text();
            Laya.stage.addChild(a);
            a.width = Laya.stage.width;
            a.height = Laya.stage.height;
            a.fontSize = 50;
            a.color = "#ffffff";
            a.zOrder = 1000001;
            a.name = "ttt";
        }
        a.text += ("\n" + txt);
    };
    return MyDeBug;
}());
exports.default = MyDeBug;
},{}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigManager_1 = require("./ConfigManager");
var SceneData_1 = require("./SceneData");
var GameSoundManager_1 = require("./GameSoundManager");
var GameEvent_1 = require("./GameEvent");
var OpenDialogManager_1 = require("./OpenDialogManager");
var App = /** @class */ (function () {
    function App() {
        this.eventManager = new Laya.EventDispatcher();
        this.configManager = new ConfigManager_1.default();
        this.gameSoundManager = new GameSoundManager_1.default();
        this.openDialogManager = new OpenDialogManager_1.default();
        /**
         * 存储mediator的map
         */
        this.sceneMap = {};
        this.injMap = {};
        this.actionMap = {};
        /**
         * 存储事件key的
         */
        this.eventMap = {};
        this.sceneRoot = new Laya.Sprite();
    }
    App.getInstance = function () {
        if (App.instance == null) {
            App.instance = new App();
        }
        return App.instance;
    };
    /**
     * 注册场景
     * @param url
     * @param sceneClass
     * @param mediatorClass
     */
    App.prototype.regScene = function (url, sceneClass, mediatorClass, bgm) {
        if (mediatorClass === void 0) { mediatorClass = null; }
        if (bgm === void 0) { bgm = null; }
        var data = new SceneData_1.default();
        data.sceneClass = sceneClass;
        data.mediatorClass = mediatorClass;
        this.sceneMap[url] = data;
        if (bgm) {
            this.gameSoundManager.reg(url, bgm);
        }
    };
    /**
     * 打开场景
     * @param url
     * @param closeOther
     * @param param
     */
    App.prototype.openScene = function (url, closeOther, param, isDialog) {
        if (closeOther === void 0) { closeOther = true; }
        if (param === void 0) { param = null; }
        if (isDialog === void 0) { isDialog = false; }
        if (!isDialog) {
            App.getInstance().eventManager.event(GameEvent_1.default.OPEN_SCENE_START, url);
        }
        if (closeOther) {
            Laya.Dialog.closeAll();
        }
        if (isDialog == false) {
            this.closeAllScene();
            Laya.Scene.showLoadingPage(null, 0);
            this.nowSceneUrl = url;
        }
        var sdata = this.sceneMap[url];
        var loadArr = null;
        if (sdata.mediatorInstance) {
            loadArr = sdata.mediatorInstance.getLoaderUrl();
        }
        else {
            if (sdata.mediatorClass) {
                var m = new sdata.mediatorClass();
                sdata.mediatorInstance = m;
                this.injOne(m);
                loadArr = m.getLoaderUrl();
            }
        }
        if (isDialog && loadArr) {
            Laya.timer.once(100, this, this.delayLockFun);
        }
        if (loadArr) {
            for (var i = 0; i < loadArr.length; i++) {
                var element = loadArr[i] + "";
                if (element.indexOf("https") == -1) {
                    loadArr[i] = Laya.URL.basePath + element;
                }
            }
        }
        if (loadArr) {
            Laya.loader.load(loadArr, new Laya.Handler(this, this.loadSceneFun, [url, closeOther, param]), new Laya.Handler(this, this.proFun)); //, new Laya.Handler( this,this.proFun )
        }
        else {
            this.loadSceneFun(url, closeOther, param);
        }
    };
    App.prototype.delayLockFun = function () {
        Laya.Dialog.manager.lock(true);
    };
    App.prototype.proFun = function (value) {
        Laya.Scene["_loadPage"].event(Laya.Event.PROGRESS, value);
    };
    /**
     * 场景全部关闭
     */
    App.prototype.closeAllScene = function () {
        this.sceneRoot.removeChildren();
    };
    /**
     * 打开面板
     * @param url
     * @param closeOther
     * @param param
     */
    App.prototype.openDialog = function (url, closeOther, param) {
        if (closeOther === void 0) { closeOther = true; }
        if (param === void 0) { param = null; }
        this.openScene(url, closeOther, param, true);
        //Laya.Scene.load(url, new Laya.Handler(this, this.loadSceneFun, [url, closeOther, param]));
    };
    App.dialog = function (url, closeOther, param) {
        if (closeOther === void 0) { closeOther = true; }
        if (param === void 0) { param = null; }
        App.getInstance().openDialog(url, closeOther, param);
    };
    /**
     * 加载完毕
     * @param url
     * @param closeOther
     * @param param
     */
    App.prototype.loadSceneFun = function (url, closeOther, param) {
        if (closeOther === void 0) { closeOther = true; }
        if (param === void 0) { param = null; }
        Laya.timer.clear(this, this.delayLockFun);
        Laya.Scene.hideLoadingPage(100);
        var data = this.sceneMap[url];
        var disInstance = null;
        var mInstance = null;
        if (data.sceneInstance) {
            //已经创建过了 直接拿缓存里的
            disInstance = data.sceneInstance;
            mInstance = data.mediatorInstance;
        }
        else {
            //第一次创建显示对象 但是mediator已经创建完了
            disInstance = new data.sceneClass();
            data.sceneInstance = disInstance;
            if (data.mediatorInstance) {
                mInstance = data.mediatorInstance;
                this.autoRegClick(disInstance, mInstance);
                mInstance.setSprite(disInstance);
            }
        }
        if (mInstance) {
            this.autoRegEvent(mInstance);
            mInstance.setParam(param);
            mInstance.init();
        }
        disInstance.once(Laya.Event.UNDISPLAY, this, this.undisFun, [mInstance, url]);
        if (disInstance instanceof Laya.Dialog) {
            if (disInstance.isShowEffect == false) {
                disInstance.popup(closeOther, false);
            }
            else {
                disInstance.isShowEffect = false;
                disInstance.open(closeOther);
                this.dialogEff(disInstance);
            }
            disInstance.url = url;
            this.eventManager.event(GameEvent_1.default.OPEN_DIALOG, url);
        }
        else {
            this.sceneRoot.addChild(disInstance);
            disInstance.x = (Laya.stage.width - disInstance.width) / 2;
            disInstance.y = (Laya.stage.height - disInstance.height) / 2;
            if (mInstance) {
                var arr2 = mInstance.getLoaderPreUrl();
                if (arr2) {
                    Laya.loader.load(arr2);
                }
            }
            this.eventManager.event(GameEvent_1.default.ENTER_SCENE, url);
        }
        this.eventManager.event(GameEvent_1.default.OPEN_SCENE, url);
    };
    App.prototype.dialogEff = function (dialog) {
        var t = new Laya.Tween();
        dialog.scale(1, 1);
        dialog.alpha = 1;
        dialog.anchorX = 0.5;
        dialog.anchorY = 0.5;
        dialog.x = Laya.stage.width / 2;
        dialog.y = Laya.stage.height / 2;
        t.from(dialog, { x: Laya.stage.width / 2, y: Laya.stage.height / 2, alpha: 0, scaleX: 3, scaleY: 3 }, 200);
        dialog.isShowEffect = true;
    };
    App.prototype.undisFun = function (m, url) {
        this.eventManager.offAllCaller(m);
        Laya.stage.offAllCaller(m);
        Laya.timer.clearAll(m);
        App.sendEvent(GameEvent_1.default.CLOSE_DIALOG, url);
    };
    App.prototype.undisplayFun = function (sp, url) {
    };
    /**
     * 初始化引擎方法
     * @param initClass 实现IGameInit接口的实现类
     */
    App.prototype.setGameInit = function (initClass) {
        var gameinit = new initClass();
        gameinit.initAction();
        gameinit.initSession();
        this.initInjection();
        gameinit.initScence();
        gameinit.initConfig();
        gameinit.initSound();
    };
    App.prototype.initInjection = function () {
        for (var i in this.injMap) {
            this.injOne(this.injMap[i]);
            this.autoRegEvent(this.injMap[i]);
        }
    };
    /**
     * 给一个对象注入
     */
    App.prototype.injOne = function (obj) {
        for (var str in obj) {
            if (obj[str] == null && this.injMap[str]) {
                obj[str] = this.injMap[str];
            }
        }
    };
    App.prototype.regAction = function (actionId, actionClass) {
        // var action:Action = new actionClass();
        // action.setActionId(actionId);
        // actionMap[actionId] = action;
        // regInjection( getInjectionName(action) , action );
    };
    /**
     * 注册session
     * @param sessionClass 传入类
     */
    App.prototype.regSession = function (sessionClass) {
        var session = new sessionClass();
        this.regInjection(this.getInjectionName(session), session);
    };
    /**
     * 得到注册实例的字符串
     * */
    App.prototype.getInjectionName = function (instance) {
        return App.toLowHead(App.getClassName(instance));
    };
    /**
     * 返回首字母小写的字符串
     */
    App.toLowHead = function (str) {
        return str.charAt(0).toLowerCase() + str.substr(1);
    };
    /**
     * 得到类或者实例的字符串名字
     */
    App.getClassName = function (tar) {
        if (tar instanceof Function) {
            return tar["name"];
        }
        return tar["constructor"]["name"];
    };
    App.prototype.getSession = function (key) {
        return this.injMap[key];
    };
    /**
    * 注册注入的key和实例
    */
    App.prototype.regInjection = function (str, obj) {
        this.injMap[str] = obj;
    };
    App.prototype.initEvent = function (obj) {
        for (var key in obj) {
            this.eventMap["on" + key] = key;
        }
    };
    /**
    * 自动注册全局事件 无需自己监听
    */
    App.prototype.autoRegEvent = function (obj) {
        this.regChildEvent(obj);
        this.regFunEvent(obj, Object.getPrototypeOf(obj));
    };
    App.prototype.regFunEvent = function (eventObj, obj) {
        var arr = Object.getOwnPropertyNames(obj);
        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
            var k = arr_1[_i];
            if (this.eventMap[k] != null) {
                this.eventManager.on(this.eventMap[k], eventObj, obj[k]);
            }
        }
    };
    App.prototype.regChildEvent = function (obj) {
        if (obj == null) {
            return;
        }
        for (var key in obj) {
            if (obj[key] instanceof Function) {
                if (this.eventMap[key] != null) {
                    this.eventManager.on(this.eventMap[key], obj, obj[key]);
                }
            }
        }
    };
    App.prototype.autoRegClick = function (sp, obj) {
        for (var key in sp) {
            if (sp[key] instanceof Laya.Button) {
                if (obj[key + "_click"] != null) {
                    sp[key].clickHandler = new Laya.Handler(obj, obj[key + "_click"]);
                }
            }
        }
    };
    /**
    * 从数组里得到一个值 不是索引!
    */
    App.RandomByArray = function (arr, deleteArr) {
        if (deleteArr === void 0) { deleteArr = false; }
        var value = Math.random() * arr.length;
        var index = Math.floor(value);
        var resvalue = arr[index];
        if (deleteArr) {
            arr.splice(index, 1);
        }
        return resvalue;
    };
    /**
     * 包含最小和最大的值
     */
    App.getRandom2 = function (min, max) {
        var a = max - min + 1;
        var ag = 1 / a;
        var va = Math.random() / ag;
        return Math.floor(va) + min;
    };
    /**
     * 随机权重
     * 返回索引
    */
    App.RandomWeight = function (valueArr, randomArr) {
        var max = 0;
        for (var _i = 0, randomArr_1 = randomArr; _i < randomArr_1.length; _i++) {
            var j = randomArr_1[_i];
            max += j;
        }
        var now = 0;
        var r = Math.random() * max;
        for (var i in randomArr) {
            now += randomArr[i];
            if (r < now) {
                return valueArr[i];
            }
        }
        return 0;
    };
    /**
     * 得到某个配置
     * @param fileName
     * @param key
     */
    App.getConfig = function (fileName, key) {
        return App.getInstance().configManager.getConfig(fileName, key);
    };
    App.sendEvent = function (type, data) {
        if (data === void 0) { data = null; }
        App.getInstance().eventManager.event(type, data);
    };
    App.onEvent = function (type, caller, listener, args) {
        App.getInstance().eventManager.on(type, caller, listener, args);
    };
    App.onceEvent = function (type, caller, listener, args) {
        App.getInstance().eventManager.once(type, caller, listener, args);
    };
    /**
     * 绑定某个显示对象 他会自动移除
     * @param target
     * @param attribute
     * @param value
     */
    App.bind = function (target, attribute, value) {
    };
    App.COMPLETE_REMOVE = function (e, removeSprite) {
        if (removeSprite === void 0) { removeSprite = null; }
        e.once(Laya.Event.COMPLETE, null, App.comFun, [removeSprite ? removeSprite : e]);
    };
    App.comFun = function (a) {
        a.removeSelf();
    };
    /**
         * 他会自动帮你拼参数
         * 你不需要get的时候把参数拼在url后面
         * 也就是说get 和 post 是是一样的
         */
    App.http = function (url, data, method, caller, listener, args) {
        if (caller === void 0) { caller = null; }
        if (listener === void 0) { listener = null; }
        if (args === void 0) { args = null; }
        var http = new Laya.HttpRequest();
        if (method == "GET") {
            url = url + "?" + data;
            data = null;
        }
        http.send(url, data, method);
        if (caller && listener) {
            http.once(Laya.Event.COMPLETE, caller, listener, args);
        }
        return http;
    };
    /**
     * 是否是在模拟器
     */
    App.isSimulator = function () {
        if (Laya.Browser.onMiniGame) {
            return Laya.Browser.window.wx.getSystemInfoSync().brand == "devtools";
        }
        else {
            return false;
        }
    };
    App.log = function (type, content) {
        if (content === void 0) { content = ""; }
        // var arr:Array<any> = [];
        // arr.push( Laya.Browser.now() );
        // arr.push( App.GAME_VER );
        // arr.push( this.saveKey );
        // arr.push( this.platform );
        // arr.push( App.ONLY_ID );
        // arr.push( type );
        // arr.push( content );
        // var str:String = "";
        // for( var i:number = 0; i < arr.length; i++ ){
        //     str+=( arr[i] + "\t" );
        // }
        // App.http(  App.LOG_IP , str ,"post" );
    };
    App.sendRecord = function (data) {
        var http = new Laya.HttpRequest();        
        http.send(url, "", "GET");
        console.log("send:@@@@@@@@@@@@@@@@@@@@@" + data);
    };
    App.prototype.init = function () {
        Laya.stage.addChild(this.sceneRoot);
        //Laya.Dialog.manager.closeEffectHandler = new Laya.Handler( this,this.closeEffectFun );
    };
    App.prototype.closeEffectFun = function (dialog) {
        Laya.Tween.to(dialog, { scaleX: 4, scaleY: 4, alpha: 0 }, 200, null, new Laya.Handler(Laya.Dialog.manager, Laya.Dialog.manager.doClose, [dialog]), 0, false, false);
    };
    App.instance = null;
    App.GAME_VER = "";
    App.ONLY_ID = Math.random();
    App.LOG_IP = "";
    return App;
}());
exports.default = App;
},{"./ConfigManager":7,"./GameEvent":9,"./GameSoundManager":10,"./OpenDialogManager":18,"./SceneData":19}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigData = /** @class */ (function () {
    function ConfigData() {
        this.dataMap = {};
    }
    return ConfigData;
}());
exports.default = ConfigData;
},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ConfigData_1 = require("./ConfigData");
var App_1 = require("./App");
var GameEvent_1 = require("./GameEvent");
var ConfigManager = /** @class */ (function () {
    function ConfigManager() {
        this.configMap = {};
    }
    ConfigManager.prototype.init = function (arr) {
        for (var i = 0, len = arr.length; i < len; i += 2) {
            var fileName = arr[i];
            var fileContent = arr[i + 1];
            var configData = this.configMap[fileName];
            if (configData == null) {
                continue;
            }
            if (configData.analysisFun) {
                configData.analysisFun(fileContent);
                continue;
            }
            configData.dataArray = this.analysisConfig(fileContent, configData.configClass);
            if (configData.mapKey || configData.keyFun) {
                for (var j = 0, len1 = configData.dataArray.length; j < len1; j++) {
                    var data = configData.dataArray[j];
                    var key = (configData.mapKey ? data[configData.mapKey] : configData.keyFun(data));
                    configData.dataMap[key] = data;
                }
            }
        }
        App_1.default.sendEvent(GameEvent_1.default.CONFIG_OVER);
    };
    /**
     * 得到单个配置文件
     * @param fileName
     * @param key
     * @return
     */
    ConfigManager.prototype.getConfig = function (fileName, key) {
        var configData = this.getConfigData(fileName);
        return configData.dataMap[key];
    };
    /**
     * 得到某个表的全部文件数组
     * @param fileName
     * @return
     */
    ConfigManager.prototype.getDataArr = function (fileName) {
        var configData = this.getConfigData(fileName);
        return configData.dataArray;
    };
    /**
     * 根据文件名返回配置
     * @param fileName
     */
    ConfigManager.prototype.getConfigData = function (fileName) {
        return this.configMap[fileName];
    };
    /**
     * 配置文件 number型 务必一定要写0.1
     * 不然就转成int了
     * 0.0会被认为是0 int
     */
    ConfigManager.prototype.analysisConfig = function (configString, configClass) {
        if (configString.charCodeAt(0) == 65279) {
            configString = configString.substring(1);
        }
        var resultArr = [];
        var strary = configString.split("\n");
        var head = String(strary[0]).replace("\r", "");
        var headary = head.split("\t");
        var contentary = strary.slice(1);
        for (var i = 0, len = contentary.length; i < len; i++) {
            var propstr = String(contentary[i]).replace("\r", "");
            if (propstr == "") {
                continue;
            }
            var propary = propstr.split("\t");
            var config = new configClass();
            for (var j = 0, len2 = propary.length; j < len2; j++) {
                var titleString = headary[j];
                var now = config[titleString];
                var value = propary[j];
                if (typeof now === 'number') {
                    now = parseInt(value + "");
                    if ((now + "") != value) {
                        now = parseFloat(value + "");
                    }
                }
                else {
                    now = value;
                }
                config[titleString] = now;
            }
            resultArr.push(config);
        }
        return resultArr;
    };
    /**
     * 注册一个自定义的解析方法
     * @param fileName
     * @param analysisFun
     */
    // public regAnalysisFun(fileName: String, analysisFun: Function): void {
    //     var configData: ConfigData = new ConfigData();
    //     configData.analysisFun = analysisFun;
    //     regMap[fileName] = configData;
    // }
    /**
     * 注册一个配置文件
     * @param fileName
     * @param configClass
     * @param mapKey
     */
    ConfigManager.prototype.regConfig = function (fileName, configClass, mapKey) {
        if (mapKey === void 0) { mapKey = null; }
        var configData = new ConfigData_1.default();
        configData.configClass = configClass;
        if (typeof mapKey === 'string') {
            configData.mapKey = mapKey;
        }
        else if (mapKey instanceof Function) {
            configData.keyFun = mapKey;
        }
        this.configMap[fileName] = configData;
    };
    return ConfigManager;
}());
exports.default = ConfigManager;
},{"./App":5,"./ConfigData":6,"./GameEvent":9}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CurveMove = /** @class */ (function () {
    function CurveMove() {
        this.tempPoint = new Laya.Point();
    }
    CurveMove.prototype.start = function (updateHandler, overHandler, speedX, g, sX, sY, eX, eY) {
        this.eY = eY;
        this.eX = eX;
        this.overHandler = overHandler;
        this.sY = sY;
        this.sX = sX;
        this.updateHandler = updateHandler;
        this.g = g;
        this.speedX = speedX;
        if (eX < sX) {
            this.speedX = -this.speedX;
        }
        var xDistance = Math.abs(eX - sX);
        this.allTime = Math.abs(xDistance / speedX);
        this.speedY = (sY - eY + g * this.allTime * this.allTime / 2) / this.allTime;
        this.startTime = Laya.Browser.now();
        Laya.timer.frameLoop(1, this, this.efFun);
        this.tempPoint.setTo(sX, sY);
        this.updateHandler.runWith(this.tempPoint);
    };
    CurveMove.prototype.efFun = function () {
        var time = (Laya.Browser.now() - this.startTime) / 1000;
        if (time >= this.allTime) {
            Laya.timer.clear(this, this.efFun);
            //tempPoint.setTo(sX,sY);
            this.tempPoint.setTo(this.eX, this.eY);
            this.updateHandler.runWith(this.tempPoint);
            this.overHandler.run();
            return;
        }
        this.getPoByTime(time);
        this.updateHandler.runWith(this.tempPoint);
    };
    CurveMove.prototype.getPoByTime = function (time) {
        this.tempPoint.x = this.sX + time * this.speedX;
        this.tempPoint.y = this.sY - (this.speedY * time - this.g * time * time / 2);
        return this.tempPoint;
    };
    CurveMove.prototype.nextPoint = function () {
        var rate = 60;
        var t = (Laya.Browser.now() + 1000 / rate - this.startTime) / 1000;
        return this.getPoByTime(t);
    };
    return CurveMove;
}());
exports.default = CurveMove;
},{}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameEvent = /** @class */ (function () {
    function GameEvent() {
    }
    GameEvent.CONFIG_OVER = "CONFIG_OVER";
    GameEvent.OPEN_SCENE = "OPEN_SCENE";
    GameEvent.OPEN_SCENE_START = "OPEN_SCENE_START";
    GameEvent.ENTER_SCENE = "ENTER_SCENE";
    GameEvent.OPEN_DIALOG = "OPEN_DIALOG";
    GameEvent.CLOSE_DIALOG = "CLOSE_DIALOG";
    return GameEvent;
}());
exports.default = GameEvent;
},{}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var App_1 = require("./App");
var GameEvent_1 = require("./GameEvent");
var MyEvent_1 = require("../mygame/MyEvent");
var GameSoundManager = /** @class */ (function () {
    function GameSoundManager() {
        this.bgmMap = {};
        this.currentWxSound = null;
        this.bgmUrl = null;
        this.noBgm = false;
        this.noEff = false;
        Laya.timer.callLater(this, this.initEvent);
    }
    GameSoundManager.prototype.onWX_ON_SHOW = function () {
        //this.playBgm( this.bgmUrl );
        if (Laya.Browser.onMiniGame && this.currentWxSound) {
            this.currentWxSound.play();
        }
    };
    GameSoundManager.prototype.onWX_ON_HIDE = function () {
        //Laya.SoundManager.stopAll();
        if (Laya.Browser.onMiniGame && this.currentWxSound) {
            this.currentWxSound.pause();
        }
    };
    GameSoundManager.prototype.initEvent = function () {
        App_1.default.onEvent(GameEvent_1.default.OPEN_SCENE, this, this.openSceneFun);
        App_1.default.onEvent(MyEvent_1.default.WX_ON_SHOW, this, this.onWX_ON_SHOW);
        App_1.default.onEvent(MyEvent_1.default.WX_ON_HIDE, this, this.onWX_ON_HIDE);
        App_1.default.onEvent(MyEvent_1.default.AD_OVER, this, this.onWX_ON_SHOW);
    };
    GameSoundManager.prototype.openSceneFun = function (url) {
        if (this.bgmMap[url]) {
            this.playBgm(this.bgmMap[url]);
        }
    };
    GameSoundManager.prototype.reg = function (url, bgm) {
        this.bgmMap[url] = bgm;
        if (url == GameSoundManager.BTN) {
            Laya.stage.on(Laya.Event.CLICK, this, this.clickFun);
        }
    };
    GameSoundManager.prototype.clickFun = function (e) {
        if (e.target instanceof Laya.Button) {
            this.playEffect(this.bgmMap[GameSoundManager.BTN]);
        }
    };
    GameSoundManager.prototype.playBgm = function (url) {
        this.bgmUrl = url;
        console.log("播放背景音乐");
        if (Laya.Browser.onMiniGame) {
            if (this.currentWxSound) {
                this.currentWxSound.stop();
                this.currentWxSound.destroy();
                this.currentWxSound = null;
                console.log("音频已经销毁");
            }
            var wxSound = Laya.Browser.window.wx.createInnerAudioContext();
            wxSound.autoplay = true;
            wxSound.loop = true;
            //console.log( "aaaaaaaaaaaaa" , url  , Laya.ResourceVersion.manifest[url]  );
            if (Laya.ResourceVersion.manifest[url] == null) {
                wxSound.src = Laya.URL.basePath + url;
            }
            else {
                wxSound.src = Laya.URL.basePath + Laya.ResourceVersion.manifest[url];
            }
            //console.log( "aaaaaaaaaaaaa" , wxSound.src );
            this.currentWxSound = wxSound;
            this.setBgmMuted(this.noBgm);
        }
        else {
            Laya.SoundManager.playMusic(url);
        }
    };
    GameSoundManager.prototype.setBgmMuted = function (v) {
        this.noBgm = v;
        if (Laya.Browser.onMiniGame && this.currentWxSound) {
            if (v) {
                this.currentWxSound.volume = 0;
            }
            else {
                this.currentWxSound.volume = 0.5;
            }
        }
    };
    GameSoundManager.prototype.setEffMuted = function (v) {
        this.noEff = v;
    };
    GameSoundManager.prototype.stopBgm = function () {
        if (Laya.Browser.onMiniGame) {
            if (this.currentWxSound) {
                this.currentWxSound.stop();
                this.currentWxSound.destroy();
                this.currentWxSound = null;
                console.log("音频已经销毁");
            }
        }
        else {
            Laya.SoundManager.stopMusic();
        }
    };
    GameSoundManager.prototype.playEffect = function (url) {
        if (this.noEff) {
            return;
        }
        if (Laya.Browser.onMiniGame) {
            var b = Laya.Pool.getItem(url);
            if (b == null) {
                new WXSound(url);
            }
            else {
                b.play();
            }
        }
        else {
            Laya.SoundManager.playSound(url);
        }
    };
    GameSoundManager.BTN = "BTN";
    return GameSoundManager;
}());
exports.default = GameSoundManager;
var WXSound = /** @class */ (function () {
    function WXSound(url) {
        var _this = this;
        this.url = url;
        this.wxSound = Laya.Browser.window.wx.createInnerAudioContext();
        this.wxSound.autoplay = true;
        this.wxSound.loop = false;
        //this.wxSound.src = Laya.URL.basePath + Laya.ResourceVersion.manifest[url];
        if (Laya.ResourceVersion.manifest[url] == null) {
            this.wxSound.src = Laya.URL.basePath + url;
        }
        else {
            this.wxSound.src = Laya.URL.basePath + Laya.ResourceVersion.manifest[url];
        }
        this.wxSound.onEnded(function () {
            Laya.Pool.recover(_this.url, _this.wxSound);
        });
    }
    return WXSound;
}());
exports.WXSound = WXSound;
},{"../mygame/MyEvent":21,"./App":5,"./GameEvent":9}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Map2Array = /** @class */ (function () {
    function Map2Array() {
        this.map = {};
    }
    Map2Array.prototype.setData = function (key, value) {
        this.resetKey(key);
        var arr = this.map[key];
        arr.push(value);
    };
    /**
     * 他会自动去重
     * @param key
     * @param value
     */
    Map2Array.prototype.setData2 = function (key, value) {
        this.resetKey(key);
        var arr = this.map[key];
        if (arr.indexOf(value) == -1) {
            arr.push(value);
        }
    };
    Map2Array.prototype.getData = function (key) {
        this.resetKey(key);
        return this.map[key];
    };
    /**
     * @param key
     * @param value
     * @param delete0null1 删除0 置空1
     */
    Map2Array.prototype.deleteData = function (key, value, stat) {
        if (stat === void 0) { stat = 0; }
        this.resetKey(key);
        var a = this.getData(key);
        var i = a.indexOf(value);
        if (i != -1) {
            if (stat == 0) {
                a.splice(i, 1);
            }
            else {
                a[i] = null;
            }
        }
    };
    Map2Array.prototype.resetKey = function (key) {
        if (this.map[key] == null) {
            this.map[key] = [];
        }
    };
    return Map2Array;
}());
exports.default = Map2Array;
},{}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Mediator = /** @class */ (function () {
    function Mediator() {
    }
    Mediator.prototype.setSprite = function (sprite) {
    };
    /**
     * 这个会调用多次 因为实例只有一个 方便设置参数
     * @param param
     */
    Mediator.prototype.setParam = function (param) {
        this.param = param;
    };
    /**
     * 每次显示的时候 激活
     */
    Mediator.prototype.init = function () {
    };
    /**
    * 自动加载 这个可以是scene可以是任何东西 都会自动加入到队列里
    */
    Mediator.prototype.getUrl = function () {
        return null;
    };
    Mediator.prototype.getPreUrl = function () {
        return null;
    };
    Mediator.prototype.getLoaderUrl = function () {
        return null;
    };
    Mediator.prototype.getLoaderPreUrl = function () {
        return null;
    };
    return Mediator;
}());
exports.default = Mediator;
},{}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyAni = /** @class */ (function (_super) {
    __extends(MyAni, _super);
    function MyAni() {
        var _this = _super.call(this) || this;
        _this.time = 0;
        _this.arr = null;
        _this.isLoad = false;
        _this.isPlay = false;
        _this.now = 0;
        _this.once(Laya.Event.UNDISPLAY, _this, _this.undisFun);
        return _this;
    }
    MyAni.prototype.undisFun = function () {
        this.stop();
    };
    MyAni.prototype.setUrl = function (url, arr) {
        this.isLoad = true;
        this.arr = arr;
        Laya.loader.load(url, new Laya.Handler(this, this.loadFun));
    };
    MyAni.prototype.loadFun = function () {
        this.isLoad = false;
        if (this.isPlay) {
            this.play();
        }
    };
    MyAni.prototype.play = function () {
        this.isPlay = true;
        this.now = 0;
        if (this.isLoad) {
            return;
        }
        this.loopFun();
        Laya.timer.loop(this.time, this, this.loopFun);
    };
    MyAni.prototype.stop = function () {
        Laya.timer.clear(this, this.loopFun);
        this.isPlay = false;
    };
    MyAni.prototype.loopFun = function () {
        this.skin = this.arr[this.now];
        this.now++;
        if (this.now >= this.arr.length) {
            this.now = 0;
            this.event(Laya.Event.COMPLETE);
        }
    };
    return MyAni;
}(Laya.Image));
exports.default = MyAni;
},{}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyAnimation = /** @class */ (function (_super) {
    __extends(MyAnimation, _super);
    function MyAnimation() {
        return _super.call(this) || this;
    }
    MyAnimation.prototype.load = function (url, atlas) {
        if (atlas === void 0) { atlas = null; }
        this.aniname = url;
        //this.source = this.aniname;
        // return;
        // if( Laya.loader.getRes( atlas ) ){
        //     //都加载完了
        //     this.disFun();
        // }else{
        //     if( MyAnimation.loadMap[url] == null ){
        //         //现在没有人在加载
        //         this.loadAnimation(url , new Laya.Handler(this,this.loadOverFun) , atlas);
        //         MyAnimation.loadMap[url] = 1;
        //     }else{
        //         //如果有人在加载
        //         MyAnimation.ed.once(url,this,this.disFun);
        //     }
        // }
        Laya.loader.load(atlas, new Laya.Handler(this, this.comFun));
    };
    MyAnimation.prototype.comFun = function () {
        this.source = this.aniname;
    };
    MyAnimation.prototype.loadOverFun = function () {
        MyAnimation.ed.event(this.aniname);
    };
    MyAnimation.prototype.disFun = function () {
        this.source = this.aniname;
    };
    MyAnimation.loadMap = {};
    MyAnimation.ed = new Laya.EventDispatcher();
    return MyAnimation;
}(Laya.Animation));
exports.default = MyAnimation;
},{}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyArray = /** @class */ (function () {
    function MyArray() {
        this.arr = [];
    }
    /**
     * 他会自动过滤重复的
     * @param value
     */
    MyArray.prototype.push = function (value) {
        if (this.arr.indexOf(value) == -1) {
            this.arr.push(value);
        }
    };
    /**
     * 删除
     * @param value
     * delete0null1 删除0 置空1
     */
    MyArray.prototype.delete = function (value, stat) {
        if (stat === void 0) { stat = 0; }
        var i = this.arr.indexOf(value);
        if (i != -1) {
            if (stat == 0) {
                this.arr.splice(i, 1);
            }
            else {
                this.arr[i] = null;
            }
        }
    };
    /**
     * 是否包含
     * @param value
     */
    MyArray.prototype.contain = function (value) {
        return this.arr.indexOf(value) != -1;
    };
    /**
     * 如果数组里没有 就自动添加 如果有就删除
     * 如果原本有 返回true
     * 如果传null 那么直接return
     * @param value
     */
    MyArray.prototype.pushOrDelete = function (value) {
        if (value == null) {
            return false;
        }
        if (this.contain(value)) {
            this.delete(value);
            return true;
        }
        else {
            this.arr.push(value);
            return false;
        }
    };
    MyArray.prototype.clear = function () {
        this.arr.length = 0;
    };
    return MyArray;
}());
exports.default = MyArray;
},{}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyClip = /** @class */ (function (_super) {
    __extends(MyClip, _super);
    function MyClip() {
        var _this = _super.call(this) || this;
        _this.clip = null;
        /**
         * 自定义移除对象
         * 因为clip可能是view里做好的 需要移除view
         */
        _this.removeSp = null;
        _this.overStat = 0;
        return _this;
    }
    MyClip.prototype.setClip = function (clip) {
        this.clip = clip;
    };
    /**
     * 播放一遍 并且移除自己
     * overStat 0是移除
     * 1是隐藏
     */
    MyClip.prototype.playOnceAndRemove = function (overStat) {
        if (overStat === void 0) { overStat = 0; }
        this.overStat = overStat;
        this.clip = this.getClip();
        if (Laya.loader.getRes(this.clip.skin) == null) {
            this.clip.on(Laya.Event.LOADED, this, this.loadedFun);
        }
        else {
            this.p();
        }
    };
    MyClip.prototype.loadedFun = function () {
        this.p();
    };
    MyClip.prototype.p = function () {
        this.clip.play(0, this.clip.total - 1);
        this.clip.on(Laya.Event.COMPLETE, this, this.comFun);
    };
    MyClip.prototype.comFun = function () {
        if (this.removeSp != null) {
            if (this.overStat == 0) {
                this.removeSp.removeSelf();
            }
            else if (this.overStat == 1) {
                this.removeSp.visible = false;
            }
            return;
        }
        if (this.overStat == 0) {
            this.clip.removeSelf();
        }
        else if (this.overStat == 1) {
            this.clip.visible = false;
        }
    };
    MyClip.prototype.getClip = function () {
        if (this.clip == null) {
            return this;
        }
        return this.clip;
    };
    return MyClip;
}(Laya.Clip));
exports.default = MyClip;
},{}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyProgressBar = /** @class */ (function () {
    function MyProgressBar() {
        this.maxWid = 0;
        this.maxHei = 0;
    }
    MyProgressBar.prototype.setScrollRectSprite = function (sp) {
        this.sp = sp;
        this.maxWid = sp.width;
        this.maxHei = sp.height;
    };
    MyProgressBar.prototype.setValue = function (now, max) {
        if (now == 0) {
            this.sp.visible = false;
        }
        else {
            this.sp.visible = true;
        }
        var a = now / max;
        this.sp.scrollRect = new Laya.Rectangle(0, 0, this.maxWid * a, this.maxHei);
    };
    return MyProgressBar;
}());
exports.default = MyProgressBar;
},{}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var App_1 = require("./App");
var GameEvent_1 = require("./GameEvent");
var OpenDialogManager = /** @class */ (function () {
    function OpenDialogManager() {
        this.arr = [];
        this.nowUrl = null;
    }
    OpenDialogManager.prototype.openOnyByOne = function (url, closeOther, param) {
        if (closeOther === void 0) { closeOther = true; }
        if (param === void 0) { param = null; }
        this.arr.push(url, closeOther, param);
        Laya.timer.callLater(this, this.callFun);
    };
    OpenDialogManager.prototype.callFun = function () {
        if (Laya.Dialog.manager.numChildren != 0) {
            //有窗口已经显示了
            return;
        }
        this.one();
    };
    OpenDialogManager.prototype.one = function () {
        var u = this.arr.shift();
        var c = this.arr.shift();
        var p = this.arr.shift();
        this.nowUrl = u;
        App_1.default.dialog(u, c, p);
        App_1.default.onEvent(GameEvent_1.default.CLOSE_DIALOG, this, this.cdFun);
    };
    OpenDialogManager.prototype.cdFun = function (url) {
        //现在有一个问题 我不知道 他加载多长时间
        Laya.timer.once(100, this, this.tFun);
        // if( url == this.nowUrl ){
        //     App.getInstance().eventManager.off( GameEvent.CLOSE_DIALOG , this, this.cdFun );
        //     Laya.timer.callLater( this,this.clFun );
        // }
    };
    OpenDialogManager.prototype.tFun = function () {
        if (Laya.Dialog.manager.numChildren != 0) {
            //有窗口已经显示了
            return;
        }
        App_1.default.getInstance().eventManager.off(GameEvent_1.default.CLOSE_DIALOG, this, this.cdFun);
        Laya.timer.callLater(this, this.clFun);
    };
    /**
     * 关闭的时候检测一下 还有没有其他界面准备打开
     */
    OpenDialogManager.prototype.clFun = function () {
        if (Laya.Dialog.manager.numChildren == 0) {
            if (this.arr.length != 0) {
                this.one();
            }
        }
    };
    return OpenDialogManager;
}());
exports.default = OpenDialogManager;
},{"./App":5,"./GameEvent":9}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SceneData = /** @class */ (function () {
    function SceneData() {
    }
    return SceneData;
}());
exports.default = SceneData;
},{}],20:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Session = /** @class */ (function () {
    function Session() {
    }
    return Session;
}());
exports.default = Session;
},{}],21:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyEvent = /** @class */ (function () {
    function MyEvent() {
    }
    /**
     * 装备更新
     */
    MyEvent.EQUIP_UPDATE = "EQUIP_UPDATE";
    /**
     * 人物属性更新
     */
    MyEvent.ATTRIBUTE_UPDATE = "ATTRIBUTE_UPDATE";
    MyEvent.GOLD_UPDATE = "GOLD_UPDATE";
    MyEvent.EGG_UPDATE = "EGG_UPDATE";
    MyEvent.TIME_GOLD_UPDATE = "TIME_GOLD_UPDATE";
    MyEvent.LOGIN = "LOGIN";
    MyEvent.NEWER_INIT = "NEWER_INIT";
    MyEvent.GET_GOLD_CLOSE = "GET_GOLD_CLOSE";
    MyEvent.GAME_START = "GAME_START";
    MyEvent.DATA_FROM_SERVER = "DATA_FROM_SERVER";
    MyEvent.GET_NEW_ITEM = "GET_NEW_ITEM";
    MyEvent.ENTER_BATTLE_SCENE = "ENTER_BATTLE_SCENE";
    MyEvent.START_NEWER_MV = "START_NEWER_MV";
    MyEvent.SHOUZHITOU = "SHOUZHITOU";
    MyEvent.JINGTOU_BACK = "JINGTOU_BACK";
    MyEvent.MERGE_EQUIP = "MERGE_EQUIP";
    MyEvent.EQUIP_OVER = "EQUIP_OVER";
    MyEvent.HP_HALF = "HP_HALF";
    MyEvent.CLICK_CITY = "CLICK_CITY";
    MyEvent.NEWER_OVER = "NEWER_OVER";
    MyEvent.EQUIP_OVER_NEWER = "EQUIP_OVER_NEWER";
    MyEvent.WX_ON_SHOW = "WX_ON_SHOW";
    MyEvent.WX_ON_HIDE = "WX_ON_HIDE";
    MyEvent.OPEN_SCENE = "OPEN_SCENE";
    MyEvent.RED_UPDATE = "RED_UPDATE";
    MyEvent.FLASH_RED = "FLASH_RED";
    MyEvent.BAG_UPDATE = "BAG_UPDATE";
    MyEvent.TALENT_UPDATE = "TALENT_UPDATE";
    MyEvent.SECOND_NEW = "SECOND_NEW";
    MyEvent.PLAY_AD = "PLAY_AD";
    MyEvent.KILL_BOSS = "KILL_BOSS";
    MyEvent.STAGE = "STAGE";
    MyEvent.MERGE = "MERGE";
    MyEvent.EQUIP_LV_NUM = "EQUIP_LV_NUM";
    MyEvent.NEW_DAY = "NEW_DAY";
    MyEvent.TASK_UPDATE = "TASK_UPDATE";
    MyEvent.SHARE_START = "SHARE_START";
    MyEvent.AD_EVENT = "AD_EVENT";
    MyEvent.AD_OVER = "AD_OVER";
    MyEvent.TIAN_FU_UPDATE = "TIAN_FU_UPDATE";
    MyEvent.SHARE_LP_COM = "SHARE_LP_COM";
    MyEvent.SHARE_LP_ERR = "SHARE_LP_ERR";
    return MyEvent;
}());
exports.default = MyEvent;
},{}],22:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var App_1 = require("../game/App");
var MainSceneMediator_1 = require("./mediator/MainSceneMediator");
var BattleScene_1 = require("./scene/BattleScene");
var BattleSceneMediator_1 = require("./mediator/BattleSceneMediator");
var SysConfig_1 = require("./config/SysConfig");
var BattleSession_1 = require("./session/BattleSession");
var RoleDialog_1 = require("./scene/RoleDialog");
var RoleDialogMediator_1 = require("./mediator/RoleDialogMediator");
var BagSession_1 = require("./session/BagSession");
var GameOverDialogMediator_1 = require("./mediator/GameOverDialogMediator");
var TreasureDialogMediator_1 = require("./mediator/TreasureDialogMediator");
var TimeGoldDialogMediator_1 = require("./mediator/TimeGoldDialogMediator");
var TimeGoldSession_1 = require("./session/TimeGoldSession");
var SdkSession_1 = require("./session/SdkSession");
var FlyBoxMediator_1 = require("./mediator/FlyBoxMediator");
var PetSession_1 = require("./session/PetSession");
var DataSession_1 = require("./session/DataSession");
var TestLoginMediator_1 = require("./mediator/TestLoginMediator");
var KillBossDialogMediator_1 = require("./mediator/KillBossDialogMediator");
var GameSoundManager_1 = require("../game/GameSoundManager");
var NewerMediator_1 = require("./mediator/NewerMediator");
var NewerSession_1 = require("./session/NewerSession");
var SetSession_1 = require("./session/SetSession");
var Stage2Mediator_1 = require("./mediator/Stage2Mediator");
var TianFuMediator_1 = require("./mediator/TianFuMediator");
var TaskMediator_1 = require("./mediator/TaskMediator");
var TianFuSession_1 = require("./session/TianFuSession");
var RankMediator_1 = require("./mediator/RankMediator");
var RankInfoMediator_1 = require("./mediator/RankInfoMediator");
var ZhuanMediator_1 = require("./mediator/ZhuanMediator");
var SettingMediator_1 = require("./mediator/SettingMediator");
var TaskSession_1 = require("./session/TaskSession");
var AdMergeDialogMediator_1 = require("./mediator/AdMergeDialogMediator");
var LeuokSession_1 = require("./session/LeuokSession");
var MergeShareMediator_1 = require("./mediator/MergeShareMediator");
var NewGetItemMediator_1 = require("./mediator/NewGetItemMediator");
var TreasureSession_1 = require("./session/TreasureSession");
var layaMaxUI_1 = require("../ui/layaMaxUI");
var MyGameInit = /** @class */ (function () {
    function MyGameInit() {
        this.app = App_1.default.getInstance();
    }
    MyGameInit.prototype.initSession = function () {
        this.app.regSession(BattleSession_1.default);
        this.app.regSession(BagSession_1.default);
        this.app.regSession(TimeGoldSession_1.default);
        this.app.regSession(SdkSession_1.default);
        this.app.regSession(PetSession_1.default);
        this.app.regSession(DataSession_1.default);
        this.app.regSession(NewerSession_1.default);
        this.app.regSession(SetSession_1.default);
        this.app.regSession(TianFuSession_1.default);
        this.app.regSession(TaskSession_1.default);
        this.app.regSession(TreasureSession_1.default);
        //根据平台注册
        if (Laya.Browser.onMiniGame) {
            this.app.regSession(LeuokSession_1.default);
        }
    };
    MyGameInit.prototype.initAction = function () {
    };
    MyGameInit.prototype.initSound = function () {
        this.app.gameSoundManager.reg(GameSoundManager_1.default.BTN, "sound/fx_button.wav");
    };
    MyGameInit.prototype.initScence = function () {
        this.app.regScene(MyGameInit.MainScene, layaMaxUI_1.ui.scene.MainSceneUI, MainSceneMediator_1.default, "sound/BGM_Title.mp3");
        this.app.regScene(MyGameInit.BattleScene, BattleScene_1.default, BattleSceneMediator_1.default);
        this.app.regScene(MyGameInit.RoleDialog, RoleDialog_1.default, RoleDialogMediator_1.default);
        this.app.regScene(MyGameInit.SettingDialog, layaMaxUI_1.ui.scene.SettingDialogUI, SettingMediator_1.default);
        this.app.regScene(MyGameInit.GameOverDialog, layaMaxUI_1.ui.scene.shengliUI, GameOverDialogMediator_1.default);
        this.app.regScene(MyGameInit.TreasureDialog, layaMaxUI_1.ui.scene.TreasureDialogUI, TreasureDialogMediator_1.default);
        this.app.regScene(MyGameInit.TimeGoldDialog, layaMaxUI_1.ui.scene.TimeGoldUI, TimeGoldDialogMediator_1.default);
        //this.app.regScene(MyGameInit.SignDialog, SignDialog, SignDialogMediator);
        //this.app.regScene(MyGameInit.GetGoldDialog, ui.scene.GetGoldDialogUI , GetGoldMediator);
        this.app.regScene(MyGameInit.FlyBoxDialog, layaMaxUI_1.ui.scene.FlyBoxUI, FlyBoxMediator_1.default);
        //this.app.regScene(MyGameInit.PetDialog, ui.scene.PetDialogUI, PetDialogMediator);
        this.app.regScene(MyGameInit.TestScene, layaMaxUI_1.ui.scene.TestLoginUI, TestLoginMediator_1.default);
        this.app.regScene(MyGameInit.KillBossDialog, layaMaxUI_1.ui.scene.KillBossDialogUI, KillBossDialogMediator_1.default);
        this.app.regScene(MyGameInit.NewerScene, layaMaxUI_1.ui.scene.NewerSceneUI, NewerMediator_1.default);
        this.app.regScene(MyGameInit.RankDialog, layaMaxUI_1.ui.scene.RankDialogUI, RankMediator_1.default);
        this.app.regScene(MyGameInit.SelectStage, layaMaxUI_1.ui.scene.SelectStageDialogUI, Stage2Mediator_1.default);
        this.app.regScene(MyGameInit.SelectStage2, layaMaxUI_1.ui.scene.SelectStage2UI, Stage2Mediator_1.default);
        this.app.regScene(MyGameInit.SelectStage3, layaMaxUI_1.ui.scene.SelectStage3UI, Stage2Mediator_1.default);
        this.app.regScene(MyGameInit.TIANFU, layaMaxUI_1.ui.scene.TianFuDialogUI, TianFuMediator_1.default);
        this.app.regScene(MyGameInit.TASK, layaMaxUI_1.ui.scene.TaskDialogUI, TaskMediator_1.default);
        this.app.regScene(MyGameInit.RANK_INFO, layaMaxUI_1.ui.scene.RankInfoDialogUI, RankInfoMediator_1.default);
        this.app.regScene(MyGameInit.ZHUAN, layaMaxUI_1.ui.scene.ZhuanUI, ZhuanMediator_1.default);
        this.app.regScene(MyGameInit.AD_MERGE_DIALOG, layaMaxUI_1.ui.scene.AdMergeDialogUI, AdMergeDialogMediator_1.default);
        this.app.regScene(MyGameInit.SHARE_MERGE_DIALOG, layaMaxUI_1.ui.scene.MergeShareDialogUI, MergeShareMediator_1.default);
        this.app.regScene(MyGameInit.NewGetItemDialog, layaMaxUI_1.ui.scene.GetItemDialogUI, NewGetItemMediator_1.default);
        //this.app.regScene( MyGameInit.TASK_REWARD , ui.scene.TaskRewardUI ,  );
    };
    MyGameInit.prototype.initConfig = function () {
        this.app.configManager.regConfig(MyGameInit.sys_stagemap, SysConfig_1.SysStageMap, "id");
        this.app.configManager.regConfig(MyGameInit.sys_enemy, SysConfig_1.SysEnemy, "id");
        this.app.configManager.regConfig(MyGameInit.sys_stageinfo, SysConfig_1.SysStageInfo, "id");
        this.app.configManager.regConfig(MyGameInit.sys_item, SysConfig_1.SysItem, "id");
        this.app.configManager.regConfig(MyGameInit.sys_compose, SysConfig_1.SysCompose, "itemId");
        this.app.configManager.regConfig(MyGameInit.sys_pet, SysConfig_1.SysPet, "id");
        this.app.configManager.regConfig(MyGameInit.sys_skill, SysConfig_1.SysSkill, "id");
        this.app.configManager.regConfig(MyGameInit.sys_talent, SysConfig_1.SysTalent, "id");
        this.app.configManager.regConfig(MyGameInit.sys_talentcost, SysConfig_1.SysTalentCost, "id");
        this.app.configManager.regConfig(MyGameInit.sys_mission, SysConfig_1.SysMission, "id");
        this.app.configManager.regConfig(MyGameInit.sys_talentinfo, SysConfig_1.SysTalentInfo, "id");
    };
    MyGameInit.MainScene = "scene/MainScene.scene";
    MyGameInit.SelectStage = "scene/SelectStageDialog.scene";
    MyGameInit.BattleScene = "scene/BattleScene.scene";
    MyGameInit.RoleDialog = "scene/RoleDialog.scene";
    MyGameInit.SettingDialog = "scene/SettingDialog.scene";
    MyGameInit.GameOverDialog = "scene/shengli.scene";
    MyGameInit.TreasureDialog = "scene/TreasureDialog.scene";
    MyGameInit.TimeGoldDialog = "scene/TimeGold.scene";
    MyGameInit.SignDialog = "scene/SignDialog.scene";
    MyGameInit.GetGoldDialog = "scene/GetGoldDialog.scene";
    MyGameInit.FlyBoxDialog = "scene/FlyBox.scene";
    MyGameInit.PetDialog = "scene/PetDialog.scene";
    MyGameInit.TestScene = "scene/TestLogin.scene";
    MyGameInit.KillBossDialog = "scene/KillBossDialog.scene";
    MyGameInit.NewerScene = "scene/NewerScene.scene";
    MyGameInit.RankDialog = "scene/RankDialog.scene";
    MyGameInit.SelectStage2 = "scene/SelectStage2.scene";
    MyGameInit.SelectStage3 = "scene/SelectStage3.scene";
    MyGameInit.TIANFU = "scene/TianFuDialog.scene";
    MyGameInit.TASK = "scene/TaskDialog.scene";
    MyGameInit.RANK_INFO = "scene/RankInfoDialog.scene";
    MyGameInit.ZHUAN = "scene/Zhuan.scene";
    MyGameInit.AD_MERGE_DIALOG = "scene/AdMergeDialog.scene";
    MyGameInit.SHARE_MERGE_DIALOG = "scene/MergeShareDialog.scene";
    MyGameInit.NewGetItemDialog = "scene/GetItemDialog.scene";
    MyGameInit.TASK_REWARD = "scene/TaslReward.scene";
    /**
     * 关卡的名字 和 管卡的信息 管卡的id等
     */
    MyGameInit.sys_stagemap = "sys_stagemap.txt";
    /**
     * 这个关卡的细节表 比如 里面有什么怪 boss怪是啥 掉啥物品
     */
    MyGameInit.sys_stageinfo = "sys_stageinfo.txt";
    /**
     * 敌人信息表
     */
    MyGameInit.sys_enemy = "sys_enemy.txt";
    /**
     * 物品武器表
     */
    MyGameInit.sys_item = "sys_item.txt";
    /**
     * 合成概率
     */
    MyGameInit.sys_compose = "sys_compose.txt";
    /**
     * 宠物表
     */
    MyGameInit.sys_pet = "sys_pet.txt";
    /**
     * 技能表
     */
    MyGameInit.sys_skill = "sys_skill.txt";
    /**
     * 天赋表
     */
    MyGameInit.sys_talent = "sys_talent.txt";
    MyGameInit.sys_talentcost = "sys_talentcost.txt";
    MyGameInit.sys_mission = "sys_mission.txt";
    MyGameInit.sys_talentinfo = "sys_talentinfo.txt";
    return MyGameInit;
}());
exports.default = MyGameInit;
},{"../game/App":5,"../game/GameSoundManager":10,"../ui/layaMaxUI":83,"./config/SysConfig":23,"./mediator/AdMergeDialogMediator":25,"./mediator/BattleSceneMediator":26,"./mediator/FlyBoxMediator":27,"./mediator/GameOverDialogMediator":28,"./mediator/KillBossDialogMediator":29,"./mediator/MainSceneMediator":30,"./mediator/MergeShareMediator":31,"./mediator/NewGetItemMediator":32,"./mediator/NewerMediator":33,"./mediator/RankInfoMediator":34,"./mediator/RankMediator":35,"./mediator/RoleDialogMediator":36,"./mediator/SettingMediator":37,"./mediator/Stage2Mediator":38,"./mediator/TaskMediator":39,"./mediator/TestLoginMediator":40,"./mediator/TianFuMediator":41,"./mediator/TimeGoldDialogMediator":42,"./mediator/TreasureDialogMediator":43,"./mediator/ZhuanMediator":44,"./scene/BattleScene":48,"./scene/RoleDialog":62,"./session/BagSession":66,"./session/BattleSession":67,"./session/DataSession":68,"./session/LeuokSession":69,"./session/NewerSession":71,"./session/PetSession":72,"./session/SdkSession":73,"./session/SetSession":74,"./session/TaskSession":75,"./session/TianFuSession":76,"./session/TimeGoldSession":77,"./session/TreasureSession":78}],23:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var App_1 = require("../../game/App");
var MyGameInit_1 = require("../MyGameInit");
var BattleSession_1 = require("../session/BattleSession");
var SysStageMap = /** @class */ (function () {
    function SysStageMap() {
        this.id = 0;
        this.name = "";
        this.image = "";
        this.sceneImage = "";
        this.status = "";
        this.mapType = "";
        this.winCondition = "";
        this.beforeId = "";
        this.bgMusic = "";
        this.npcDamagescale = "";
        this.npcHealthscale = "";
        this.description = "";
    }
    return SysStageMap;
}());
exports.SysStageMap = SysStageMap;
var SysStageInfo = /** @class */ (function () {
    function SysStageInfo() {
        this.id = 0;
        this.starID = 0;
        this.stageType = 0;
        this.monsterArr = [];
        this.monsterBoss = 0;
        this.monsterGold = 0;
        this.bossGold = 0;
        this.dropbuff = "";
        this.lvMin = 0;
        this.lvMax = 0;
        this.collectDrop = 0;
        this.nextId = 0;
        this.stageNum = 0;
        this.stageCd = 0;
        this.hangUp = 0;
    }
    Object.defineProperty(SysStageInfo.prototype, "monsterGroups", {
        set: function (value) {
            var arr = value.split(",");
            for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
                var i = arr_1[_i];
                this.monsterArr.push(parseInt(i));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SysStageInfo.prototype, "dropGold", {
        set: function (value) {
            var a = value.split(",");
            this.monsterGold = parseInt(a[0]);
            if (a.length == 1) {
                this.bossGold = this.monsterGold;
            }
            else {
                this.bossGold = parseInt(a[1]);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SysStageInfo.prototype, "collect", {
        set: function (value) {
            var a = value.split(",");
            this.lvMin = parseInt(a[0]);
            if (a.length == 1) {
                this.lvMax = this.lvMin;
            }
            else {
                this.lvMax = parseInt(a[1]);
            }
        },
        enumerable: true,
        configurable: true
    });
    SysStageInfo.init = function () {
        var arr = App_1.default.getInstance().configManager.getDataArr(MyGameInit_1.default.sys_stageinfo);
        var sys = null;
        for (var _i = 0, arr_2 = arr; _i < arr_2.length; _i++) {
            var i = arr_2[_i];
            if (i.stageType == 2) {
                continue;
            }
            if (sys != null) {
                sys.nextId = i.id;
            }
            sys = i;
        }
    };
    SysStageInfo.getStageInfo = function (stageId) {
        var arr = App_1.default.getInstance().configManager.getDataArr(MyGameInit_1.default.sys_stageinfo);
        var arr1 = [];
        for (var _i = 0, arr_3 = arr; _i < arr_3.length; _i++) {
            var i = arr_3[_i];
            if (i.starID == stageId) {
                arr1.push(i);
            }
        }
        return arr1;
    };
    return SysStageInfo;
}());
exports.SysStageInfo = SysStageInfo;
var SysEnemy = /** @class */ (function () {
    function SysEnemy() {
        this.id = 0;
        this.enemyLevel = 0;
        this.enemyHp = 0;
        this.enemyAttk = 0;
        this.enemymode = 0;
        this.skillArr = [];
    }
    Object.defineProperty(SysEnemy.prototype, "skillId", {
        set: function (value) {
            var arr = value.split(",");
            for (var _i = 0, arr_4 = arr; _i < arr_4.length; _i++) {
                var i = arr_4[_i];
                this.skillArr.push(parseInt(i));
            }
        },
        enumerable: true,
        configurable: true
    });
    return SysEnemy;
}());
exports.SysEnemy = SysEnemy;
var SysItem = /** @class */ (function () {
    function SysItem() {
        this.id = 0;
        this.name = "";
        this.itemType = 0;
        this.itemLevel = 0;
        this.itemQuality = 0;
        this.attack = 0;
        this.crit = 0;
        this.defense = 0;
        this.hitPoint = 0;
        this.move = 0;
        this.sellPrice = 0;
        this.dnaCost = 0;
        this.dnaCostadd = 0;
        this._attributes = "";
        this.attributesValue = [];
        this.attributesRandom = [];
        this.effect = 0;
    }
    Object.defineProperty(SysItem.prototype, "attributes", {
        set: function (value) {
            var s = value.split("|");
            for (var _i = 0, s_1 = s; _i < s_1.length; _i++) {
                var i = s_1[_i];
                var a = i.split(",");
                this.attributesValue.push(parseInt(a[0]));
                this.attributesRandom.push(parseInt(a[1]));
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 随机出几个属性
     */
    SysItem.prototype.getAttNum = function () {
        return App_1.default.RandomWeight(this.attributesValue, this.attributesRandom);
    };
    SysItem.init = function () {
        var arr = App_1.default.getInstance().configManager.getDataArr(MyGameInit_1.default.sys_item);
        for (var _i = 0, arr_5 = arr; _i < arr_5.length; _i++) {
            var i = arr_5[_i];
            SysItem.ItemMap[i.itemType + "_" + i.itemLevel] = i;
        }
    };
    SysItem.prototype.getArr = function () {
        if (this.itemType == BattleSession_1.EQUIP_TYPE.WEAPON) {
            return ["攻击力", this.attack];
        }
        else if (this.itemType == BattleSession_1.EQUIP_TYPE.HEAD) {
            return ["防御力", this.defense];
        }
        else if (this.itemType == BattleSession_1.EQUIP_TYPE.PET) {
            return ["暴击", this.crit];
        }
        else if (this.itemType == BattleSession_1.EQUIP_TYPE.BODY) {
            return ["血量", this.hitPoint];
        }
        else if (this.itemType == BattleSession_1.EQUIP_TYPE.HORSE) {
            return ["移动", this.move];
        }
    };
    SysItem.ItemMap = {};
    return SysItem;
}());
exports.SysItem = SysItem;
var SysCompose = /** @class */ (function () {
    function SysCompose() {
        this.id = 0;
        this.itemId = 0;
        this.item2 = 0;
        this.random = 0;
    }
    Object.defineProperty(SysCompose.prototype, "meterial1", {
        set: function (value) {
            this.itemId = parseInt(value.split(",")[0]);
        },
        enumerable: true,
        configurable: true
    });
    return SysCompose;
}());
exports.SysCompose = SysCompose;
var SysPet = /** @class */ (function () {
    function SysPet() {
        this.id = 0;
        this.itemId = 0;
        this.playerEquipLvMin = 0;
        this.playerEquipLvMax = 0;
        this.petEquipLvMin = 0;
        this.petEquipLvMax = 0;
        this.petNum = 0;
        this.equipmentNum = 0;
        this.boxCost = 0;
        this.gold = 0;
        this.txt = "";
    }
    Object.defineProperty(SysPet.prototype, "equipmentLevel", {
        set: function (value) {
            var arr = value.split(",");
            this.playerEquipLvMin = parseInt(arr[0]);
            this.playerEquipLvMax = parseInt(arr[1]);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SysPet.prototype, "petDrop", {
        set: function (value) {
            var arr = value.split(",");
            this.petEquipLvMin = parseInt(arr[0]);
            this.petEquipLvMax = parseInt(arr[1]);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SysPet.prototype, "equipmentDrop", {
        set: function (value) {
            var arr = value.split(",");
            this.equipLvMin = parseInt(arr[0]);
            this.equipLvMax = parseInt(arr[1]);
        },
        enumerable: true,
        configurable: true
    });
    SysPet.getSysPet = function (itemId) {
        var sys = App_1.default.getInstance().configManager.getDataArr(MyGameInit_1.default.sys_pet);
        var arr = [];
        for (var _i = 0, sys_1 = sys; _i < sys_1.length; _i++) {
            var i = sys_1[_i];
            if (i.itemId == itemId) {
                arr.push(i);
            }
        }
        return arr;
    };
    SysPet.getLv = function (itemId, value) {
        var arr = SysPet.getSysPet(itemId);
        for (var _i = 0, arr_6 = arr; _i < arr_6.length; _i++) {
            var i = arr_6[_i];
            if (value >= i.playerEquipLvMin && value <= i.playerEquipLvMax) {
                return i;
            }
        }
        return null;
    };
    return SysPet;
}());
exports.SysPet = SysPet;
var SysSkill = /** @class */ (function () {
    function SysSkill() {
        this.id = 0;
        this.skillName = "";
        this.skillDescription = "";
        this.skillRange = 0;
        this.skillSpeed = 0;
        this.skillStatus = 0;
        this.skillTime = 0;
    }
    return SysSkill;
}());
exports.SysSkill = SysSkill;
var SysTalentInfo = /** @class */ (function () {
    function SysTalentInfo() {
        this.id = 0;
        this.talentInfo = "";
    }
    return SysTalentInfo;
}());
exports.SysTalentInfo = SysTalentInfo;
var Equip = /** @class */ (function () {
    function Equip() {
        /**
         * 部位
         */
        this.type = 0;
        this.attack = 0;
        this.crit = 0;
        this.defense = 0;
        this.hitPoint = 0;
        this.move = 0;
        this.lv = 0;
        this.isEquip = false;
        this.id = 0;
    }
    Equip.prototype.reset = function () {
        this.attack = 0;
        this.crit = 0;
        this.defense = 0;
        this.hitPoint = 0;
        this.move = 0;
    };
    Equip.prototype.reset1 = function () {
        this.attack = 1;
        this.crit = 1;
        this.defense = 1;
        this.hitPoint = 1;
        this.move = 1;
    };
    Equip.prototype.getSysItem = function () {
        return App_1.default.getInstance().configManager.getConfig(MyGameInit_1.default.sys_item, this.id);
    };
    Equip.prototype.add = function (equip) {
        this.attack += equip.attack;
        this.crit += equip.crit;
        this.defense += equip.defense;
        this.hitPoint += equip.hitPoint;
        this.move += equip.move;
    };
    Equip.prototype.multiply = function (equip) {
        this.attack *= equip.attack;
        this.crit *= equip.crit;
        this.defense *= equip.defense;
        this.hitPoint *= equip.hitPoint;
        this.move *= equip.move;
        this.attack = Math.ceil(this.attack);
        this.crit = Math.ceil(this.crit);
        this.defense = Math.ceil(this.defense);
        this.hitPoint = Math.ceil(this.hitPoint);
        this.move = Math.ceil(this.move);
    };
    Equip.prototype.reduce = function (equip) {
        this.attack -= equip.attack;
        this.crit -= equip.crit;
        this.defense -= equip.defense;
        this.hitPoint -= equip.hitPoint;
        this.move -= equip.move;
    };
    Equip.prototype.copy = function () {
        var e = new Equip();
        e.attack = this.attack;
        e.crit = this.crit;
        e.defense = this.defense;
        e.hitPoint = this.hitPoint;
        e.move = this.move;
        return e;
    };
    Equip.prototype.copyPercent = function () {
        var e = new Equip();
        e.attack = this.attack / 100;
        e.crit = this.crit / 100;
        e.defense = this.defense / 100;
        e.hitPoint = this.hitPoint / 100;
        e.move = this.move / 100;
        return e;
    };
    return Equip;
}());
exports.Equip = Equip;
var SysTalent = /** @class */ (function () {
    function SysTalent() {
        this.id = 0;
        this.addAttack = 0;
        this.hitPoint = 0;
        this.addMove = 0;
        this.addDefense = 0;
        this.addCrit = 0;
        this.dropGold = 0;
        this.addCompose = 0;
        this.dropItem = 0;
        this.offlineGold = 0;
    }
    return SysTalent;
}());
exports.SysTalent = SysTalent;
var SysTalentCost = /** @class */ (function () {
    function SysTalentCost() {
        this.id = 0;
        this.talentCost = 0;
    }
    return SysTalentCost;
}());
exports.SysTalentCost = SysTalentCost;
var SysMission = /** @class */ (function () {
    function SysMission() {
        this.id = 0;
        this.missionType = 0;
        this.missionNamesign = 0;
        this.previousId = 0;
        this.missionBegin = 0;
        this.gold = 0;
        this.missionIteamId = "";
        this.missionName = "";
        this.missionTxt = "";
        this.type = 0;
        /**
         * -1 没有子条件
         */
        this.subType = -1;
        this.max = 0;
    }
    Object.defineProperty(SysMission.prototype, "conditions", {
        set: function (value) {
            if (value == "0") {
                return;
            }
            var arr = value.split(",");
            this.type = parseInt(arr[0]);
            if (arr.length == 1) {
                this.max = 1;
            }
            else if (arr.length == 2) {
                this.max = parseInt(arr[1]);
            }
            else {
                this.subType = parseInt(arr[1]);
                this.max = parseInt(arr[2]);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SysMission.prototype, "missionGold", {
        set: function (value) {
            var a = value.split(",");
            this.gold = parseInt(a[1]);
        },
        enumerable: true,
        configurable: true
    });
    return SysMission;
}());
exports.SysMission = SysMission;
var Res = /** @class */ (function () {
    function Res() {
    }
    Res.getItemUrl = function (id) {
        return "icons/" + id + ".png";
    };
    Res.getItemBorder = function (quality) {
        return "sence/kuang" + (quality - 1) + ".png";
    };
    return Res;
}());
exports.Res = Res;
},{"../../game/App":5,"../MyGameInit":22,"../session/BattleSession":67}],24:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyEffect = /** @class */ (function () {
    function MyEffect() {
    }
    MyEffect.clickEffect = function (sp) {
        var t = new Laya.Tween();
        t.from(sp, { scaleX: 0.9, scaleY: 0.9 }, 80);
    };
    MyEffect.init = function () {
        Laya.stage.on(Laya.Event.CLICK, null, MyEffect.clickFun);
    };
    MyEffect.clickFun = function (e) {
        if (e.target instanceof Laya.Button) {
            if (e.target.anchorX == 0.5 && e.target.anchorY == 0.5) {
                MyEffect.clickEffect(e.target);
            }
        }
    };
    MyEffect.delayTweenBtn = function (btn, delay) {
        btn.visible = false;
        Laya.timer.once(delay, MyEffect, MyEffect.eff, [btn], false);
    };
    MyEffect.eff = function (btn) {
        btn.visible = true;
        var t = new Laya.Tween();
        t.from(btn, { scaleX: 0, scaleY: 0 }, 200, Laya.Ease.backOut);
    };
    MyEffect.alhpa = function (s, target, time) {
        if (time === void 0) { time = 100; }
        if (target == 1) {
            s.alpha = 0;
        }
        else {
            s.alpha = 1;
        }
        var t = new Laya.Tween();
        t.to(s, { alpha: target }, time);
    };
    MyEffect.BigSmallEffect = function (s) {
        s.anchorX = s.anchorY = 0.5;
        var t = new Laya.Tween();
        s.scaleX = s.scaleY = 0.5;
        t.to(s, { scaleX: 0.8, scaleY: 0.8, alpha: 1, rotation: 90 }, 600, Laya.Ease.backInOut, null, Math.random() * 100);
    };
    /**
     * 请确保你的方法内回调其他函数的时候 不会再次调用
     * 因为laya会给他重新赋值
     * 这个里面有20个
     * 也就是说回调里 连续调用20次 会把第一个重新赋值
     */
    MyEffect.getP00 = function () {
        if (MyEffect.p00Array.length == 0) {
            for (var i = 0; i < 20; i++) {
                var p = new Laya.Point(0, 0);
                MyEffect.p00Array.push(p);
            }
        }
        if (MyEffect.p00Index > 19) {
            MyEffect.p00Index = 0;
        }
        return MyEffect.p00Array[MyEffect.p00Index++].setTo(0, 0);
    };
    MyEffect.flyToTarget = function (a, b) {
        var ap = a.localToGlobal(MyEffect.getP00());
        a.x = ap.x;
        a.y = ap.y;
        Laya.stage.addChild(a);
        var p = b.localToGlobal(MyEffect.getP00());
        var t = new Laya.Tween();
        t.to(a, { x: p.x, y: p.y }, 600, Laya.Ease.backIn, new Laya.Handler(null, MyEffect.flyCom, [a, b]));
    };
    MyEffect.flyCom = function (a, b) {
        a.visible = false;
        MyEffect.smallToBigEffect(b);
    };
    MyEffect.smallToBigEffect = function (a) {
        a.scale(0.7, 0.7);
        var t = new Laya.Tween();
        t.to(a, { scaleX: 1, scaleY: 1 }, 100, Laya.Ease.backOut);
    };
    MyEffect.t2 = function (a, sx, value, time, delay) {
        var t = new Laya.Tween();
        var obj = {};
        obj[sx] = value;
        t.from(a, obj, time, null, null, delay);
    };
    MyEffect.t3 = function () {
        var t = new Laya.Tween();
    };
    MyEffect.p00Array = [];
    MyEffect.p00Index = 0;
    return MyEffect;
}());
exports.default = MyEffect;
},{}],25:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Mediator_1 = require("../../game/Mediator");
var SysConfig_1 = require("../config/SysConfig");
var SdkSession_1 = require("../session/SdkSession");
var RotationEffect_1 = require("../scene/RotationEffect");
var MyGameInit_1 = require("../MyGameInit");
var App_1 = require("../../game/App");
var MyEffect_1 = require("../effect/MyEffect");
var AdMergeDialogMediator = /** @class */ (function (_super) {
    __extends(AdMergeDialogMediator, _super);
    function AdMergeDialogMediator() {
        var _this = _super.call(this) || this;
        _this.sdkSession = null;
        _this.bagSession = null;
        return _this;
    }
    AdMergeDialogMediator.prototype.setSprite = function (sp) {
        this.dialog = sp;
    };
    AdMergeDialogMediator.prototype.setParam = function (equip) {
        this.equip = equip;
    };
    AdMergeDialogMediator.prototype.init = function () {
        RotationEffect_1.default.play(this.dialog.light);
        var sys = App_1.default.getConfig(MyGameInit_1.default.sys_item, this.equip.id);
        var arr = sys.getArr();
        this.dialog.gongTxt.text = arr[0] + ":" + arr[1];
        this.setCell(this.dialog.c1, this.equip.id);
        this.setCell(this.dialog.c2, this.equip.id);
        this.setCell(this.dialog.c3, this.equip.id + 2);
        this.dialog.cancelBtn.visible = false;
        Laya.timer.once(3000, this, this.timerFun);
        this.dialog.v1.adbox.visible = true;
        this.dialog.v1.sharebox.visible = false;
        this.sdkSession.initAdBtn(this.dialog.v1.AdBtn, SdkSession_1.default.AD_DIALOG);
        this.dialog.v1.ani1.play(0, true);
        this.dialog.v1.AdBtn.clickHandler = new Laya.Handler(this, this.AdBtn_click);
    };
    AdMergeDialogMediator.prototype.timerFun = function () {
        this.dialog.cancelBtn.visible = true;
        MyEffect_1.default.alhpa(this.dialog.cancelBtn, 1, 150);
    };
    AdMergeDialogMediator.prototype.setCell = function (c, id) {
        var sys = App_1.default.getConfig(MyGameInit_1.default.sys_item, id);
        c.logoImg.skin = SysConfig_1.Res.getItemUrl(id);
        c.selectImg.visible = false;
        c.useImg.visible = false;
        c.canHeEffectView.visible = false;
        c.fc.value = sys.itemLevel + "";
        c.bgImg.skin = SysConfig_1.Res.getItemBorder(sys.itemQuality);
    };
    AdMergeDialogMediator.prototype.AdBtn_click = function () {
        this.sdkSession.playAdVideo(SdkSession_1.default.AD_DIALOG, new Laya.Handler(this, this.overFun));
    };
    AdMergeDialogMediator.prototype.overFun = function () {
        var sys = App_1.default.getConfig(MyGameInit_1.default.sys_item, this.equip.id);
        var e = this.bagSession.getNewItem(sys.itemType, this.equip.lv + 2);
        this.bagSession.addEquipInBag(e);
        App_1.default.dialog(MyGameInit_1.default.NewGetItemDialog, false, e);
        this.dialog.close();
    };
    return AdMergeDialogMediator;
}(Mediator_1.default));
exports.default = AdMergeDialogMediator;
},{"../../game/App":5,"../../game/Mediator":12,"../MyGameInit":22,"../config/SysConfig":23,"../effect/MyEffect":24,"../scene/RotationEffect":63,"../session/SdkSession":73}],26:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Mediator_1 = require("../../game/Mediator");
var App_1 = require("../../game/App");
var MyGameInit_1 = require("../MyGameInit");
var BattleSession_1 = require("../session/BattleSession");
var BagSession_1 = require("../session/BagSession");
var TimeLogo_1 = require("../scene/TimeLogo");
var MyEvent_1 = require("../MyEvent");
var NewerSession_1 = require("../session/NewerSession");
var SysConfig_1 = require("../config/SysConfig");
var DataSession_1 = require("../session/DataSession");
var LogType_1 = require("../session/LogType");
var Tips_1 = require("../scene/Tips");
var GameEvent_1 = require("../../game/GameEvent");
var PlayerHitObject_1 = require("../scene/PlayerHitObject");
var HitObject_1 = require("../scene/HitObject");
var BattleDisplay_1 = require("../scene/BattleDisplay");
var Boss1_1 = require("../scene/Boss1");
var MyEffect_1 = require("../effect/MyEffect");
var DropItem_1 = require("../scene/DropItem");
var DropBuffer_1 = require("../scene/DropBuffer");
var MyClip_1 = require("../../game/MyClip");
var MonsterDisplay_1 = require("../scene/MonsterDisplay");
var AddHpDisplay_1 = require("../scene/AddHpDisplay");
var Boss2_1 = require("../scene/Boss2");
var CurveMove_1 = require("../../game/CurveMove");
var MyAni_1 = require("../../game/MyAni");
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var BattleSceneMediator = /** @class */ (function (_super) {
    __extends(BattleSceneMediator, _super);
    function BattleSceneMediator() {
        var _this = _super.call(this) || this;
        _this.bagSession = null;
        _this.petSession = null;
        _this.battleSession = null;
        _this.newerSession = null;
        _this.dataSession = null;
        _this.tianFuSession = null;
        _this.sdkSession = null;
        _this.buffConfig = {};
        _this.maxHp = 0;
        _this.nowHp = 0;
        _this.sendhpevent = false;
        _this.isGameOver = false;
        _this.cameraSpeed = 0.7;
        _this.bg1 = new Laya.Sprite();
        _this.bg2 = new Laya.Sprite();
        _this.bg3 = new Laya.Sprite();
        _this.shu1 = new Laya.Sprite();
        _this.shu2 = new Laya.Sprite();
        _this.shu3 = new Laya.Sprite();
        _this.shu4 = new Laya.Sprite();
        _this.spriteArr = [];
        _this.bgArr = [];
        _this.speed = 0.4;
        _this.playerStat = 0;
        _this.direction = 1;
        /**
         * 移动方向
         */
        _this.moveStat = 0;
        _this.twover = true;
        /**
         * 主角自己死亡
         */
        _this.isDead = false;
        /**
         * 角色能够移动
         */
        _this.playerCanMove = true;
        /**
        * 现在角色的状态
        */
        _this.nowPlayerStat = -1;
        /**
        * 是否已经复活了怪物
        */
        _this.isRebirth = false;
        _this.buffMap = {};
        _this.lastDropEquipTime = 0;
        _this.AUTO_TURN_X = 0;
        _this.playerMaxRight = 0;
        _this.myBuffMap = {};
        _this.isHangUp = false;
        _this.alnum = 0;
        if (Laya.Browser.onMiniGame == false) {
            Laya.stage.on(Laya.Event.KEY_PRESS, _this, _this.kkk);
        }
        _this.configOne(BattleSession_1.EQUIP_TYPE.BUFF_ATT, 90, 78, 1.5, "res/atlas/texiao/jiagongji.atlas", ["texiao/jiagongji/", 1, 14]);
        _this.configOne(BattleSession_1.EQUIP_TYPE.BUFF_DEF, 107, 111, 2, "res/atlas/texiao/jiafangyu.atlas", ["texiao/jiafangyu/", 1, 12]);
        _this.configOne(BattleSession_1.EQUIP_TYPE.BUFF_SPEED, 101, 53, 2, "res/atlas/texiao/jiasudu.atlas", ["texiao/jiasudu/", 1, 9]);
        _this.configOne(BattleSession_1.EQUIP_TYPE.BUFF_CRIT, 101, 78, 2, "res/atlas/texiao/jiabaoji.atlas", ["texiao/jiabaoji/", 1, 13]);
        _this.configOne(100, 90, 46, 2, "res/atlas/texiao/jiaxue.atlas", ["texiao/jiaxue/", 1, 14]);
        return _this;
    }
    BattleSceneMediator.prototype.configOne = function (type, x1, y1, scale, atlas, arr) {
        var a1 = [];
        var t = arr[0];
        var start = arr[1];
        var end = arr[2];
        for (var i = start; i <= end; i++) {
            var str = "";
            if (i <= 9) {
                str = "0" + i;
            }
            else {
                str = i + "";
            }
            a1.push(t + str + ".png");
        }
        this.buffConfig[type] = { x1: x1, y1: y1, scale: scale, atlas: atlas, arr: a1 };
    };
    BattleSceneMediator.prototype.kkk = function () {
        var lv = 26;
        var a = App_1.default.getConfig(MyGameInit_1.default.sys_item, 200000 + lv);
        this.bagSession.addEquipInBagBySys(a);
        var b = App_1.default.getConfig(MyGameInit_1.default.sys_item, 300000 + lv);
        this.bagSession.addEquipInBagBySys(b);
        var c = App_1.default.getConfig(MyGameInit_1.default.sys_item, 400000 + lv);
        this.bagSession.addEquipInBagBySys(c);
        var d = App_1.default.getConfig(MyGameInit_1.default.sys_item, 500000 + lv);
        this.bagSession.addEquipInBagBySys(d);
        var e = App_1.default.getConfig(MyGameInit_1.default.sys_item, 600000 + lv);
        this.bagSession.addEquipInBagBySys(e);
    };
    BattleSceneMediator.prototype.setSprite = function (sp) {
        this.battleScene = sp;
        this.playerView = new layaMaxUI_1.ui.scene.PlayerViewUI();
        this.playerView.anchorX = 0.5;
        this.playerView.anchorY = 1;
        this.player = this.playerView.player;
        this.playerAni = this.player.player;
        this.pet = new layaMaxUI_1.ui.scene.xiaoguaiUI();
        this.player.addChild(this.pet);
        this.battleSp = this.battleScene.battleSp;
        this.pet.pos(-130, 55);
        this.setY(this.playerView);
        this.playerView.x = 200;
        this.playerView.zOrder = 105;
        this.playerHitObject = new PlayerHitObject_1.default();
        this.playerHitObject.setPlayer(this.player);
        this.playerHitObject.attackTargetHandler = new Laya.Handler(this, this.atkTargetFun);
        this.playerHitObject.attackComHanlder = new Laya.Handler(this, this.atkComFun);
        this.playerAni.guang.visible = false;
    };
    BattleSceneMediator.prototype.init = function () {
        if (this.sdkSession && this.newerSession.isNew == false) {
            this.sdkSession.lp();
        }
        this.bagSession.buffEquip.reset1();
        BattleSceneMediator.ENEMY_GROUP = this.battleSession.sys.stageNum;
        this.battleScene.once(Laya.Event.UNDISPLAY, this, this.undisFun);
        this.battleSp.scale(1, 1);
        this.battleSp.x = 0;
        this.battleSp.y = 0;
        this.battleSp.addChild(this.playerView);
        this.playerView.x = 200;
        this.player.scaleX = 1;
        this.onEQUIP_UPDATE();
        this.onATTRIBUTE_UPDATE();
        this.onGOLD_UPDATE();
        this.onEGG_UPDATE();
        this.battleScene.gold.on(Laya.Event.CLICK, this, this.gold_click);
        var t = new TimeLogo_1.default();
        t.setUI(this.battleScene.gold);
        this.battleScene.guaJiClip.index = 0;
        App_1.default.sendEvent(MyEvent_1.default.ENTER_BATTLE_SCENE);
        this.onRED_UPDATE();
        if (this.newerSession.isNew) {
            var c = Laya.Browser.now() - DataSession_1.default.START_TIME;
            // this.dataSession.log(LogType.LOGIN_TIME, c + "");
        }
        else {
            this.battleScene.tiaoguo.visible = false;
            this.battleScene.rightHand.visible = false;
        }
        this.battleScene.guaJiClip.visible = true;
        if (this.battleSession.sys.stageType == 2) {
            this.battleScene.guaJiClip.visible = false;
        }
        if (this.battleSession.stageNum == this.battleSession.sys.id) {
            this.battleScene.guaJiClip.visible = false;
        }
        this.battleScene.guaJiClip.on(Laya.Event.CLICK, this, this.clickGuaBtnFun);
        if (this.battleSession.isBossStage() == false) {
            //Laya.SoundManager.playMusic( "sound/BGM_Stage1.mp3" );
            App_1.default.getInstance().gameSoundManager.playBgm("sound/BGM_Stage1.mp3");
        }
        else {
            //Laya.SoundManager.playMusic( "sound/BGM_Dungeon.mp3" );
            App_1.default.getInstance().gameSoundManager.playBgm("sound/BGM_Dungeon.mp3");
        }
        if (this.battleSession.isBossStage() == false && this.newerSession.isNew == false) {
            this.battleScene.flyBoxStart();
        }
        this.isHangUp = false;
        this.lastDropEquipTime = Laya.Browser.now();
        //if( this.battleSession.sys.id <= 2 ){
        BattleSceneMediator.DROP_ITEM_TIME = this.battleSession.sys.stageCd; //4000;
        BattleSceneMediator.HANG_UP_DROP_TIME = this.battleSession.sys.hangUp; //8000;
        //}
        this.battleSession.deleteNoPlayStage(this.battleSession.sys.id);
        App_1.default.getInstance().eventManager.once(GameEvent_1.default.OPEN_SCENE_START, this, this.exitFun);
        // if( this.newerSession.isNew == false ){
        //     if( this.buffLayer == null ){
        //         this.buffLayer = new ui.scene.BufferLayerUI();
        //         //this.player.addChild( this.buffLayer );
        //         this.setBuffPos( this.buffLayer.att , EQUIP_TYPE.BUFF_ATT );
        //         this.setBuffPos( this.buffLayer.crit , EQUIP_TYPE.BUFF_CRIT );
        //         this.setBuffPos( this.buffLayer.def , EQUIP_TYPE.BUFF_DEF );
        //         this.setBuffPos( this.buffLayer.speed , EQUIP_TYPE.BUFF_SPEED );
        //     }else{
        //         this.buffLayer.att.visible = false;
        //         this.buffLayer.crit.visible = false;
        //         this.buffLayer.def.visible = false;
        //         this.buffLayer.speed.visible = false;
        //     }
        // }
        this.calculationWidth();
        this.equipUpdateFun();
        this.nowHp = this.bagSession.playerEquip.hitPoint;
        this.maxHp = this.nowHp;
        this.onlyResetHp();
        this.attUpdateFun();
        if (this.isBossStage()) {
            this.moveToBoss();
        }
        if (this.newerSession.isNew) {
            this.playerCanMove = false;
        }
        else {
            this.playerCanMove = true;
        }
        this.setPlayerStat(1);
        this.startGame();
        this.battleScene.fightbox.on(Laya.Event.MOUSE_DOWN, this, this.moveFun);
        Laya.stage.on(Laya.Event.MOUSE_UP, this, this.mouseUpFun);
        this.playerAni.dead.gotoAndStop(0);
        this.playerAni.wait.gotoAndStop(0);
        this.playerStop();
        this.isGameOver = false;
        this.isDead = false;
        this.nowPlayerStat = -1;
        this.playerView.guaJiSp.visible = false;
        this.battleScene.setNowGold(this.bagSession.gold);
    };
    BattleSceneMediator.prototype.atkTargetFun = function (ho) {
        this.attacking(ho);
    };
    BattleSceneMediator.prototype.atkComFun = function (ho) {
    };
    /**
     * 攻击计算公式
     */
    BattleSceneMediator.prototype.attacking = function (monster) {
        var atk = this.bagSession.playerEquip.attack;
        var isCrit = Math.random() * 1000 < this.bagSession.playerEquip.crit;
        if (isCrit) {
            atk *= 1.5;
        }
        atk = Math.ceil(atk - 0 + Math.random() * 10);
        monster.changeHp(-atk);
        this.flyHitEffect(atk, isCrit, monster);
        this.playHitEffect(isCrit);
        this.changeHp(this.getHurtHp(monster.getHurt()));
        if (monster.nowHp <= 0) {
            this.killMonster(monster);
        }
        else {
            monster.hitIng(); //挨打动画
            //怪物没死 他会反击
            //let myhp = this.getHurtHp( monster.getHurt() );//monster.sysEnemy.enemyAttk
            //this.setNowPlayerHp(this.nowHp -= myhp);
        }
        if (monster.disType == BattleDisplay_1.DISPLAY_TYPE.MONSTER) {
            //只有小怪有后退动作
            monster.x += (monster.getScaleX() * 20);
        }
        this.isRebirth = false;
    };
    BattleSceneMediator.prototype.getHurtHp = function (atk) {
        var myhp = atk - this.bagSession.playerEquip.defense;
        if (myhp <= 0) {
            myhp = Math.ceil(Math.random() * 20) + 1;
            //没破防 随机费5滴血
        }
        if (this.newerSession.isNew) {
            myhp = 50;
        }
        return myhp;
    };
    BattleSceneMediator.prototype.changeHp = function (value) {
        this.setNowPlayerHp(this.nowHp - value);
    };
    BattleSceneMediator.prototype.setNowPlayerHp = function (value) {
        if (this.nowHp <= 0) {
            return;
        }
        this.nowHp = value;
        this.nowHp = Math.max(this.nowHp, 0);
        if (this.newerSession.isNew && (this.sendhpevent == false)) {
            if (this.nowHp < (this.maxHp / 2)) {
                this.sendhpevent = true;
                this.longFly();
            }
        }
        this.nowHp = Math.min(this.maxHp, this.nowHp);
        this.resetNowBlood(this.nowHp);
        if (this.nowHp <= 0) {
            this.isDead = true;
            this.playerDie();
        }
    };
    /**
     * 添加子弹
     * @param ho
     */
    BattleSceneMediator.prototype.addHitObject = function (ho) {
        this.spriteArr.push(ho);
        ho.zOrder = 105;
    };
    /**
   * 一般用来移除子弹
   * @param ho
   */
    BattleSceneMediator.prototype.removeHitObject = function (ho) {
        var i = this.spriteArr.indexOf(ho);
        if (i != -1) {
            this.spriteArr.splice(i, 1);
        }
    };
    /**
     * player死亡
     */
    BattleSceneMediator.prototype.playerDie = function () {
        this.sdkSession.lp(false);
        //Laya.SoundManager.stopMusic();
        App_1.default.getInstance().gameSoundManager.stopBgm();
        //Laya.SoundManager.playSound("sound/fx_lose.wav");
        App_1.default.getInstance().gameSoundManager.playEffect("sound/fx_lose.wav");
        this.deadFun();
        var e = this.bagSession.destoryItem();
        if (e == null) {
            //没有可以损毁的装备
            return;
        }
        var m = new layaMaxUI_1.ui.scene.maozhuangbeiUI();
        m.kuang.skin = SysConfig_1.Res.getItemBorder(e.getSysItem().itemQuality);
        m.ic.skin = SysConfig_1.Res.getItemUrl(e.getSysItem().id);
        this.battleScene.addChild(m);
        m.ani1.play(0, false);
        m.ani1.on(Laya.Event.COMPLETE, this, this.destoryItemAniFun, [m, m.clip]);
    };
    BattleSceneMediator.prototype.destoryItemAniFun = function (m, c) {
        c.play(0, c.total - 1);
        c.on(Laya.Event.COMPLETE, this, this.itemDestoryfun, [m, c]);
    };
    BattleSceneMediator.prototype.itemDestoryfun = function (m, c) {
        m.removeSelf();
    };
    /**
     * 放大镜头
     */
    BattleSceneMediator.prototype.deadFun = function () {
        this.isGameOver = true;
        this.playerCanMove = false;
        //this.stopEf();
        this.clearCarmer();
        this.clearBg();
        this.player.run.gotoAndStop(0);
        this.playerAni.dead.interval = 1000 / 4;
        this.playerAni.dead.play(0, false);
        //放大镜头
        var t = new Laya.Tween();
        var p = this.playerView.localToGlobal(new Laya.Point(this.player.width / 2, 0));
        var l1 = this.playerView.x * 1.5;
        var xx = -(l1 - p.x);
        var y1 = this.playerView.y;
        var yy = y1 - this.playerView.y * 1.5;
        t.to(this.battleSp, { x: xx, y: yy, scaleX: 1.5, scaleY: 1.5 }, 5000);
        Laya.timer.once(3000, this, this.deadOverFun);
    };
    BattleSceneMediator.prototype.deadOverFun = function () {
        App_1.default.getInstance().openScene(MyGameInit_1.default.MainScene, true, MyGameInit_1.default.SelectStage);
        this.playerAni.dead.gotoAndStop(0);
    };
    BattleSceneMediator.prototype.clearCarmer = function () {
        Laya.timer.clear(this, this.resetScreen);
    };
    /**
     * 让屏幕对准玩家
     */
    BattleSceneMediator.prototype.resetScreen = function () {
        var sp = this.battleScene.battleSp;
        var tx = -this.playerView.x + BattleSceneMediator.SCREEN / 2 - 100 * this.player.scaleX;
        tx = Math.min(tx, 0);
        tx = Math.max(tx, -this.sceneWidth + BattleSceneMediator.SCREEN);
        var len2 = Math.abs(sp.x - tx);
        var realSpeed = 2 * (len2 / 700);
        realSpeed = Math.max(realSpeed, this.cameraSpeed);
        var len = realSpeed * this.getDelta();
        if (len2 < len) {
            sp.x = tx;
        }
        else {
            sp.x -= (((tx < sp.x) ? 1 : -1) * len);
        }
        var xx = -sp.x - 200;
        var xxend = xx + 750 + 200;
        for (var _i = 0, _a = this.spriteArr; _i < _a.length; _i++) {
            var a = _a[_i];
            if (a.x > xx && a.x < xxend) {
                a.onShow();
            }
            else {
                a.onHide();
            }
        }
    };
    BattleSceneMediator.prototype.setSceneWidth = function (value) {
        this.bgArr.length = 0;
        var c = null;
        if (this.battleSession.sys.starID == 1001) {
            c = layaMaxUI_1.ui.scene.Stage1ViewUI;
        }
        else if (this.battleSession.sys.starID == 2001) {
            c = layaMaxUI_1.ui.scene.Stage2ViewUI;
        }
        else if (this.battleSession.sys.starID == 3001) {
            c = layaMaxUI_1.ui.scene.Stage3ViewUI;
        }
        for (var i = 0; i < 2; i++) {
            var ins = new c();
            this.bgArr.push(ins);
            this.battleSp.addChild(ins);
            ins.zOrder = -1;
            ins.cacheAs = "normal";
        }
        this.startBg();
        this.startCarmer();
    };
    BattleSceneMediator.prototype.startCarmer = function () {
        Laya.timer.frameLoop(1, this, this.resetScreen);
    };
    BattleSceneMediator.prototype.startBg = function () {
        Laya.timer.frameLoop(1, this, this.bgFun);
    };
    BattleSceneMediator.prototype.bgFun = function () {
        var wid = this.bgArr[0].width;
        this.bgArr[0].x = -Math.ceil(this.battleSp.x / wid) * wid;
        this.bgArr[1].x = this.bgArr[0].x + wid;
    };
    BattleSceneMediator.prototype.clearBg = function () {
        Laya.timer.clear(this, this.bgFun);
    };
    BattleSceneMediator.prototype.resetNowBlood = function (nowHp) {
        this.battleScene.setNowHp(nowHp / this.maxHp);
    };
    BattleSceneMediator.prototype.playerMove = function (value) {
        this.moveStat = value;
        this.direction = value;
    };
    BattleSceneMediator.prototype.longFly = function () {
        this.clearMouse();
        if (this.bossHo instanceof Boss1_1.default) {
            this.bossHo.clearAll();
            this.bossHo.showTalk();
            Laya.timer.once(3000, this, this.fly);
        }
    };
    BattleSceneMediator.prototype.fly = function () {
        if (this.bossHo instanceof Boss1_1.default) {
            this.bossHo.closeTalk();
            this.bossHo.flyaway();
            this.bossHo.once(BattleDisplay_1.BattleDisplay.FLYOVEREVENT, this, this.flyawayover);
        }
    };
    BattleSceneMediator.prototype.flyawayover = function () {
        App_1.default.sendEvent(MyEvent_1.default.HP_HALF);
    };
    BattleSceneMediator.prototype.clearMouse = function () {
        Laya.timer.clearAll(this);
        this.playerCanMove = false;
        this.setPlayerStat(1);
    };
    /**
     * 0 jump
     * 1 wait
     * @param stat
     */
    BattleSceneMediator.prototype.setPlayerStat = function (stat) {
        if (this.nowPlayerStat == stat) {
            return;
        }
        this.nowPlayerStat = stat;
        this.player.run.gotoAndStop(0);
        this.player.player.wait.gotoAndStop(0);
        //this.pet.wait.gotoAndStop(0);
        this.pet.walk.gotoAndStop(0);
        if (stat == 0) {
            this.player.run.interval = 1000 / 40;
            this.player.run.play();
            this.pet.walk.interval = 1000 / 40;
            this.pet.walk.play(0, true);
        }
        else {
            this.player.player.wait.play();
            //this.pet.wait.play(0, true);
            Laya.SoundManager.stopSound("sound/fx_move.wav");
        }
    };
    /**
     * 击杀敌人的处理方法
     * @param monster
     */
    BattleSceneMediator.prototype.killMonster = function (monster) {
        monster.die();
        var addGold = 0;
        if (monster.disType == BattleDisplay_1.DISPLAY_TYPE.MONSTER) {
            addGold = this.battleSession.sys.monsterGold;
            addGold *= (1 + this.tianFuSession.dropGold / 100);
            addGold = Math.floor(addGold);
            this.flyItem(monster);
            this.flyGold(monster, addGold);
        }
        else {
            addGold = this.battleSession.sys.bossGold;
            //this.bagSession.gold += addGold;
            this.bagSession.changeGold(addGold, BagSession_1.GOLD_TYPE.KILL_BOSS);
        }
        if (monster.disType == BattleDisplay_1.DISPLAY_TYPE.BOSS) {
            //如果杀死的是boss
            this.gameOver();
            this.dataSession.saveData();
        }
        else if (monster.disType == BattleDisplay_1.DISPLAY_TYPE.BIG_BOSS) {
            this.bossGameOver();
        }
    };
    /**
     * 弹出奖励框
     */
    BattleSceneMediator.prototype.bossGameOver = function () {
        this.stopEf();
        this.isGameOver = true;
        //Laya.SoundManager.stopMusic();
        App_1.default.getInstance().gameSoundManager.stopBgm();
        //Laya.SoundManager.playSound("sound/fx_success.wav");
        App_1.default.getInstance().gameSoundManager.playEffect("sound/fx_success.wav");
        this.clear();
        this.battleSession.killBoss();
        App_1.default.dialog(MyGameInit_1.default.KillBossDialog);
    };
    /**
     * 击败boss 游戏结束
     */
    BattleSceneMediator.prototype.gameOver = function () {
        this.stopEf();
        this.isGameOver = true;
        //Laya.SoundManager.stopMusic();
        App_1.default.getInstance().gameSoundManager.stopBgm();
        App_1.default.getInstance().gameSoundManager.playEffect("sound/fx_success.wav");
        //Laya.SoundManager.playSound("sound/fx_success.wav");
        this.battleSession.gameOver();
        this.dataSession.saveData(true);
        App_1.default.dialog(MyGameInit_1.default.GameOverDialog);
        this.sdkSession.lp(false);
    };
    BattleSceneMediator.prototype.stopEf = function () {
        this.playerCanMove = false;
    };
    BattleSceneMediator.prototype.flyGold = function (sp, addGold) {
        this.bagSession.gold += addGold;
        //this.bagSession.changeGold( addGold, GOLD_TYPE.KILL_MONSTER );
        var p = sp.localToGlobal(MyEffect_1.default.getP00());
        this.battleScene.flyGold(p.x, p.y, addGold);
    };
    /**
     * 飞道具
     * @param i
     */
    BattleSceneMediator.prototype.flyItem = function (i) {
        if (!this.newerSession.isNew) {
            if (this.isHangUp) {
                if ((Laya.Browser.now() - this.lastDropEquipTime) < BattleSceneMediator.HANG_UP_DROP_TIME) {
                    return;
                }
            }
            else {
                if ((Laya.Browser.now() - this.lastDropEquipTime) < BattleSceneMediator.DROP_ITEM_TIME) {
                    return;
                }
            }
        }
        this.lastDropEquipTime = Laya.Browser.now();
        var any1 = this.battleSession.getNewItem();
        var drop = null;
        if (any1 instanceof SysConfig_1.SysItem) {
            var sysi = any1;
            var drop1 = new DropItem_1.default();
            drop1.battle = this;
            drop1.setSysItem(sysi);
            drop1.setItemId(sysi.id);
            drop1.setStat(0);
            drop = drop1;
        }
        else {
            var buffid = any1;
            var dis = new DropBuffer_1.default();
            dis.setBuffType(buffid);
            drop = dis;
        }
        this.battleScene.battleSp.addChild(drop);
        this.spriteArr.push(drop);
        var c = new CurveMove_1.default();
        var fangxiang = 0;
        if (i.x < this.playerView.x) {
            fangxiang = -1;
        }
        else {
            fangxiang = 1;
        }
        var endX = i.initPoint.x + BattleSceneMediator.ENEMY_DISTANCE * 1.2 * fangxiang;
        endX = Math.max(endX, 0);
        c.start(new Laya.Handler(this, this.flyUpdateFun, [drop]), new Laya.Handler(this, this.flyOverFun, [drop, endX, fangxiang]), 500, 2000, i.x, BattleSceneMediator.DISPLAY_Y, endX, BattleSceneMediator.DISPLAY_Y);
    };
    BattleSceneMediator.prototype.flyOverFun = function (img, endx, sss) {
        var c = new CurveMove_1.default();
        var realEndx = endx + BattleSceneMediator.ENEMY_DISTANCE * 1 * sss;
        realEndx = Math.max(realEndx, 0);
        c.start(new Laya.Handler(this, this.flyUpdateFun, [img]), new Laya.Handler(this, this.flyOver2Fun, [img]), 600, 2000, endx, BattleSceneMediator.DISPLAY_Y, realEndx, BattleSceneMediator.DISPLAY_Y);
    };
    BattleSceneMediator.prototype.flyOver2Fun = function (img) {
        if (img instanceof DropItem_1.default) {
            img.setStat(1);
        }
        else if (img instanceof DropBuffer_1.default) {
            img.setMv();
        }
    };
    BattleSceneMediator.prototype.flyUpdateFun = function (img, p) {
        img.x = p.x;
        img.y = p.y;
    };
    /**
     * 冒红色的光
     */
    BattleSceneMediator.prototype.playHitEffect = function (isCrit) {
        var x = this.playerView.x + (55 + this.playerView.width / 2) * this.player.scaleX;
        var y = this.playerView.y - this.playerView.height / 2;
        this.battleScene.playHitEffect(isCrit, x, y);
    };
    /**
    * 飞伤害的那个数字
    * 冒字
    * @param num
    * @param isCrit
    * @param i
    */
    BattleSceneMediator.prototype.flyHitEffect = function (num, isCrit, i) {
        var x1 = i.x;
        var y1 = i.y - 200;
        if (i.disType == BattleDisplay_1.DISPLAY_TYPE.BIG_BOSS) {
            var ho = i;
            y1 = i.y - ho.getHitBox().height - 100;
        }
        this.battleScene.flyHitEffect(num, isCrit, x1, y1);
    };
    BattleSceneMediator.prototype.setBuffPos = function (c, t) {
        this.buffMap[t] = c;
    };
    BattleSceneMediator.prototype.setY = function (ho) {
        ho.y = BattleSceneMediator.DISPLAY_Y;
    };
    BattleSceneMediator.prototype.attUpdateFun = function () {
        var per = this.bagSession.playerEquip.move / 100;
        this.speed = BattleSceneMediator.MIN_SPEED + per * (BattleSceneMediator.MAX_SPEED - BattleSceneMediator.MIN_SPEED);
    };
    BattleSceneMediator.prototype.equipUpdateFun = function () {
        this.bagSession.setPlayerEquip(this.player.player);
        //更新宠物
        var p = this.bagSession.playerEquipArr[BattleSession_1.EQUIP_TYPE.PET];
        if (p == null) {
            this.pet.visible = false;
        }
        else {
            this.pet.visible = true;
            this.pet.img1.skin = "player/all/" + p.id + ".png";
        }
    };
    BattleSceneMediator.prototype.isBossStage = function () {
        return this.battleSession.sys.stageType == 2;
    };
    /**
    * 动态计算屏幕宽度
    */
    BattleSceneMediator.prototype.calculationWidth = function () {
        this.sceneWidth = 0;
        if (this.newerSession.isNew) {
            this.sceneWidth += (Laya.stage.width + 100);
            this.makeSprite(BattleDisplay_1.DISPLAY_TYPE.MONSTER, this.battleSession.sys.monsterArr[0], 20033);
            this.sceneWidth += (BattleSceneMediator.ENEMY_DISTANCE);
            this.makeSprite(BattleDisplay_1.DISPLAY_TYPE.MONSTER, this.battleSession.sys.monsterArr[1], 20019);
            this.sceneWidth += (BattleSceneMediator.ENEMY_DISTANCE * 8);
            this.makeSprite(BattleDisplay_1.DISPLAY_TYPE.BIG_BOSS, this.battleSession.sys.monsterBoss);
            this.sceneWidth += 300;
            this.setSceneWidth(this.sceneWidth);
        }
        else if (this.isBossStage()) {
            this.sceneWidth += BattleSceneMediator.PLAYER_FIRST_ENEMY_DISTANCE;
            this.sceneWidth += (BattleSceneMediator.ENEMY_DISTANCE * 7);
            this.makeSprite(BattleDisplay_1.DISPLAY_TYPE.BIG_BOSS, this.battleSession.sys.monsterBoss);
            this.sceneWidth += 300;
            this.setSceneWidth(this.sceneWidth);
        }
        else {
            this.sceneWidth += BattleSceneMediator.PLAYER_FIRST_ENEMY_DISTANCE;
            for (var i = 0; i < BattleSceneMediator.ENEMY_GROUP; i++) {
                for (var j = 0; j < BattleSceneMediator.ENEMY_ADD_HP; j++) {
                    this.makeSprite(BattleDisplay_1.DISPLAY_TYPE.MONSTER);
                    this.sceneWidth += BattleSceneMediator.ENEMY_DISTANCE;
                }
                this.sceneWidth += BattleSceneMediator.ENEMY_ADD_HP_DISTANCE;
                this.makeSprite(BattleDisplay_1.DISPLAY_TYPE.ADD_HP);
                this.sceneWidth += BattleSceneMediator.ENEMY_ADD_HP_DISTANCE;
            }
            this.AUTO_TURN_X = this.sceneWidth;
            this.sceneWidth += BattleSceneMediator.ENEMY_DISTANCE;
            this.makeSprite(BattleDisplay_1.DISPLAY_TYPE.BOSS);
            this.sceneWidth += (BattleSceneMediator.ENEMY_DISTANCE * 2);
            this.setSceneWidth(this.sceneWidth);
        }
    };
    BattleSceneMediator.prototype.makeSprite = function (type, id, style) {
        if (id === void 0) { id = -1; }
        if (style === void 0) { style = -1; }
        var ho = null;
        if (type == BattleDisplay_1.DISPLAY_TYPE.MONSTER || type == BattleDisplay_1.DISPLAY_TYPE.BOSS) {
            var monster = new MonsterDisplay_1.default();
            if (type == BattleDisplay_1.DISPLAY_TYPE.MONSTER) {
                if (id == -1) {
                    monster.setSysEnemy(this.battleSession.getNewMonster());
                }
                else {
                    monster.setSysEnemy(App_1.default.getConfig(MyGameInit_1.default.sys_enemy, id), style);
                }
            }
            else {
                monster.setSysEnemy(this.battleSession.getBossSys());
            }
            ho = monster;
        }
        else if (type == BattleDisplay_1.DISPLAY_TYPE.ADD_HP) {
            ho = new AddHpDisplay_1.default();
        }
        else if (type == BattleDisplay_1.DISPLAY_TYPE.BIG_BOSS) {
            var sys = this.battleSession.getBossSys();
            if (sys.enemymode == 20034) {
                ho = new Boss1_1.default();
            }
            else {
                ho = new Boss2_1.default();
            }
            ho.setSysEnemy(sys);
            this.bossHo = ho;
        }
        ho.setDisplayType(type);
        this.spriteArr.push(ho);
        this.battleScene.battleSp.addChild(ho);
        ho.y = BattleSceneMediator.DISPLAY_Y;
        ho.x = this.sceneWidth;
        ho.savePos();
        ho.battle = this;
    };
    BattleSceneMediator.prototype.exitFun = function () {
        Laya.SoundManager.stopAllSound();
        this.clear();
    };
    BattleSceneMediator.prototype.clear = function () {
        console.log("&&&&&&&&&&&&&&&&&&&&&&清理了");
        for (var i = 0; i < this.battleScene.battleSp.numChildren; i++) {
            var a = this.battleScene.battleSp.getChildAt(i);
            if (a instanceof HitObject_1.default) {
                if (a.hitType == HitObject_1.default.BULLET) {
                    a.clear();
                    a.visible = false;
                }
            }
        }
        this.spriteArr.length = 0;
    };
    BattleSceneMediator.prototype.undisFun = function () {
        Laya.timer.clearAll(this);
        Laya.stage.offAllCaller(this);
        this.battleScene.battleSp.removeChildren();
        Laya.Tween.clearTween(this);
        Laya.Tween.clearTween(this.battleSp);
        Laya.Tween.clearTween(this.battleScene);
        this.playerAni.wait.interval = 1000 / 24;
        this.playerAni.wait.gotoAndStop(0);
    };
    /**
     * 更新最大血量
     */
    BattleSceneMediator.prototype.updateMaxHp = function () {
        this.maxHp = this.bagSession.playerEquip.hitPoint;
        this.nowHp = Math.min(this.maxHp, this.nowHp);
        this.onlyResetHp();
    };
    /**
     * 单独刷新血
     */
    BattleSceneMediator.prototype.onlyResetHp = function () {
        this.battleScene.onlyResetHp(this.nowHp / this.maxHp);
    };
    BattleSceneMediator.prototype.playerStop = function () {
        this.moveStat = 0;
        Laya.timer.clear(this, this.efFun);
        this.setPlayerStat(1);
    };
    /**
     * 移动
     */
    BattleSceneMediator.prototype.efFun = function () {
        if (this.moveStat == 0) {
            return;
        }
        if (this.isDead) {
            return;
        }
        var oldX = this.playerView.x;
        this.playerView.x += (this.direction * this.speed * this.getDelta());
        this.playerView.x = Math.max(0, this.playerView.x);
        this.playerView.x = Math.min(this.sceneWidth, this.playerView.x);
        if (this.playerMaxRight != 0) {
            this.playerView.x = Math.min(this.playerMaxRight, this.playerView.x);
        }
        var ho = this.hitTest(false);
        if (ho && ho.hitType == HitObject_1.default.ENEMY) {
            this.playerView.x = oldX;
        }
        if (this.direction > 0) {
            this.playerView.player.scaleX = 1;
        }
        else {
            this.playerView.player.scaleX = -1;
        }
        this.setPlayerStat(0);
    };
    BattleSceneMediator.prototype.getDelta = function () {
        var t = 1000 / 60;
        if (Laya.timer.delta < t) {
            return Laya.timer.delta;
        }
        return t;
    };
    /**
     * 全局碰撞检测
     */
    BattleSceneMediator.prototype.hitTest = function (onlyCheckbullet) {
        var pRect = this.getGlobalRect(this.playerView.hitbox);
        for (var i = 0, len = this.spriteArr.length; i < len; i++) {
            var ho = this.spriteArr[i];
            //ho.drawHit();
            if (onlyCheckbullet && ho.hitType != HitObject_1.default.BULLET) {
                continue;
            }
            if (ho.hitTest == false) {
                continue;
            }
            if (ho.isDead) {
                continue;
            }
            if (Math.abs(ho.x - this.playerView.x) > BattleSceneMediator.SCREEN) {
                //太远的不检测
                continue;
            }
            var hoRect = this.getGlobalRect(ho.getHitBox());
            if (pRect.intersects(hoRect) == false) {
                if (ho.onceHitMode && ho.checked) {
                    ho.unHitFun();
                }
                continue;
            }
            if (ho.onceHitMode && ho.checked) {
                continue;
            }
            if (ho.select) {
                if (ho.hitFun()) {
                    this.spriteArr.splice(i, 1);
                }
                this.hitHandle(ho);
            }
            return ho;
        }
        return null;
    };
    /**
     * 碰撞到的回调
     * @param ho
     */
    BattleSceneMediator.prototype.hitHandle = function (ho) {
        if (ho.disType == BattleDisplay_1.DISPLAY_TYPE.ADD_HP) {
            this.addHpFun();
        }
        else if (ho.hitType == HitObject_1.default.ENEMY) {
            this.playerHitObject.attack(ho);
            this.setPlayerStat(1);
        }
        else if (ho instanceof DropItem_1.default) {
            this.addItem(ho);
        }
        else if (ho instanceof DropBuffer_1.default) {
            this.addBuffer(ho);
        }
        else if (ho.hitType == HitObject_1.default.BULLET) {
            this.changeHpByBullet(ho);
        }
    };
    BattleSceneMediator.prototype.changeHpByBullet = function (ho) {
        var a = ho.getAttackObject();
        if (a.type == HitObject_1.AttackObject.FORCE_ATTACK) {
            this.changeHp(a.value);
        }
        else {
            this.changeHp(this.getHurtHp(a.value));
        }
    };
    BattleSceneMediator.prototype.addBuffer = function (dropBuff) {
        dropBuff.removeItem();
        App_1.default.getInstance().gameSoundManager.playEffect("sound/fx_openBox.wav");
        this.setPlayerBuff(dropBuff.type);
    };
    /**
     * 播放buff动画
     * @param type
     */
    BattleSceneMediator.prototype.setPlayerBuff = function (type) {
        var my = this.playMyAni(type);
        this.bagSession.setBuffer(type);
        Laya.timer.once(BattleSceneMediator.BUFF_TIME, this, this.buffOverFun, [my, type], false);
    };
    BattleSceneMediator.prototype.playMyAni = function (type) {
        var sys = this.buffConfig[type];
        var my = this.myBuffMap[type];
        if (my == null) {
            my = new MyAni_1.default();
            my.time = 1000 / 20;
            my.anchorX = my.anchorY = 0.5;
            my.x = sys.x1;
            my.y = sys.y1;
            my.scaleX = my.scaleY = sys.scale;
            my.setUrl(sys.atlas, sys.arr);
            this.myBuffMap[type] = my;
            //my.cacheAs = "bitmap";
        }
        this.player.addChild(my);
        my.play();
        return my;
    };
    BattleSceneMediator.prototype.buffOverFun = function (ani, type) {
        ani.removeSelf();
        this.bagSession.resetBuffByType(type);
        this.bagSession.resetEquip();
    };
    /**
     * 把物品飞包里去
     * @param dropItem
     */
    BattleSceneMediator.prototype.addItem = function (dropItem) {
        if (dropItem.sysItem.itemType == BattleSession_1.EQUIP_TYPE.PET) {
            this.petSession.addEgg();
            this.flyToBagIcon(dropItem);
            return;
        }
        if (this.bagSession.addEquipInBagBySys(dropItem.sysItem)) {
            this.flyToBagIcon(dropItem);
            App_1.default.sendEvent(MyEvent_1.default.GET_NEW_ITEM);
            if (this.newerSession.isNew) {
                this.checkNewer3();
            }
            return;
        }
        var str = this.getEquipName(dropItem.sysItem.itemType);
        Tips_1.default.show(str + "栏已满");
    };
    BattleSceneMediator.prototype.getEquipName = function (type) {
        if (type == BattleSession_1.EQUIP_TYPE.WEAPON) {
            return "武器";
        }
        else if (type == BattleSession_1.EQUIP_TYPE.BODY) {
            return "盔甲";
        }
        else if (type == BattleSession_1.EQUIP_TYPE.HEAD) {
            return "头盔";
        }
        else if (type == BattleSession_1.EQUIP_TYPE.HORSE) {
            return "坐骑";
        }
    };
    BattleSceneMediator.prototype.flyToBagIcon = function (d) {
        App_1.default.getInstance().gameSoundManager.playEffect("sound/fx_openBox.wav");
        //Laya.SoundManager.playSound("sound/fx_openBox.wav");
        d.setStat(0);
        //MyEffect.flyToTarget(d, this.battleScene.roleBtn);
        MyEffect_1.default.flyToTarget(d, this.battleScene.btnBox);
    };
    BattleSceneMediator.prototype.addHpFun = function () {
        this.rebirthMonster();
        if (this.nowHp == this.maxHp) {
            return;
        }
        this.hpMax();
        var my = this.playMyAni(100);
        my.once(Laya.Event.COMPLETE, this, this.addHpComFun, [my]);
        App_1.default.getInstance().gameSoundManager.playEffect("sound/fx_openBox.wav");
        var myclip = new MyClip_1.default();
        myclip.playOnceAndRemove(1);
    };
    BattleSceneMediator.prototype.addHpComFun = function (my) {
        //this.buffLayer.addhp.visible = false;
        my.removeSelf();
    };
    BattleSceneMediator.prototype.hpMax = function () {
        this.nowHp = this.maxHp;
        this.battleScene.hpMax();
    };
    /**
     * 复活怪物
     */
    BattleSceneMediator.prototype.rebirthMonster = function () {
        if (this.isRebirth) {
            return;
        }
        this.isRebirth = true;
        for (var _i = 0, _a = this.spriteArr; _i < _a.length; _i++) {
            var i = _a[_i];
            if (i.disType == BattleDisplay_1.DISPLAY_TYPE.MONSTER || i.disType == BattleDisplay_1.DISPLAY_TYPE.BOSS) {
                if (i.isDead) {
                    i.setSysEnemy(this.battleSession.getNewMonster());
                    i.resetPos();
                    if (i.x < this.playerView.x) {
                        i.setScaleX(-1);
                        //修改怪物复活时的朝向
                    }
                    else {
                        i.setScaleX(1);
                    }
                }
                else {
                    i.resetHp();
                }
            }
        }
    };
    BattleSceneMediator.prototype.checkNewer3 = function () {
        if (this.newerSession.itemnum >= 2) {
            this.clearMouse();
            App_1.default.getInstance().eventManager.once(MyEvent_1.default.EQUIP_OVER_NEWER, this, this.newerFun10);
        }
    };
    BattleSceneMediator.prototype.newerFun10 = function () {
        this.playerCanMove = true;
        this.huifu();
        this.battleScene.tiaoguo.visible = true;
        this.battleScene.rightHand.visible = true;
        this.battleScene.tiaoguo.on(Laya.Event.CLICK, this, this.tiaoFun);
    };
    BattleSceneMediator.prototype.tiaoFun = function () {
        this.flyawayover();
    };
    BattleSceneMediator.prototype.huifu = function () {
        this.startGame();
        this.startCarmer();
        this.startBg();
    };
    /**
     * 开始游戏
     */
    BattleSceneMediator.prototype.startGame = function () {
        Laya.timer.frameLoop(1, this, this.gameLoop);
    };
    BattleSceneMediator.prototype.gameLoop = function () {
        //子弹是无论如何都要检测的
        this.hitTest(true);
        if (this.playerHitObject.isAttack) {
            //只要是在进攻中 就啥都不能做了
            return;
        }
        if (this.playerCanMove) {
            this.efFun();
        }
    };
    /**
     *
     * @param s 得到全局rect
     */
    BattleSceneMediator.prototype.getGlobalRect = function (s) {
        var r = new Laya.Rectangle();
        var p = s.localToGlobal(MyEffect_1.default.getP00());
        r.x = p.x;
        r.y = p.y;
        r.width = s.width * s.globalScaleX;
        r.height = s.height * s.globalScaleY;
        return r;
    };
    BattleSceneMediator.prototype.recheck = function () {
        if (Laya.stage.mouseX < Laya.stage.width / 2) {
            this.playerMove(-1);
        }
        else {
            this.playerMove(1);
        }
    };
    BattleSceneMediator.prototype.mousemoveFun = function () {
        this.recheck();
    };
    /**
     * 点击挂机按钮
     */
    BattleSceneMediator.prototype.clickGuaBtnFun = function () {
        if (this.newerSession.isNew) {
            return;
        }
        this.isHangUp = !this.isHangUp;
        if (this.isHangUp) {
            this.dataSession.log(LogType_1.default.HANGUP_START, this.battleSession.sys.id + "");
        }
        else {
            this.dataSession.log(LogType_1.default.HANGUP_OVER, this.battleSession.sys.id + "");
        }
        this.battleScene.guaJiClip.index = (this.isHangUp ? 1 : 0);
        // this.battleScene.fightbox.on(Laya.Event.MOUSE_DOWN,this,this.moveFun);
        // Laya.stage.on( Laya.Event.MOUSE_UP ,this, this.mouseUpFun );
        if (this.isGameOver) {
            return;
        }
        if (this.isHangUp) {
            this.playerMove(1);
            Laya.timer.frameLoop(1, this, this.autoTurn);
            this.playerView.guaJiSp.visible = true;
        }
        else {
            this.playerStop();
            Laya.timer.clear(this, this.autoTurn);
            this.playerView.guaJiSp.visible = false;
        }
    };
    BattleSceneMediator.prototype.autoTurn = function () {
        if (this.playerView.x > this.AUTO_TURN_X) {
            this.playerMove(-1);
        }
        else if (this.playerView.x <= 100) {
            this.playerMove(1);
        }
    };
    BattleSceneMediator.prototype.moveFun = function (e) {
        if (this.isHangUp) {
            Tips_1.default.show("请您先取消挂机");
            return;
        }
        this.recheck();
        Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.mousemoveFun);
    };
    BattleSceneMediator.prototype.mouseUpFun = function () {
        if (this.isHangUp) {
            return;
        }
        this.playerStop();
        Laya.stage.off(Laya.Event.MOUSE_MOVE, this, this.mousemoveFun);
    };
    /**
     * 刷新装备 宠物 和 属性
     */
    BattleSceneMediator.prototype.onEQUIP_UPDATE = function () {
        this.battleScene.setEquipment(this.bagSession.playerEquipArr);
        this.bagSession.setPlayerEquip(this.playerAni);
        var p = this.bagSession.playerEquipArr[BattleSession_1.EQUIP_TYPE.PET]; //"player/pet/" + equip.id + ".png";
        this.pet.img1.skin = "player/all/" + p.id + ".png"; //Res.getItemUrl( p.id ); Res.getItemUrl( p.id );
    };
    /**
     * 播放新手引导镜头
     */
    BattleSceneMediator.prototype.onSTART_NEWER_MV = function () {
        this.newerMv();
    };
    BattleSceneMediator.prototype.newerMv = function () {
        this.moveToBoss();
    };
    BattleSceneMediator.prototype.moveToBoss = function () {
        this.playerCanMove = false;
        var t = new Laya.Tween();
        t.to(this.battleSp, { x: (-this.sceneWidth + Laya.stage.width) }, 1500, null, new Laya.Handler(this, this.bossJumpFun));
        this.clearCarmer();
        this.banFun();
    };
    BattleSceneMediator.prototype.banFun = function () {
        var a = new layaMaxUI_1.ui.scene.daguaishouUI();
        a.centerY = 0;
        this.battleScene.addChild(a);
        a.ani1.play(0, false);
        a.ani1.once(Laya.Event.COMPLETE, this, this.guaiFun, [a]);
    };
    BattleSceneMediator.prototype.guaiFun = function (a) {
        a.removeSelf();
    };
    BattleSceneMediator.prototype.bossJumpFun = function () {
        this.bossHo.startMv();
        Laya.timer.once(2500, this, this.bossMvOverFun);
    };
    BattleSceneMediator.prototype.bossMvOverFun = function () {
        var t = new Laya.Tween();
        t.to(this.battleSp, { x: 0 }, 1000, null, new Laya.Handler(this, this.bossBackFun));
    };
    BattleSceneMediator.prototype.bossBackFun = function () {
        this.bossHo.startAttackTime();
        App_1.default.sendEvent(MyEvent_1.default.JINGTOU_BACK);
        this.startCarmer();
        this.playerCanMove = true;
    };
    /**
     * 刷新玩家各项属性
     */
    BattleSceneMediator.prototype.onATTRIBUTE_UPDATE = function () {
        this.battleScene.setAttribute(this.bagSession.playerEquip);
        this.updateMaxHp();
    };
    BattleSceneMediator.prototype.onGOLD_UPDATE = function () {
        //this.battleScene.goldFc.value = this.bagSession.gold + "";
        this.battleScene.setNowGold(this.bagSession.gold);
    };
    BattleSceneMediator.prototype.onEGG_UPDATE = function () {
        this.battleScene.diamondFc.value = this.petSession.eggNum + "";
        //this.btnred( this.battleScene.petBtn , this.petSession.eggNum > 0 );
    };
    BattleSceneMediator.prototype.setBtn_click = function () {
        if (this.newerSession.isNew) {
            return;
        }
        App_1.default.dialog(MyGameInit_1.default.SettingDialog);
    };
    BattleSceneMediator.prototype.roleBtn_click = function () {
        if (this.newerSession.isNew && this.newerSession.itemnum < 2) {
            return;
        }
        App_1.default.dialog(MyGameInit_1.default.RoleDialog);
    };
    BattleSceneMediator.prototype.gold_click = function () {
        if (this.newerSession.isNew) {
            return;
        }
        App_1.default.dialog(MyGameInit_1.default.TimeGoldDialog);
    };
    BattleSceneMediator.prototype.petBtn_click = function () {
        App_1.default.dialog(MyGameInit_1.default.PetDialog);
    };
    BattleSceneMediator.prototype.getLoaderUrl = function () {
        var arr = [];
        if (this.newerSession.isNew) {
            arr.push("monsterAni/20034/clip_huoqiu.png");
            arr.push("monsterAni/20034/clip_huoqiuzha.png");
            arr.push("monsterAni/20034/hongdian.png");
            arr = arr.concat(this.getArr("20034"));
            arr = arr.concat(this.getArr("20033"));
            arr = arr.concat(this.getArr("20019"));
        }
        else {
            //let arr1:Array<string> = [];
            // arr1.push( "res/atlas/texiao/jiabaoji.atlas" );
            // arr1.push( "res/atlas/texiao/jiafangyu.atlas" );
            // arr1.push( "res/atlas/texiao/jiagongji.atlas" );
            // arr1.push( "res/atlas/texiao/jiasudu.atlas" );
            // Laya.loader.load( arr1 ,null,null,null,4);
            // arr.push( "res/atlas/texiao/jiaxue.atlas" );
        }
        arr.push("res/atlas/texiao/gongji.atlas");
        arr.push("res/atlas/girl.atlas");
        arr.push("res/atlas/battlescene.atlas");
        // arr.push( "res/atlas/player/equip.atlas" );
        // arr.push( "res/atlas/player/head.atlas" );
        // arr.push( "res/atlas/player/horse.atlas" );
        // arr.push( "res/atlas/player/tou.atlas" );
        // arr.push( "res/atlas/player/pet.atlas" );
        // arr.push( "res/atlas/player/weapon.atlas" );
        arr.push("res/atlas/player/all.atlas");
        //arr.push( "res/atlas/player/weaponeffect.atlas" );
        arr.push("scene/texiao/gongji.ani");
        if (this.newerSession.isNew == false) {
            var s = this.battleSession.sys;
            var arr2 = s.monsterArr.concat();
            arr2.push(s.monsterBoss);
            // for( let i of arr2 ){
            //     let syse = <SysEnemy>App.getConfig(MyGameInit.sys_enemy,i );
            //     if( syse != null ){
            //         arr = arr.concat( this.getArr(syse.enemymode + "") );
            //     }
            // }
            if (s.stageType == 2) {
                if (s.starID == 1001) {
                    arr.push("monsterAni/20034/clip_huoqiu.png");
                    arr.push("monsterAni/20034/clip_huoqiuzha.png");
                    arr.push("monsterAni/20034/hongdian.png");
                    arr = arr.concat(this.getArr("20034"));
                }
                else {
                    arr.push("monsterAni/20034/hongdian.png");
                    arr.push("monsterAni/20034/clip_huoqiuzha.png");
                    arr = arr.concat(this.getArr("20068"));
                    arr.push("scene/monsterAni/20068_1.ani");
                }
            }
            else {
                if (s.starID == 1001) {
                    arr.push("battlescene/bg0.jpg");
                    arr.push("battlescene/shu1.png");
                    arr.push("battlescene/shu2.png");
                }
                else {
                    arr.push("battlescene/bg1.jpg");
                }
            }
        }
        return arr;
    };
    BattleSceneMediator.prototype.getAni = function (id) {
        var syse = App_1.default.getConfig(MyGameInit_1.default.sys_enemy, id);
        return this.getArr(syse.enemymode + "");
    };
    BattleSceneMediator.prototype.getArr = function (id) {
        var arr = [];
        //arr.push( "res/atlas/monsterAni/" + id + ".png" );
        arr.push("res/atlas/monsterAni/" + id + ".atlas");
        arr.push("scene/monsterAni/" + id + ".ani");
        return arr;
    };
    BattleSceneMediator.prototype.getLoaderPreUrl = function () {
        return;
        if (this.newerSession.isNew) {
            return null;
        }
        var arr = [];
        arr.push("sound/alert.mp3");
        arr.push("sound/comboEffect1.wav");
        arr.push("sound/fx_button.wav");
        arr.push("sound/fx_Hit.wav");
        arr.push("sound/fx_itemBad.wav");
        arr.push("sound/fx_itemGood.wav");
        arr.push("sound/fx_itemSelect.wav");
        arr.push("sound/fx_lose.wav");
        arr.push("sound/fx_move.wav");
        arr.push("sound/fx_openBox.wav");
        arr.push("sound/fx_success.wav");
        arr.push(MyGameInit_1.default.GameOverDialog);
        arr.push(MyGameInit_1.default.FlyBoxDialog);
        arr.push(MyGameInit_1.default.SettingDialog);
        arr.push(MyGameInit_1.default.TimeGoldDialog);
        arr.push(MyGameInit_1.default.GetGoldDialog);
        arr.push("res/atlas/shengli.atlas");
        arr.push("res/atlas/flybox.atlas");
        arr.push("res/atlas/setdialog.atlas");
        return arr;
    };
    /**
     * 手指头
     */
    BattleSceneMediator.prototype.onSHOUZHITOU = function () {
        var v = NewerSession_1.default.getHand();
        this.battleScene.addChild(v);
        v.ani1.play();
        v.lightClip.interval = 1000 / 10;
        v.x = this.battleScene.btnBox.x - 10;
        v.y = this.battleScene.btnBox.y;
    };
    BattleSceneMediator.prototype.onRED_UPDATE = function () {
        this.btnred(this.battleScene.roleBtn, this.bagSession.haveNewEquip());
    };
    BattleSceneMediator.prototype.onFLASH_RED = function () {
        this.flashRedTan();
        this.alnum = 0;
        Laya.timer.loop(500, this, this.alertSoundFun);
        this.alertSoundFun();
    };
    BattleSceneMediator.prototype.flashRedTan = function () {
        var a = new layaMaxUI_1.ui.scene.RedFlashUI();
        this.battleScene.addChild(a);
        a.ani1.play(0, false);
        a.ani1.on(Laya.Event.COMPLETE, this, this.flashRedTanComFun, [a]);
        a.right = 15;
        a.y = this.playerView.y - 150;
    };
    BattleSceneMediator.prototype.flashRedTanComFun = function (a) {
        a.removeSelf();
    };
    BattleSceneMediator.prototype.alertSoundFun = function () {
        App_1.default.getInstance().gameSoundManager.playEffect("sound/alert.mp3");
        //Laya.SoundManager.playSound("sound/alert.mp3");
        this.alnum++;
        if (this.alnum == 3) {
            Laya.timer.clear(this, this.alertSoundFun);
        }
    };
    BattleSceneMediator.prototype.btnred = function (btn, value) {
        var v = btn.getChildByName("red");
        v.visible = value;
        if (value) {
            v.ani1.play(0, true);
        }
        else {
            v.visible = false;
        }
    };
    BattleSceneMediator.SCREEN = 750;
    /**
     * 每隔几个敌人 出现一个加血站
     */
    BattleSceneMediator.ENEMY_ADD_HP = 7;
    /**
     * 一个场景内 一共有多少组敌人
     */
    BattleSceneMediator.ENEMY_GROUP = 7; //7
    /**
     * 小兵之间的距离
     */
    BattleSceneMediator.ENEMY_DISTANCE = 280;
    /**
     * 怪到加血站之间的距离
     */
    BattleSceneMediator.ENEMY_ADD_HP_DISTANCE = 400;
    /**
     * 玩家一上来 距离怪物有多远
     */
    BattleSceneMediator.PLAYER_FIRST_ENEMY_DISTANCE = 400;
    BattleSceneMediator.BOSS_DISTANCE = 400;
    BattleSceneMediator.roleY = 750;
    BattleSceneMediator.MIN_SPEED = 0.4;
    BattleSceneMediator.MAX_SPEED = 0.5;
    BattleSceneMediator.DISPLAY_Y = 740;
    /**
     * 掉落时间
     * 4000
     * 8000
     */
    BattleSceneMediator.DROP_ITEM_TIME = 6 * 1000;
    BattleSceneMediator.HANG_UP_DROP_TIME = 10 * 1000;
    BattleSceneMediator.BUFF_TIME = 5000;
    return BattleSceneMediator;
}(Mediator_1.default));
exports.default = BattleSceneMediator;
},{"../../game/App":5,"../../game/CurveMove":8,"../../game/GameEvent":9,"../../game/Mediator":12,"../../game/MyAni":13,"../../game/MyClip":16,"../../ui/layaMaxUI":83,"../MyEvent":21,"../MyGameInit":22,"../config/SysConfig":23,"../effect/MyEffect":24,"../scene/AddHpDisplay":45,"../scene/BattleDisplay":47,"../scene/Boss1":49,"../scene/Boss2":50,"../scene/DropBuffer":52,"../scene/DropItem":53,"../scene/HitObject":57,"../scene/MonsterDisplay":60,"../scene/PlayerHitObject":61,"../scene/TimeLogo":64,"../scene/Tips":65,"../session/BagSession":66,"../session/BattleSession":67,"../session/DataSession":68,"../session/LogType":70,"../session/NewerSession":71}],27:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Mediator_1 = require("../../game/Mediator");
var SdkSession_1 = require("../session/SdkSession");
var App_1 = require("../../game/App");
var BagSession_1 = require("../session/BagSession");
var SysConfig_1 = require("../config/SysConfig");
var RotationEffect_1 = require("../scene/RotationEffect");
var FlyBoxMediator = /** @class */ (function (_super) {
    __extends(FlyBoxMediator, _super);
    function FlyBoxMediator() {
        var _this = _super.call(this) || this;
        _this.sdkSession = null;
        _this.bagSession = null;
        return _this;
    }
    FlyBoxMediator.prototype.setSprite = function (sp) {
        this.dialog = sp;
    };
    FlyBoxMediator.prototype.init = function () {
        this.sdkSession.initAdBtn(this.dialog.AdLingBtn, SdkSession_1.default.FLY_BOX);
        RotationEffect_1.default.play(this.dialog.light);
    };
    FlyBoxMediator.prototype.AdLingBtn_click = function () {
        this.sdkSession.playAdVideo(SdkSession_1.default.FLY_BOX, new Laya.Handler(this, this.adOverFun));
    };
    FlyBoxMediator.prototype.adOverFun = function (stat) {
        if (stat == 1) {
            var v = this.bagSession.getAverageEquipLv();
            var sys = SysConfig_1.SysPet.getLv(700005, v);
            var lv = App_1.default.getRandom2(sys.equipLvMin, sys.equipLvMax);
            var e = this.bagSession.getNewItemByLv(lv);
            this.bagSession.addEquipInBag(e);
            this.bagSession.changeGold(sys.gold, BagSession_1.GOLD_TYPE.FLY_BOX);
            this.bagSession.getEquipDialog([e, sys.gold], null);
        }
    };
    return FlyBoxMediator;
}(Mediator_1.default));
exports.default = FlyBoxMediator;
},{"../../game/App":5,"../../game/Mediator":12,"../config/SysConfig":23,"../scene/RotationEffect":63,"../session/BagSession":66,"../session/SdkSession":73}],28:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Mediator_1 = require("../../game/Mediator");
var BagSession_1 = require("../session/BagSession");
var App_1 = require("../../game/App");
var MyGameInit_1 = require("../MyGameInit");
var MyEvent_1 = require("../MyEvent");
var SdkSession_1 = require("../session/SdkSession");
var BattleSession_1 = require("../session/BattleSession");
var MyEffect_1 = require("../effect/MyEffect");
var RotationEffect_1 = require("../scene/RotationEffect");
var GameOverDialogMediator = /** @class */ (function (_super) {
    __extends(GameOverDialogMediator, _super);
    function GameOverDialogMediator() {
        var _this = _super.call(this) || this;
        _this.bagSession = null;
        _this.sdkSession = null;
        _this.petSession = null;
        _this.battleSession = null;
        return _this;
    }
    GameOverDialogMediator.prototype.init = function () {
        this.sdkSession.initAdBtn(this.dialog.btn2, SdkSession_1.default.GAME_OVER);
        this.dialog.ani1.interval = 50;
        this.dialog.ani1.play(0, false);
        this.dialog.ani1.once(Laya.Event.COMPLETE, this, this.comFun);
        this.dialog.light.visible = false;
        MyEffect_1.default.delayTweenBtn(this.dialog.btn1, 1000);
        MyEffect_1.default.delayTweenBtn(this.dialog.btn2, 1200);
        MyEffect_1.default.delayTweenBtn(this.dialog.btn3, 1300);
        // MyEffect.delayTweenBtn(this.dialog.btn4, 1400);
        this.dialog.ten.ani1.play(0, true);
        this.dialog.light.visible = false;
        this.dialog.btn2.disabled = false;
        this.dialog.btn1.disabled = false;
        this.dialog.btn3.disabled = false;
        this.dialog.btn4.disabled = false;
        this.dialog.btn4.visible = false;
    };
    GameOverDialogMediator.prototype.comFun = function () {
        this.dialog.light.visible = true;
        MyEffect_1.default.alhpa(this.dialog.light, 1, 1000);
        RotationEffect_1.default.play(this.dialog.light);
    };
    GameOverDialogMediator.prototype.setSprite = function (sp) {
        this.dialog = sp;
        this.dialog.height = Laya.stage.height;
    };
    GameOverDialogMediator.prototype.btn1_click = function () {
        this.getGold(1000);
        this.disBtn();
    };
    GameOverDialogMediator.prototype.getGold = function (value) {
        this.bagSession.changeGold(value, BagSession_1.GOLD_TYPE.GAME_OVER_NORMAL);
        this.bagSession.getGoldAndMain();
        App_1.default.dialog(MyGameInit_1.default.NewGetItemDialog, false, value);
    };
    GameOverDialogMediator.prototype.btn2_click = function () {
        this.sdkSession.playAdVideo(SdkSession_1.default.GAME_OVER, new Laya.Handler(this, this.adFun));
    };
    GameOverDialogMediator.prototype.btn3_click = function () {
        this.bagSession.changeGold(1000, BagSession_1.GOLD_TYPE.GAME_OVER_NORMAL);
        App_1.default.dialog(MyGameInit_1.default.NewGetItemDialog, false, 1000);
        App_1.default.getInstance().eventManager.once(MyEvent_1.default.GET_GOLD_CLOSE, this, this.next);
        //this.sdkSession.share( new Laya.Handler(this,this.shareOverFun) );
    };
    GameOverDialogMediator.prototype.btn4_click = function () {
        App_1.default.onEvent(MyEvent_1.default.SHARE_LP_COM, this, this.shareLpCom);
        App_1.default.onEvent(MyEvent_1.default.SHARE_LP_ERR, this, this.shareLpErr);
        this.sdkSession.tt_test_share();
    };
    GameOverDialogMediator.prototype.shareLpErr = function () {
        App_1.default.getInstance().eventManager.off(MyEvent_1.default.SHARE_LP_COM, this, this.shareLpCom);
        App_1.default.getInstance().eventManager.off(MyEvent_1.default.SHARE_LP_ERR, this, this.shareLpErr);
    };
    GameOverDialogMediator.prototype.shareLpCom = function () {
        console.log("收到分享成功了");
        this.getGold(10000);
        this.disBtn();
        App_1.default.getInstance().eventManager.off(MyEvent_1.default.SHARE_LP_COM, this, this.shareLpCom);
        App_1.default.getInstance().eventManager.off(MyEvent_1.default.SHARE_LP_ERR, this, this.shareLpErr);
    };
    GameOverDialogMediator.prototype.next = function () {
        var id = this.battleSession.sys.nextId;
        // if( id > 5 && id % 2 == 1 ){
        //     Laya.MouseManager.enabled = false;
        //     //this.sdkSession.chaPingAd( SdkSession.NEXT_STAGE_CHAPING , new Laya.Handler( this, this.nextHandlerFun ) );            
        //     this.nextHandlerFun();
        // }else{
        this.nextHandlerFun();
        //}
    };
    GameOverDialogMediator.prototype.nextHandlerFun = function () {
        Laya.MouseManager.enabled = true;
        this.battleSession.setMaxStage();
        App_1.default.getInstance().openScene(MyGameInit_1.default.BattleScene);
    };
    /**
     * 分享结果
     */
    GameOverDialogMediator.prototype.shareOverFun = function (stat) {
        var arr = [];
        arr.push(10000);
        this.dialog.btn3.visible = false;
        for (var i = 0; i < 2; i++) {
            if (this.bagSession.isFull(BattleSession_1.EQUIP_TYPE.PET)) {
            }
            else {
                var e = this.petSession.getNewPetNoEgg();
                arr.push(e);
            }
        }
        this.bagSession.getEquipDialog(arr, null, false);
        this.bagSession.changeGold(10000, BagSession_1.GOLD_TYPE.GAME_OVER_AD);
    };
    GameOverDialogMediator.prototype.adFun = function (stat) {
        if (stat == 1) {
            this.getGold(10000);
            this.disBtn();
        }
    };
    GameOverDialogMediator.prototype.disBtn = function () {
        this.dialog.btn2.disabled = true;
        this.dialog.btn1.disabled = true;
        this.dialog.btn4.disabled = true;
    };
    GameOverDialogMediator.prototype.goldFun = function () {
        App_1.default.getInstance().openScene(MyGameInit_1.default.MainScene, false, MyGameInit_1.default.SelectStage);
    };
    return GameOverDialogMediator;
}(Mediator_1.default));
exports.default = GameOverDialogMediator;
},{"../../game/App":5,"../../game/Mediator":12,"../MyEvent":21,"../MyGameInit":22,"../effect/MyEffect":24,"../scene/RotationEffect":63,"../session/BagSession":66,"../session/BattleSession":67,"../session/SdkSession":73}],29:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Mediator_1 = require("../../game/Mediator");
var App_1 = require("../../game/App");
var MyGameInit_1 = require("../MyGameInit");
var RotationEffect_1 = require("../scene/RotationEffect");
var KillBossDialogMediator = /** @class */ (function (_super) {
    __extends(KillBossDialogMediator, _super);
    function KillBossDialogMediator() {
        var _this = _super.call(this) || this;
        _this.battleSession = null;
        _this.bagSession = null;
        return _this;
    }
    KillBossDialogMediator.prototype.setSprite = function (sp) {
        this.dialog = sp;
    };
    KillBossDialogMediator.prototype.init = function () {
        this.dialog.baoxiang.ani1.gotoAndStop(0);
        this.dialog.baoxiang.once(Laya.Event.CLICK, this, this.clickFun);
        RotationEffect_1.default.play(this.dialog.light);
    };
    KillBossDialogMediator.prototype.clickFun = function () {
        this.dialog.baoxiang.ani1.play(0, false);
        this.dialog.baoxiang.ani1.on(Laya.Event.COMPLETE, this, this.aniComFun);
    };
    KillBossDialogMediator.prototype.aniComFun = function () {
        var arr = this.battleSession.getEquipArr();
        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
            var i = arr_1[_i];
            this.bagSession.addEquipInBagBySys(i);
        }
        this.bagSession.getEquipDialog(arr, new Laya.Handler(this, this.aniCom2Fun));
    };
    KillBossDialogMediator.prototype.aniCom2Fun = function () {
        App_1.default.getInstance().openScene(MyGameInit_1.default.MainScene, true, MyGameInit_1.default.SelectStage);
    };
    return KillBossDialogMediator;
}(Mediator_1.default));
exports.default = KillBossDialogMediator;
},{"../../game/App":5,"../../game/Mediator":12,"../MyGameInit":22,"../scene/RotationEffect":63}],30:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Mediator_1 = require("../../game/Mediator");
var App_1 = require("../../game/App");
var MyGameInit_1 = require("../MyGameInit");
var NewerSession_1 = require("../session/NewerSession");
var Tips_1 = require("../scene/Tips");
var LogType_1 = require("../session/LogType");
var RotationEffect_1 = require("../scene/RotationEffect");
var TimeLogo_1 = require("../scene/TimeLogo");
var MyEffect_1 = require("../effect/MyEffect");
var MainSceneMediator = /** @class */ (function (_super) {
    __extends(MainSceneMediator, _super);
    function MainSceneMediator() {
        var _this = _super.call(this) || this;
        _this.bagSession = null;
        _this.petSession = null;
        _this.sdkSession = null;
        _this.newerSession = null;
        _this.battleSession = null;
        _this.dataSession = null;
        _this.taskSession = null;
        _this.tianFuSession = null;
        return _this;
    }
    MainSceneMediator.prototype.setSprite = function (sprite) {
        this.mainScene = sprite;
        this.mainScene.height = Laya.stage.height;
        this.mainScene.timeLogo.on(Laya.Event.CLICK, this, this.timeLogoFun);
    };
    MainSceneMediator.prototype.timeLogoFun = function () {
        App_1.default.dialog(MyGameInit_1.default.TimeGoldDialog);
    };
    MainSceneMediator.prototype.setParam = function (param) {
        if (param == MyGameInit_1.default.SelectStage) {
            this.battleSession.sys.starID;
            this.battleSession.openSelectStageDialog(this.battleSession.sys.starID); //;Stage2Mediator.STAGE_ID 
        }
    };
    MainSceneMediator.prototype.onEGG_UPDATE = function () {
        this.mainScene.eggFc.value = this.petSession.eggNum + "";
    };
    MainSceneMediator.prototype.onRED_UPDATE = function () {
        this.btnred(this.mainScene.roleBtn, this.bagSession.haveNewEquip());
    };
    MainSceneMediator.prototype.onTASK_UPDATE = function () {
        this.btnred(this.mainScene.taskBtn, this.taskSession.haveOver());
    };
    MainSceneMediator.prototype.onTIAN_FU_UPDATE = function () {
        this.btnred(this.mainScene.tianFuBtn, this.tianFuSession.check(false));
    };
    MainSceneMediator.prototype.onTALENT_UPDATE = function () {
        this.onTIAN_FU_UPDATE();
    };
    MainSceneMediator.prototype.btnred = function (btn, value) {
        var v = btn.getChildByName("red");
        v.visible = value;
        if (value) {
            v.ani1.play(0, true);
        }
        else {
            v.visible = false;
        }
    };
    MainSceneMediator.prototype.onGOLD_UPDATE = function () {
        this.mainScene.goldFc.value = this.bagSession.gold + "";
    };
    //public stageArr:Array<Laya.Button> = [];
    MainSceneMediator.prototype.init = function () {
        //this.mainScene.taskBtn.visible = false;
        this.mainScene.newView.ani1.play(0, true);
        this.mainScene.new2.ani1.play(0, true);
        this.onEGG_UPDATE();
        this.onGOLD_UPDATE();
        this.onRED_UPDATE();
        this.onTASK_UPDATE();
        this.onTIAN_FU_UPDATE();
        RotationEffect_1.default.play(this.mainScene.zhuanImg);
        var newview = this.mainScene.stage3.getChildByName("newView");
        this.setStageView(this.mainScene.stage1, 0);
        if (this.setStageView(this.mainScene.stage2, 13)) {
            this.mainScene.Stage2Mv.ani1.play(0, true);
        }
        if (this.setStageView(this.mainScene.stage3, 25)) {
            newview.visible = true;
            newview.ani1.play(0, true);
            this.mainScene.stage3Ani.ani1.play(0, true);
        }
        this.mainScene.stage1.clickHandler = new Laya.Handler(this, this.stageFun, [1001]);
        this.mainScene.stage2.clickHandler = new Laya.Handler(this, this.stageFun, [2001]);
        this.mainScene.stage3.clickHandler = new Laya.Handler(this, this.stageFun, [3001]);
        if (this.newerSession.isNew) {
            this.newerSession.g.toulanFun();
            //this.onCLICK_CITY();
            Laya.timer.once(800, this, this.onCLICK_CITY);
        }
        //this.mainScene.zhuanBtn.visible = false;
        this.effect();
        var t = new TimeLogo_1.default();
        t.setUI(this.mainScene.timeLogo);
    };
    MainSceneMediator.prototype.setStageView = function (btn, target) {
        btn.disabled = (this.battleSession.stageNum < target);
        return !btn.disabled;
    };
    MainSceneMediator.prototype.effect = function () {
        var t = 600;
        var d = 10;
        MyEffect_1.default.t2(this.mainScene.bottomBox, "bottom", -250, t, d);
        MyEffect_1.default.t2(this.mainScene.topBox, "top", -90, t, d);
        MyEffect_1.default.t2(this.mainScene.rightBox, "right", -150, t, d);
        MyEffect_1.default.t2(this.mainScene.timeLogo, "right", -120, t, d);
    };
    MainSceneMediator.prototype.stageFun = function (stageId) {
        var id = this.getMinNormalId(stageId) - 1;
        if (this.battleSession.stageNum < id) {
            Tips_1.default.show("请您先通过前面的关卡");
            return;
        }
        this.battleSession.openSelectStageDialog(stageId);
    };
    MainSceneMediator.prototype.getMinNormalId = function (stageId) {
        var arr = App_1.default.getInstance().configManager.getDataArr(MyGameInit_1.default.sys_stageinfo);
        var arr1 = [];
        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
            var i = arr_1[_i];
            if (stageId == i.starID && i.stageType == 1) {
                return i.id;
            }
        }
        return arr1[0].id;
    };
    MainSceneMediator.prototype.Tbtn_click = function () {
        if (this.newerSession.isNew) {
            return;
        }
        App_1.default.dialog(MyGameInit_1.default.TreasureDialog);
    };
    MainSceneMediator.prototype.roleBtn_click = function () {
        if (this.newerSession.isNew) {
            return;
        }
        App_1.default.dialog(MyGameInit_1.default.RoleDialog);
    };
    MainSceneMediator.prototype.goldBtn_click = function () {
        if (this.newerSession.isNew) {
            return;
        }
        App_1.default.dialog(MyGameInit_1.default.TimeGoldDialog);
    };
    MainSceneMediator.prototype.signBtn_click = function () {
        if (this.newerSession.isNew) {
            return;
        }
        this.sdkSession.savePlayerData(1);
        App_1.default.dialog(MyGameInit_1.default.SignDialog);
    };
    MainSceneMediator.prototype.settingBtn_click = function () {
        if (this.newerSession.isNew) {
            return;
        }
        App_1.default.dialog(MyGameInit_1.default.SettingDialog);
    };
    MainSceneMediator.prototype.shareBtn_click = function () {
        // App.dialog( MyGameInit.NewGetItemDialog , true, [] );
        // return;
        if (this.newerSession.isNew) {
            return;
        }
        this.sdkSession.share(new Laya.Handler(this, this.shareOverFun));
    };
    MainSceneMediator.prototype.shareOverFun = function (stat) {
        // return;
        // let arr:Array<any> = [];
        // arr.push(10000);
        // for( let i :number = 0 ;i < 2; i++ ){
        //     if( this.bagSession.isFull( EQUIP_TYPE.PET ) ){
        //     }else{
        //         let e = this.petSession.getNewPetNoEgg();
        //         arr.push(e);
        //     }
        // }
        // this.bagSession.getEquipDialog( arr , null, false );
        // this.bagSession.changeGold( 10000 );
    };
    MainSceneMediator.prototype.onCLICK_CITY = function () {
        var a = NewerSession_1.default.getHand();
        Laya.stage.addChild(a);
        a.ani1.play(0, true);
        a.visible = true;
        a.zOrder = 1000;
        var p = this.mainScene.stage1.localToGlobal(new Laya.Point(0, 0));
        a.x = p.x + 150;
        a.y = p.y + 190;
        this.dataSession.log(LogType_1.default.NEWER_CLICK_CITY);
    };
    MainSceneMediator.prototype.clicknext = function () {
        NewerSession_1.default.getHand().visible = false;
    };
    MainSceneMediator.prototype.rankBtn_click = function () {
        if (this.newerSession.isNew) {
            return;
        }
        App_1.default.dialog(MyGameInit_1.default.RankDialog);
    };
    MainSceneMediator.prototype.getUrl = function () {
        //let arr:Array<any> = ["sound/alert.mp3","sound/comboEffect1.wav","sound/fx_button.wav","sound/fx_Hit.wav","sound/fx_itemBad.wav","sound/fx_itemGood.wav","sound/fx_itemSelect.wav","sound/fx_lose.wav","sound/fx_move.wav","sound/fx_openBox.wav","sound/fx_success.wav"];
        //arr.push( ui.scene.PrePlayerUI );
        //return arr;
        return [];
    };
    MainSceneMediator.prototype.getPreUrl = function () {
        return [];
        // let arr:Array<any> = ["sound/alert.mp3","sound/comboEffect1.wav","sound/fx_button.wav","sound/fx_Hit.wav","sound/fx_itemBad.wav","sound/fx_itemGood.wav","sound/fx_itemSelect.wav","sound/fx_lose.wav","sound/fx_move.wav","sound/fx_openBox.wav","sound/fx_success.wav"];
        // arr.push( ui.scene.PrePlayerUI );
        // arr.push( "sence/hechengzha.png" );
        // arr.push( "sence/clip_he.png" );
        // return arr;
        // //[ "res/atlas/player/equip.png","res/atlas/player/equip.atlas","res/atlas/player/head.png","res/atlas/player/head.atlas","res/atlas/player/horse.png","res/atlas/player/horse.atlas","res/atlas/player/weapon.png","res/atlas/player/weapon.atlas"];
        // return //["sence/hechengzha.png","sence/clip_he.png", "res/atlas/player/equip.png","res/atlas/player/equip.atlas","res/atlas/player/head.png","res/atlas/player/head.atlas","res/atlas/player/horse.png","res/atlas/player/horse.atlas","res/atlas/player/weapon.png","res/atlas/player/weapon.atlas"];
    };
    MainSceneMediator.prototype.getLoaderUrl = function () {
        var arr = [];
        arr.push("res/atlas/sence.atlas");
        arr.push("res/atlas/mainscene.atlas");
        arr.push("res/atlas/player/all.atlas");
        return arr;
    };
    MainSceneMediator.prototype.taskBtn_click = function () {
        App_1.default.dialog(MyGameInit_1.default.TASK);
    };
    MainSceneMediator.prototype.tianFuBtn_click = function () {
        App_1.default.dialog(MyGameInit_1.default.TIANFU);
    };
    MainSceneMediator.prototype.zhuanBtn_click = function () {
        App_1.default.dialog(MyGameInit_1.default.ZHUAN);
    };
    return MainSceneMediator;
}(Mediator_1.default));
exports.default = MainSceneMediator;
},{"../../game/App":5,"../../game/Mediator":12,"../MyGameInit":22,"../effect/MyEffect":24,"../scene/RotationEffect":63,"../scene/TimeLogo":64,"../scene/Tips":65,"../session/LogType":70,"../session/NewerSession":71}],31:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Mediator_1 = require("../../game/Mediator");
var SysConfig_1 = require("../config/SysConfig");
var MyGameInit_1 = require("../MyGameInit");
var App_1 = require("../../game/App");
var RotationEffect_1 = require("../scene/RotationEffect");
var MyEffect_1 = require("../effect/MyEffect");
var MergeShareMediator = /** @class */ (function (_super) {
    __extends(MergeShareMediator, _super);
    function MergeShareMediator() {
        var _this = _super.call(this) || this;
        _this.sdkSession = null;
        _this.dialog = null;
        _this.equip = null;
        return _this;
    }
    MergeShareMediator.prototype.setSprite = function (sp) {
        this.dialog = sp;
    };
    MergeShareMediator.prototype.setParam = function (p) {
        this.equip = p;
        this.setCell(this.dialog.c1, p);
    };
    MergeShareMediator.prototype.setCell = function (c, equip) {
        var sys = App_1.default.getConfig(MyGameInit_1.default.sys_item, equip.id);
        c.logoImg.skin = SysConfig_1.Res.getItemUrl(sys.id);
        c.selectImg.visible = false;
        c.useImg.visible = false;
        c.canHeEffectView.visible = false;
        c.fc.value = sys.itemLevel + "";
        c.bgImg.skin = SysConfig_1.Res.getItemBorder(sys.itemQuality);
        var arr = sys.getArr();
        this.dialog.gongTxt.text = arr[0] + ":" + arr[1];
    };
    MergeShareMediator.prototype.init = function () {
        RotationEffect_1.default.play(this.dialog.light);
        this.dialog.cancelBtn.visible = false;
        Laya.timer.once(2000, this, this.timerFun);
        this.dialog.v1.sharebox.visible = true;
        this.dialog.v1.adbox.visible = false;
        this.dialog.v1.AdBtn.clickHandler = new Laya.Handler(this, this.cFun);
        this.dialog.v1.ani1.play(0, true);
    };
    MergeShareMediator.prototype.cFun = function () {
        this.sdkSession.share(new Laya.Handler(this, this.sFun));
    };
    MergeShareMediator.prototype.sFun = function () {
    };
    MergeShareMediator.prototype.timerFun = function () {
        this.dialog.cancelBtn.visible = true;
        MyEffect_1.default.alhpa(this.dialog.cancelBtn, 1, 150);
    };
    return MergeShareMediator;
}(Mediator_1.default));
exports.default = MergeShareMediator;
},{"../../game/App":5,"../../game/Mediator":12,"../MyGameInit":22,"../config/SysConfig":23,"../effect/MyEffect":24,"../scene/RotationEffect":63}],32:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Mediator_1 = require("../../game/Mediator");
var GetItemViewBox_1 = require("../scene/GetItemViewBox");
var App_1 = require("../../game/App");
var MyEvent_1 = require("../MyEvent");
var NewGetItemMediator = /** @class */ (function (_super) {
    __extends(NewGetItemMediator, _super);
    function NewGetItemMediator() {
        var _this = _super.call(this) || this;
        _this.dialog = null;
        _this.now = 0;
        _this.dArr = [];
        _this.col = 3;
        return _this;
    }
    NewGetItemMediator.prototype.setSprite = function (sp) {
        this.dialog = sp;
        this.dialog.on(Laya.Event.UNDISPLAY, this, this.undisFun);
    };
    NewGetItemMediator.prototype.undisFun = function () {
        App_1.default.sendEvent(MyEvent_1.default.GET_GOLD_CLOSE);
    };
    NewGetItemMediator.prototype.setParam = function (p) {
        this.dialog.box.removeChildren();
        if (p instanceof Array) {
            this.dArr = p;
        }
        else {
            this.dArr = [p];
        }
        //this.dArr = [1,1,1,1,1,1,1,1,1,1,1,1];
        this.now = 0;
        var len = this.dArr.length;
        this.dialog.box.width = ((len >= this.col) ? 3 : len) * 700;
        this.dialog.box.height = Math.ceil(len / this.col) * 700;
        var sw = 750 / this.dialog.box.width;
        this.dialog.box.scale(sw, sw);
        var wid = this.dialog.box.width * this.dialog.box.scaleX;
        this.dialog.btn.y = this.dialog.box.height * sw + 100;
        if (this.dialog.btn.y > (Laya.stage.height - 80)) {
            this.dialog.btn.y = Laya.stage.height - 80;
        }
        this.dialog.box.x = (750 - wid) / 2;
        Laya.timer.once(400, this, this.effect);
        this.dialog.height = this.dialog.box.height * sw + 200;
        //this.dialog.graphics.drawRect( 0,0, this.dialog.width ,this.dialog.height,"#000000" );
    };
    NewGetItemMediator.prototype.effect = function () {
        var v = new GetItemViewBox_1.default();
        v.x = this.now % this.col * 700 + 350;
        v.y = Math.floor(this.now / this.col) * 600 + 350;
        v.setData(this.dArr[this.now]);
        this.dialog.box.addChild(v);
        this.now++;
        var t = new Laya.Tween();
        t.from(v, { scaleX: 3, scaleY: 3, alpha: 0 }, 300);
        if (this.now < this.dArr.length) {
            Laya.timer.once(100, this, this.effect);
        }
        else {
            this.dialog.btn.visible = true;
        }
    };
    NewGetItemMediator.prototype.init = function () {
        this.dialog.btn.visible = false;
    };
    return NewGetItemMediator;
}(Mediator_1.default));
exports.default = NewGetItemMediator;
},{"../../game/App":5,"../../game/Mediator":12,"../MyEvent":21,"../scene/GetItemViewBox":54}],33:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Mediator_1 = require("../../game/Mediator");
var App_1 = require("../../game/App");
var MyGameInit_1 = require("../MyGameInit");
var DataSession_1 = require("../session/DataSession");
var NewerMediator = /** @class */ (function (_super) {
    __extends(NewerMediator, _super);
    function NewerMediator() {
        var _this = _super.call(this) || this;
        _this.battleSession = null;
        _this.arr = [];
        _this.ttt = null;
        return _this;
    }
    /**
     * 应该在这时候背景加载资源
     */
    NewerMediator.prototype.init = function () {
        this.allvisible();
        this.arr.push(this.scene.img1);
        this.arr.push(this.scene.img2);
        //this.arr.push(this.scene.img3 );
        this.exeone();
        this.scene.tiaoguo.on(Laya.Event.CLICK, this, this.tiaoFun);
    };
    NewerMediator.prototype.tiaoFun = function () {
        Laya.timer.clearAll(this);
        if (this.ttt) {
            this.ttt.clear();
        }
        this.e3();
    };
    NewerMediator.prototype.exeone = function () {
        this.allvisible();
        if (this.arr.length == 0) {
            this.e3();
            return;
        }
        var a = this.arr.shift();
        this.disOne(a);
    };
    NewerMediator.prototype.e3 = function () {
        this.battleSession.setNewer();
        DataSession_1.default.START_TIME = Laya.Browser.now();
        App_1.default.getInstance().openScene(MyGameInit_1.default.BattleScene);
    };
    NewerMediator.prototype.disOne = function (a) {
        a.visible = true;
        a.alpha = 0;
        var t = new Laya.Tween();
        this.ttt = t;
        t.to(a, { alpha: 1 }, 1000, null, new Laya.Handler(this, this.comFun));
    };
    NewerMediator.prototype.comFun = function () {
        Laya.timer.once(2500, this, this.nextFun);
    };
    NewerMediator.prototype.nextFun = function () {
        var s = this.getOne();
        var t = new Laya.Tween();
        t.to(s, { alpha: 0 }, 130, null, new Laya.Handler(this, this.exeone));
    };
    NewerMediator.prototype.getOne = function () {
        for (var i = 0; i < this.scene.numChildren; i++) {
            var s = this.scene.getChildAt(i);
            if (s.visible) {
                return s;
            }
        }
    };
    NewerMediator.prototype.allvisible = function () {
        for (var i = 0; i < this.scene.numChildren; i++) {
            var s = this.scene.getChildAt(i);
            s.visible = false;
        }
        this.scene.tiaoguo.visible = true;
    };
    NewerMediator.prototype.setSprite = function (sp) {
        this.scene = sp;
    };
    NewerMediator.prototype.getLoaderPreUrl = function () {
        var arr = [];
        arr.push("battlescene/bg0.jpg");
        arr.push("battlescene/shu1.png");
        arr.push("battlescene/shu2.png");
        arr.push("res/atlas/player/all.atlas");
        return arr;
    };
    return NewerMediator;
}(Mediator_1.default));
exports.default = NewerMediator;
},{"../../game/App":5,"../../game/Mediator":12,"../MyGameInit":22,"../session/DataSession":68}],34:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Mediator_1 = require("../../game/Mediator");
var BagSession_1 = require("../session/BagSession");
var SysConfig_1 = require("../config/SysConfig");
var BattleSession_1 = require("../session/BattleSession");
var MyGameInit_1 = require("../MyGameInit");
var App_1 = require("../../game/App");
var RankInfoMediator = /** @class */ (function (_super) {
    __extends(RankInfoMediator, _super);
    function RankInfoMediator() {
        var _this = _super.call(this) || this;
        _this.dialog = null;
        return _this;
    }
    RankInfoMediator.prototype.setSprite = function (sp) {
        this.dialog = sp;
    };
    RankInfoMediator.prototype.init = function () {
        this.dialog.playerMv.wait.play(0, true);
        var obj = this.param;
        this.dialog.nameText.text = obj.name;
        var s = obj.items;
        var arr = s.split(",");
        BagSession_1.default.setEquip(this.dialog.playerMv, arr);
        this.dialog.petImg.skin = "player/all/" + arr[4] + ".png"; //Res.getItemUrl( parseInt(arr[4]) );
        this.setEquipmentByPart(this.dialog.e0, arr[BattleSession_1.EQUIP_TYPE.WEAPON - 2]);
        this.setEquipmentByPart(this.dialog.e1, arr[BattleSession_1.EQUIP_TYPE.HEAD - 2]);
        this.setEquipmentByPart(this.dialog.e2, arr[BattleSession_1.EQUIP_TYPE.BODY - 2]);
        this.setEquipmentByPart(this.dialog.e3, arr[BattleSession_1.EQUIP_TYPE.HORSE - 2]);
    };
    RankInfoMediator.prototype.setEquipmentByPart = function (img, id) {
        var sys = App_1.default.getConfig(MyGameInit_1.default.sys_item, parseInt(id));
        var image = img.getChildAt(0);
        img.skin = SysConfig_1.Res.getItemBorder(sys.itemQuality);
        image.skin = SysConfig_1.Res.getItemUrl(sys.id);
    };
    return RankInfoMediator;
}(Mediator_1.default));
exports.default = RankInfoMediator;
},{"../../game/App":5,"../../game/Mediator":12,"../MyGameInit":22,"../config/SysConfig":23,"../session/BagSession":66,"../session/BattleSession":67}],35:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Mediator_1 = require("../../game/Mediator");
var App_1 = require("../../game/App");
var MyGameInit_1 = require("../MyGameInit");
var RankMediator = /** @class */ (function (_super) {
    __extends(RankMediator, _super);
    function RankMediator() {
        var _this = _super.call(this) || this;
        _this.dataSession = null;
        _this.sdkSession = null;
        _this.rankSkin = ["rank/jinpai.png", "rank/tongpai.png", "rank/yinpai.png"];
        return _this;
    }
    RankMediator.prototype.setSprite = function (a) {
        this.dialog = a;
        this.dialog.isShowEffect = false;
    };
    RankMediator.prototype.init = function () {
        this.dialog.list.vScrollBarSkin = "";
        this.dialog.tab.selectHandler = new Laya.Handler(this, this.selectFun);
        this.dialog.tab.selectedIndex = -1;
        this.dialog.tab.selectedIndex = 0;
        this.dialog.list.renderHandler = new Laya.Handler(this, this.renderFun);
        this.dialog.list.selectEnable = true;
        this.dialog.list.selectHandler = new Laya.Handler(this, this.listSelectFun);
        if (Laya.Browser.onMiniGame == false) {
            return;
        }
        if (this.sdkSession.haveRight) {
            return;
        }
        else {
            this.dialog.tab.disabled = true;
            Laya.timer.callLater(this, this.shouQuan);
        }
    };
    RankMediator.prototype.shouQuan = function () {
        this.sdkSession.addUserInfoBtn(this.dialog.tab, new Laya.Handler(this, this.useFun));
    };
    /**
     * 授权成功
     */
    RankMediator.prototype.useFun = function () {
        this.dataSession.saveRank();
        this.dialog.tab.disabled = false;
        this.dialog.tab.selectedIndex = 1;
    };
    RankMediator.prototype.listSelectFun = function (index) {
        if (index == -1) {
            return;
        }
        var obj = this.dialog.list.getItem(index);
        App_1.default.dialog(MyGameInit_1.default.RANK_INFO, false, obj);
        this.dialog.list.selectedIndex = -1;
    };
    RankMediator.prototype.renderFun = function (cell, index) {
        cell.bg.visible = false;
        var obj = this.dialog.list.getItem(index);
        cell.jifen.value = parseInt(obj.score + "") + "";
        cell.mingzi.text = obj.name;
        var rank = parseInt(obj.rank);
        cell.img.skin = obj.url;
        if (rank < 3) {
            cell.title.visible = true;
            cell.mingci.visible = false;
            cell.title.skin = this.rankSkin[rank];
        }
        else {
            cell.title.visible = false;
            cell.mingci.visible = true;
            cell.mingci.value = (rank + 1) + "";
        }
    };
    RankMediator.prototype.selectFun = function (index) {
        if (index == -1) {
            return;
        }
        this["tab" + index]();
    };
    RankMediator.prototype.tab0 = function () {
        this.dialog.wxopen.visible = true;
        this.dialog.list.visible = false;
        this.dialog.myText.visible = false;
        if (Laya.Browser.onMiniGame == false) {
            return;
        }
        var obj = {};
        obj.type = 0;
        obj.openId = this.dataSession.saveKey;
        Laya.Browser.window.wx.getOpenDataContext().postMessage(obj);
    };
    RankMediator.prototype.tab1 = function () {
        this.dialog.list.array = [];
        this.dialog.wxopen.visible = false;
        this.dialog.list.visible = true;
        this.dialog.myText.visible = true;
        this.dataSession.getRank(this, this.rankFun);
    };
    RankMediator.prototype.rankFun = function (str) {
        if (this.dialog.tab.selectedIndex != 1) {
            return;
        }
        //console.log( "排行榜服务器返回的字符串是" , str );
        var obj = JSON.parse(str);
        var myobj = obj.my;
        var arr = obj.list;
        //this.sortList(arr);
        this.dialog.list.array = arr;
        var rank = parseInt(myobj.rank) + 1;
        this.dialog.myText.text = "当前排名:" + rank;
    };
    RankMediator.prototype.sortList = function (arr) {
        // let obj = this.dialog.list.getItem(index);
        // cell.jifen.value = parseInt( obj.score + "" ) + "";
        // cell.mingzi.text = obj.name;
        // let rank = parseInt( obj.rank );
        // cell.img.skin = obj.url;
        arr.sort(this.sortFun);
        for (var i = 0; i < arr.length; i++) {
            arr[i].rank = i;
        }
    };
    RankMediator.prototype.sortFun = function (a, b) {
        return parseInt(b.score) - parseInt(a.score);
    };
    return RankMediator;
}(Mediator_1.default));
exports.default = RankMediator;
},{"../../game/App":5,"../../game/Mediator":12,"../MyGameInit":22}],36:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Mediator_1 = require("../../game/Mediator");
var BattleSession_1 = require("../session/BattleSession");
var NewerSession_1 = require("../session/NewerSession");
var App_1 = require("../../game/App");
var MyEvent_1 = require("../MyEvent");
var SdkSession_1 = require("../session/SdkSession");
var Tips_1 = require("../scene/Tips");
var LogType_1 = require("../session/LogType");
var RoleDialogMediator = /** @class */ (function (_super) {
    __extends(RoleDialogMediator, _super);
    function RoleDialogMediator() {
        var _this = _super.call(this) || this;
        _this.battleSession = null;
        _this.bagSession = null;
        _this.newerSession = null;
        _this.petSession = null;
        _this.sdkSession = null;
        _this.dataSession = null;
        return _this;
    }
    RoleDialogMediator.prototype.setSprite = function (sprite) {
        this.dialog = sprite;
    };
    RoleDialogMediator.prototype.init = function () {
        this.dialog.setData(this.bagSession.bagMap);
        if (this.newerSession.isNew) {
            Laya.timer.once(500, this, this.showMove);
            this.dialog.closeBtn.name = "";
            this.dialog.sellBtn.mouseEnabled = false;
            this.dialog.list.getCell(0).mouseEnabled = false;
            this.dialog.list.getCell(1).mouseEnabled = false;
            this.dialog.zhengliBtn.mouseEnabled = false;
            this.dialog.tab.mouseEnabled = false;
            this.dialog.equipBtn.mouseEnabled = false;
            this.dataSession.log(LogType_1.default.NEWER_OPEN_ROLE);
        }
        else {
            this.dialog.closeBtn.name = "close";
            this.dialog.sellBtn.mouseEnabled = true;
            this.dialog.list.getCell(0).mouseEnabled = true;
            this.dialog.list.getCell(1).mouseEnabled = true;
            this.dialog.zhengliBtn.mouseEnabled = true;
            this.dialog.tab.mouseEnabled = true;
            this.dialog.equipBtn.mouseEnabled = true;
            this.dialog.list.mouseEnabled = true;
        }
        this.onRED_UPDATE();
        this.onEQUIP_UPDATE();
        this.resetEggNum();
        this.sdkSession.initAdBtn(this.dialog.effBtn, SdkSession_1.default.GET_PET);
    };
    RoleDialogMediator.prototype.zhengliBtn_click = function () {
        this.dialog.zhengliFun();
        //整理完必须
        this.dataSession.saveData();
    };
    /**
     * 新手引导手指头移动
     */
    RoleDialogMediator.prototype.showMove = function () {
        var v = NewerSession_1.default.getHand();
        Laya.stage.addChild(v);
        v.ani1.gotoAndStop(0);
        v.lightClip.stop();
        v.lightClip.visible = false;
        v.zOrder = 100000;
        this.comFun();
    };
    RoleDialogMediator.prototype.comFun = function () {
        var v = NewerSession_1.default.getHand();
        v.ani1.gotoAndStop(0);
        v.lightClip.visible = false;
        var c1 = this.dialog.list.getCell(2);
        var c2 = this.dialog.list.getCell(1);
        var p1 = c1.localToGlobal(new Laya.Point(0, 0));
        var p2 = c2.localToGlobal(new Laya.Point(0, 0));
        v.x = p1.x + 70;
        v.y = p1.y + 65;
        var t = new Laya.Tween();
        t.to(v, { x: p2.x + 70 }, 1000, null, new Laya.Handler(this, this.com2Fun), 500);
    };
    RoleDialogMediator.prototype.com2Fun = function () {
        Laya.timer.once(500, this, this.com3Fun);
    };
    RoleDialogMediator.prototype.com3Fun = function () {
        var v = NewerSession_1.default.getHand();
        v.ani1.gotoAndStop(0);
        v.lightClip.visible = false;
        var t = new Laya.Tween();
        var c1 = this.dialog.list.getCell(2);
        var p1 = c1.localToGlobal(new Laya.Point(0, 0));
        t.to(v, { x: p1.x + 70 }, 100, null, new Laya.Handler(this, this.comFun));
    };
    RoleDialogMediator.prototype.onEQUIP_UPDATE = function () {
        this.dialog.refreshPlayer();
    };
    RoleDialogMediator.prototype.onBAG_UPDATE = function () {
        this.dialog.refresh();
    };
    RoleDialogMediator.prototype.onMERGE_EQUIP = function () {
        if (this.newerSession.isNew == false) {
            return;
        }
        var v = NewerSession_1.default.getHand();
        v.removeSelf();
        Laya.Tween.clearAll(v);
        Laya.timer.once(500, this, this.mbtnFun);
    };
    RoleDialogMediator.prototype.mbtnFun = function () {
        this.dialog.list.selectedIndex = 1;
        this.dialog.list.mouseEnabled = false;
        this.dialog.equipBtn.mouseEnabled = true;
        var v = NewerSession_1.default.getHand();
        Laya.Tween.clearAll(v);
        Laya.stage.addChild(v);
        var p1 = this.dialog.equipBtn.localToGlobal(new Laya.Point(0, 0));
        v.x = p1.x + 81;
        v.y = p1.y + 35;
        v.ani1.play();
        v.lightClip.visible = true;
        v.lightClip.play();
        this.dialog.equipBtn.once(Laya.Event.CLICK, this, this.equipClickFun);
        this.dataSession.log(LogType_1.default.NEWER_EQUIP);
    };
    RoleDialogMediator.prototype.equipClickFun = function () {
        var v = NewerSession_1.default.getHand();
        v.removeSelf();
        Laya.timer.once(500, this, this.timr5);
    };
    RoleDialogMediator.prototype.timr5 = function () {
        this.dialog.close();
        this.newerSession.itemnum = 0;
        App_1.default.sendEvent(MyEvent_1.default.EQUIP_OVER);
    };
    RoleDialogMediator.prototype.onATTRIBUTE_UPDATE = function () {
    };
    RoleDialogMediator.prototype.onEGG_UPDATE = function () {
        this.resetEggNum();
    };
    RoleDialogMediator.prototype.onRED_UPDATE = function () {
        this.setType(this.dialog.v0, BattleSession_1.EQUIP_TYPE.WEAPON);
        this.setType(this.dialog.v1, BattleSession_1.EQUIP_TYPE.HEAD);
        this.setType(this.dialog.v2, BattleSession_1.EQUIP_TYPE.BODY);
        this.setType(this.dialog.v3, BattleSession_1.EQUIP_TYPE.HORSE);
        this.setType(this.dialog.v4, BattleSession_1.EQUIP_TYPE.PET);
    };
    RoleDialogMediator.prototype.setType = function (v, type) {
        if (type == BattleSession_1.EQUIP_TYPE.PET) {
            if (this.petSession.eggNum > 0) {
                v.visible = true;
                v.ani1.play(0, true);
                return;
            }
        }
        if (this.bagSession.redMap[type] == null) {
            v.visible = false;
        }
        else {
            v.visible = true;
            v.ani1.play(0, true);
        }
    };
    RoleDialogMediator.prototype.effBtn_click = function () {
        if (this.petSession.eggNum == 0) {
            Tips_1.default.show("您没有宠物蛋");
            return;
        }
        if (this.bagSession.isFull(BattleSession_1.EQUIP_TYPE.PET)) {
            Tips_1.default.show("宠物背包已满");
            return;
        }
        this.sdkSession.playAdVideo(SdkSession_1.default.GET_PET, new Laya.Handler(this, this.aniFun));
    };
    /**
     * 视频播放完毕 得到宠物蛋 随机1-5级
     */
    RoleDialogMediator.prototype.aniFun = function (stat) {
        if (stat != 1) {
            return;
        }
        var arr = this.petSession.getNewPetArr();
        this.bagSession.getEquipDialog(arr, null, false);
        this.resetEggNum();
    };
    RoleDialogMediator.prototype.resetEggNum = function () {
        this.dialog.goldFc.value = this.petSession.eggNum + "";
    };
    return RoleDialogMediator;
}(Mediator_1.default));
exports.default = RoleDialogMediator;
},{"../../game/App":5,"../../game/Mediator":12,"../MyEvent":21,"../scene/Tips":65,"../session/BattleSession":67,"../session/LogType":70,"../session/NewerSession":71,"../session/SdkSession":73}],37:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Mediator_1 = require("../../game/Mediator");
var DataSession_1 = require("../session/DataSession");
var App_1 = require("../../game/App");
var MyGameInit_1 = require("../MyGameInit");
var SettingMediator = /** @class */ (function (_super) {
    __extends(SettingMediator, _super);
    function SettingMediator() {
        var _this = _super.call(this) || this;
        _this.setSession = null;
        _this.dataSession = null;
        _this.sdkSession = null;
        return _this;
    }
    SettingMediator.prototype.yesBtn_click = function () {
        this.exitGameFun();
    };
    SettingMediator.prototype.btn1_click = function () {
        this.musicFun();
    };
    SettingMediator.prototype.btn2_click = function () {
        this.soundFun();
    };
    SettingMediator.prototype.clearBtn_click = function () {
        this.dataSession.clearData();
    };
    SettingMediator.prototype.setSprite = function (s) {
        this.dialog = s;
    };
    SettingMediator.prototype.init = function () {
        if (App_1.default.getInstance().nowSceneUrl == MyGameInit_1.default.MainScene) {
            this.dialog.yesBtn.disabled = true;
        }
        else {
            this.dialog.yesBtn.disabled = false;
        }
        this.reset();
        var s1 = "ID:" + this.dataSession.saveKey.substring(this.dataSession.saveKey.length - 4);
        var s2 = "VER:" + DataSession_1.default.GAME_VER + "";
        this.dialog.idtext.text = s1 + "    " + s2;
        this.dialog.clearBtn.visible = false; //(MyConfig.TEST == 1);
    };
    SettingMediator.prototype.musicFun = function () {
        this.setSession.setMusic(Laya.SoundManager.musicMuted);
        App_1.default.getInstance().gameSoundManager.setBgmMuted(Laya.SoundManager.musicMuted);
        this.reset();
    };
    SettingMediator.prototype.soundFun = function () {
        this.setSession.setSound(Laya.SoundManager.soundMuted);
        App_1.default.getInstance().gameSoundManager.setBgmMuted(Laya.SoundManager.soundMuted);
        this.reset();
    };
    SettingMediator.prototype.exitGameFun = function () {
        this.sdkSession.lp(false);
        App_1.default.getInstance().openScene(MyGameInit_1.default.MainScene, true, MyGameInit_1.default.SelectStage);
        this.dialog.close();
    };
    SettingMediator.prototype.reset = function () {
        if (Laya.SoundManager.musicMuted) {
            this.dialog.btn1.skin = "sence/btn_hong.png";
            this.dialog.img1.skin = "setdialog/shengyinguan.png";
        }
        else {
            this.dialog.btn1.skin = "sence/btn_lv.png";
            this.dialog.img1.skin = "setdialog/shengyinkai.png";
        }
        if (Laya.SoundManager.soundMuted) {
            this.dialog.btn2.skin = "sence/btn_hong.png";
            this.dialog.img2.skin = "setdialog/yinxiaoguan.png";
        }
        else {
            this.dialog.btn2.skin = "sence/btn_lv.png";
            this.dialog.img2.skin = "setdialog/yinxiaokai.png";
        }
    };
    SettingMediator.prototype.getLoaderUrl = function () {
        return ["res/atlas/setdialog.atlas"];
    };
    return SettingMediator;
}(Mediator_1.default));
exports.default = SettingMediator;
},{"../../game/App":5,"../../game/Mediator":12,"../MyGameInit":22,"../session/DataSession":68}],38:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Mediator_1 = require("../../game/Mediator");
var NewerSession_1 = require("../session/NewerSession");
var App_1 = require("../../game/App");
var MyGameInit_1 = require("../MyGameInit");
var LogType_1 = require("../session/LogType");
var Stage2Mediator = /** @class */ (function (_super) {
    __extends(Stage2Mediator, _super);
    function Stage2Mediator() {
        var _this = _super.call(this) || this;
        _this.battleSession = null;
        _this.newerSession = null;
        _this.stageArr = [];
        _this.bossArr = [];
        _this.dataSession = null;
        _this.stageId = 1001;
        _this.closeBtn = null;
        _this.redArr = [];
        return _this;
    }
    Stage2Mediator.prototype.setSprite = function (sprite) {
        this.selectStageView = sprite;
    };
    Stage2Mediator.prototype.setParam = function (param) {
        if (param == null) {
            this.stageId = Stage2Mediator.STAGE_ID;
        }
        else {
            this.stageId = param;
            Stage2Mediator.STAGE_ID = this.stageId;
        }
    };
    Stage2Mediator.prototype.init = function () {
        this.initSysArr(this.getSysArr());
        this.setNowStage(this.battleSession.stageNum);
        this.setRedTan(this.battleSession.noPlayerStage.arr);
        if (this.newerSession.isNew) {
            this.newerSession.last();
            NewerSession_1.default.getHand().visible = false;
            Laya.timer.once(500, this, this.handStage1);
            var closeBtn = this.selectStageView.closeBtn;
            if (closeBtn) {
                this.closeBtn = closeBtn;
                closeBtn.name = "";
            }
        }
        else {
            if (this.closeBtn) {
                this.closeBtn.name = "close";
            }
        }
    };
    Stage2Mediator.prototype.handStage1 = function () {
        this.dataSession.log(LogType_1.default.NEWER_CLICK_STAGE);
        var v = NewerSession_1.default.getHand();
        var p = this.selectStageView["s1"].localToGlobal(new Laya.Point(0, 0));
        Laya.stage.addChild(v);
        v.visible = true;
        v.x = p.x + 70;
        v.y = p.y + 100;
        this.selectStageView["s1"].once(Laya.Event.MOUSE_DOWN, this, this.clickNext);
        // let closeBtn: Laya.Button = this.selectStageView.closeBtn;
        // if (closeBtn) {
        //     closeBtn.once(Laya.Event.MOUSE_DOWN, this, this.clickNext);
        // }
    };
    Stage2Mediator.prototype.clickNext = function () {
        NewerSession_1.default.getHand().visible = false;
    };
    Stage2Mediator.prototype.getSysArr = function () {
        var arr = App_1.default.getInstance().configManager.getDataArr(MyGameInit_1.default.sys_stageinfo);
        var sysArr = [];
        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
            var v = arr_1[_i];
            if (v.starID == this.stageId) {
                sysArr.push(v);
            }
        }
        return sysArr;
    };
    /**
     * 设置当前过到第几关了
     * @param stageIndex
     */
    Stage2Mediator.prototype.setNowStage = function (stageIndex) {
        var arr = this.getSysArr();
        for (var i = 0; i < this.stageArr.length; i++) {
            var sys = arr[i];
            var box = this.stageArr[i];
            box.disabled = !(sys.id <= stageIndex);
        }
        if (this.bossArr.length != 0) {
            this.bossArr[0].box.disabled = !(stageIndex >= arr[4].id);
            this.bossArr[1].box.disabled = !(stageIndex >= arr[9].id);
        }
    };
    Stage2Mediator.prototype.initSysArr = function (arr) {
        this.stageArr.length = 0;
        this.bossArr.length = 0;
        this.redArr.length = 0;
        var stageValue = 1;
        for (var _i = 0, arr_2 = arr; _i < arr_2.length; _i++) {
            var i = arr_2[_i];
            var key = "s" + i.id;
            var box = this.selectStageView[key];
            if (i.stageType == 1) {
                var v = this.getView(box);
                v.img1.skin = "resselectstage/xiaoguan.png";
                v.t1.text = stageValue + ""; //i.id + "";
                v.t1.visible = true;
                this.stageArr.push(box);
                v.on(Laya.Event.CLICK, this, this.clickStageFun, [i]);
                this.redArr.push(this.getRed(i.id + ""));
            }
            else {
                var bsv = box;
                this.bossArr.push(bsv);
                bsv.box.on(Laya.Event.CLICK, this, this.clickStageFun, [i]);
                this.redArr.push(this.getRed(i.id + ""));
            }
            stageValue++;
        }
    };
    Stage2Mediator.prototype.clickStageFun = function (sys) {
        //sys = App.getConfig( MyGameInit.sys_stageinfo , 21 );
        this.battleSession.setSysStageInfo(sys);
        //接收事件 传给session 避免传来传去
        this.battleSession.deleteNoPlayStage(sys.id);
        Laya.Dialog.manager.closeAll();
        App_1.default.getInstance().openScene(MyGameInit_1.default.BattleScene);
    };
    Stage2Mediator.prototype.getView = function (box) {
        return box.getChildByName("stageview");
    };
    Stage2Mediator.prototype.setRedTan = function (arr) {
        for (var _i = 0, _a = this.redArr; _i < _a.length; _i++) {
            var a = _a[_i];
            a.visible = false;
        }
        for (var _b = 0, arr_3 = arr; _b < arr_3.length; _b++) {
            var stageId = arr_3[_b];
            if (stageId == "") {
                continue;
            }
            var red = this.getRed(stageId);
            if (red == null) {
                continue;
            }
            red.visible = true;
            red.ani1.play(0, true);
        }
    };
    Stage2Mediator.prototype.getRed = function (stageId) {
        var stageIndex = parseInt(stageId);
        var sys = this.getSysStageInfo(stageIndex);
        var sv = this.selectStageView["s" + stageId];
        if (sv == null) {
            return null;
        }
        if (sys.stageType == 1) {
            return this.getView(sv).red;
        }
        else if (sys.stageType == 2) {
            var b = sv;
            return b.red;
        }
    };
    Stage2Mediator.prototype.getSysStageInfo = function (stageIndex) {
        var a = App_1.default.getInstance().configManager.getDataArr(MyGameInit_1.default.sys_stageinfo);
        for (var _i = 0, a_1 = a; _i < a_1.length; _i++) {
            var i = a_1[_i];
            if (stageIndex == i.id) {
                return i;
            }
        }
    };
    Stage2Mediator.prototype.getLoaderUrl = function () {
        return ["res/atlas/resselectstage.atlas"];
    };
    Stage2Mediator.STAGE_ID = 1001;
    return Stage2Mediator;
}(Mediator_1.default));
exports.default = Stage2Mediator;
},{"../../game/App":5,"../../game/Mediator":12,"../MyGameInit":22,"../session/LogType":70,"../session/NewerSession":71}],39:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Mediator_1 = require("../../game/Mediator");
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var LogType_1 = require("../session/LogType");
var SdkSession_1 = require("../session/SdkSession");
var RotationEffect_1 = require("../scene/RotationEffect");
var TaskMediator = /** @class */ (function (_super) {
    __extends(TaskMediator, _super);
    function TaskMediator() {
        var _this = _super.call(this) || this;
        _this.taskSession = null;
        _this.dataSession = null;
        _this.sdkSession = null;
        _this.clickId = 0;
        _this.nowR = null;
        return _this;
    }
    TaskMediator.prototype.setSprite = function (sp) {
        this.dialog = sp;
        this.dialog.list1.renderHandler = new Laya.Handler(this, this.renderFun, [this.dialog.list1]);
        this.dialog.list2.renderHandler = new Laya.Handler(this, this.renderFun, [this.dialog.list2]);
        this.dialog.tab.selectHandler = new Laya.Handler(this, this.selectFun);
        this.dialog.list2.vScrollBarSkin = "";
    };
    TaskMediator.prototype.selectFun = function () {
        if (this.dialog.tab.selectedIndex == -1) {
            return;
        }
        this.dialog.list2.scrollTo(0);
        this.onTASK_UPDATE();
    };
    TaskMediator.prototype.init = function () {
        this.dialog.tab.selectedIndex = -1;
        this.dialog.tab.selectedIndex = 0;
        this.dataSession.log(LogType_1.default.OPEN_TASK);
    };
    TaskMediator.prototype.renderFun = function (list, cell, index) {
        var sys = list.getItem(index);
        var td = this.taskSession.getTaskData(sys.id);
        var disNow = 0;
        if (td.now == -1) {
            disNow = sys.max;
        }
        else {
            disNow = Math.min(td.now, sys.max); //now可能会超
        }
        cell.fc1.value = disNow + "";
        cell.fc2.value = sys.max + "";
        cell.t1.text = sys.missionTxt;
        cell.nei.visible = !(disNow == 0);
        if (cell.nei.visible) {
            cell.nei.scrollRect = new Laya.Rectangle(0, 0, cell.nei.width * (disNow / sys.max), cell.nei.height);
        }
        if (td.now == -1) {
            cell.lingqu.skin = "renwu/yilingquzi.png";
            cell.btn.disabled = false;
            cell.btn.mouseEnabled = false;
            cell.ani1.gotoAndStop(0);
        }
        else {
            cell.lingqu.skin = "renwu/lingquzi.png";
            cell.btn.disabled = td.now < sys.max;
            if (td.now >= sys.max) {
                cell.ani1.play(0, true);
                cell.btn.mouseEnabled = true;
            }
            else {
                cell.ani1.gotoAndStop(0);
                cell.btn.mouseEnabled = false;
            }
        }
        cell.btn.clickHandler = new Laya.Handler(this, this.clickFun, [sys.id, sys.gold]);
    };
    TaskMediator.prototype.clickFun = function (id, gold) {
        this.clickId = id;
        var a = new layaMaxUI_1.ui.scene.TaskRewardUI();
        this.nowR = a;
        RotationEffect_1.default.play(a.light);
        a.popup(false);
        a.goldFc.value = gold + "";
        a.btn1Fc.value = gold + "";
        a.btn2Fc.value = (gold * 3) + "";
        a.LingBtn.clickHandler = new Laya.Handler(this, this.l1Fun, [id]);
        a.AdLingBtn.clickHandler = new Laya.Handler(this, this.l2Fun, [id]);
    };
    TaskMediator.prototype.l1Fun = function (id) {
        this.nowR.close();
        this.taskSession.overTask(id);
    };
    TaskMediator.prototype.l2Fun = function (id) {
        this.sdkSession.playAdVideo(SdkSession_1.default.TASK_REWARD, new Laya.Handler(this, this.adFun));
    };
    TaskMediator.prototype.adFun = function () {
        this.nowR.close();
        this.taskSession.overTask(this.clickId, 3);
    };
    TaskMediator.prototype.onTASK_UPDATE = function () {
        this.dialog.list1.array = this.taskSession.getDayTask();
        if (this.dialog.tab.selectedIndex == 0) {
            this.dialog.list2.array = this.taskSession.getAchievementTask(true);
        }
        else {
            this.dialog.list2.array = this.taskSession.getAchievementTask(false);
        }
    };
    TaskMediator.prototype.getLoaderUrl = function () {
        return ["res/atlas/renwu.atlas"];
    };
    return TaskMediator;
}(Mediator_1.default));
exports.default = TaskMediator;
},{"../../game/Mediator":12,"../../ui/layaMaxUI":83,"../scene/RotationEffect":63,"../session/LogType":70,"../session/SdkSession":73}],40:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Mediator_1 = require("../../game/Mediator");
var TestLoginMediator = /** @class */ (function (_super) {
    __extends(TestLoginMediator, _super);
    function TestLoginMediator() {
        var _this = _super.call(this) || this;
        _this.dataSession = null;
        return _this;
    }
    TestLoginMediator.prototype.setSprite = function (sp) {
        this.testLogin = sp;
        if (Laya.LocalStorage.getItem("name") == null) {
            //this.testLogin.input.text = "";
        }
        else {
            this.testLogin.input.text = Laya.LocalStorage.getItem("name");
        }
    };
    TestLoginMediator.prototype.btn_click = function () {
        var key = parseInt(this.testLogin.input.text);
        //this.dataSession.loginMyServer( { code:key } );
        this.dataSession.localLogin({ code: key });
        Laya.LocalStorage.setItem("name", key + "");
    };
    TestLoginMediator.prototype.getLoaderUrl = function () {
        return ["res/atlas/sence.atlas"];
    };
    return TestLoginMediator;
}(Mediator_1.default));
exports.default = TestLoginMediator;
},{"../../game/Mediator":12}],41:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Mediator_1 = require("../../game/Mediator");
var Tips_1 = require("../scene/Tips");
var App_1 = require("../../game/App");
var LogType_1 = require("../session/LogType");
var MyGameInit_1 = require("../MyGameInit");
var TianFuMediator = /** @class */ (function (_super) {
    __extends(TianFuMediator, _super);
    function TianFuMediator() {
        var _this = _super.call(this) || this;
        _this.dataSession = null;
        _this.tianFuSession = null;
        _this.dataArr = [];
        _this.dialog = null;
        _this.mvTime = 4000;
        _this.mvValue = 0;
        _this.overIndex = 0;
        _this.nowIndex = 0;
        _this.addData("tianfu/PTkuang.png", "tianfu/gongji.png", "tianfu/gongzi.png", 1);
        _this.addData("tianfu/PTkuang.png", "tianfu/sudu.png", "tianfu/yizi.png", 2);
        _this.addData("tianfu/PTkuang.png", "tianfu/xingyun.png", "tianfu/xingzi.png", 3);
        _this.addData("tianfu/JYkuang.png", "tianfu/fangyu.png", "tianfu/fangzi.png", 4);
        _this.addData("tianfu/JYkuang.png", "tianfu/shengming.png", "tianfu/shengzi.png", 5);
        _this.addData("tianfu/JYkuang.png", "tianfu/jinbi.png", "tianfu/diaozi.png", 6);
        _this.addData("tianfu/SSkuang.png", "tianfu/baoji.png", "tianfu/baozi.png", 7);
        _this.addData("tianfu/SSkuang.png", "tianfu/lixian.png", "tianfu/lizi.png", 8);
        _this.addData("tianfu/SSkuang.png", "tianfu/tiejiang.png", "tianfu/tiezi.png", 9);
        return _this;
    }
    TianFuMediator.prototype.addData = function (bg, logo, font, id) {
        this.dataArr.push({ bg: bg, logo: logo, font: font, id: id });
    };
    TianFuMediator.prototype.setSprite = function (sprite) {
        this.dialog = sprite;
        this.dialog.list.renderHandler = new Laya.Handler(this, this.renderFun);
        this.dialog.list.selectHandler = new Laya.Handler(this, this.selectFun);
    };
    TianFuMediator.prototype.selectFun = function (index) {
        if (index == -1) {
            this.dialog.tipBox.visible = false;
            return;
        }
        var lv = this.tianFuSession.lvArr[index];
        if (lv == 0) {
            this.dialog.tipBox.visible = false;
        }
        else {
            this.dialog.tipBox.visible = true;
            var b = this.dialog.list.getCell(index);
            var p = b.localToGlobal(new Laya.Point(0, 0), true, this.dialog.box);
            this.dialog.tipBox.x = p.x - 130;
            this.dialog.tipBox.y = p.y + 200;
            var sys = App_1.default.getConfig(MyGameInit_1.default.sys_talentinfo, (index + 1));
            this.dialog.txt5.text = sys.talentInfo + ":" + this.tianFuSession.getTxt(index) + "%";
        }
    };
    TianFuMediator.prototype.renderFun = function (cell, index) {
        var obj = this.dialog.list.getItem(index);
        cell.logo1.skin = obj.logo;
        cell.bg1.skin = obj.bg;
        cell.txtImg.skin = obj.font;
        var lv = this.tianFuSession.lvArr[index];
        cell.lv.value = lv + "";
        cell.box1.visible = cell.box2.visible = false;
        if (lv == 0) {
            cell.box2.visible = true;
        }
        else {
            cell.box1.visible = true;
        }
        cell.select.visible = (this.dialog.list.selectedIndex == index);
    };
    TianFuMediator.prototype.init = function () {
        this.dialog.list.array = this.dataArr;
        this.dialog.list.selectedIndex = -1;
        this.reset();
        this.dataSession.log(LogType_1.default.OPEN_TIANFU);
        this.dialog.tipBox.visible = false;
        this.onGOLD_UPDATE();
    };
    TianFuMediator.prototype.reset = function () {
        this.setLvText(this.tianFuSession.lvTimes);
        this.dialog.fc.value = this.tianFuSession.getLvUpGold() + "";
    };
    TianFuMediator.prototype.setLvText = function (value) {
        this.dialog.lv.text = "已升级" + value + "次";
    };
    TianFuMediator.prototype.btn_click = function () {
        var stat = this.tianFuSession.lvUp();
        if (stat == -1) {
            Tips_1.default.show("金币不够");
            App_1.default.dialog(MyGameInit_1.default.TimeGoldDialog, true);
            return;
        }
        else if (stat == -2) {
            Tips_1.default.show("装备等级不够");
            App_1.default.dialog(MyGameInit_1.default.TreasureDialog, true);
            return;
        }
        this.mv(stat);
    };
    TianFuMediator.prototype.mv = function (overIndex) {
        this.overIndex = overIndex;
        this.dialog.tipBox.visible = false;
        this.dialog.list.mouseEnabled = false;
        this.dialog.btn.mouseEnabled = false;
        this.mvValue = 0;
        this.nowIndex = 0;
        var t = new Laya.Tween();
        var target = 5000;
        t.to(this, { mvValue: target, update: new Laya.Handler(this, this.updateFun) }, this.mvTime, Laya.Ease.cubicInOut, new Laya.Handler(this, this.mvComFun, [overIndex]));
    };
    TianFuMediator.prototype.mvComFun = function (index) {
        this.mvFun(index);
        Laya.timer.once(500, this, this.mvOverFun);
    };
    TianFuMediator.prototype.mvOverFun = function () {
        var sys = this.dataArr[this.overIndex];
        var o = {};
        o.type = 0;
        o.logo = sys.logo;
        o.txtImg = sys.font;
        App_1.default.dialog(MyGameInit_1.default.NewGetItemDialog, false, o);
        this.dialog.list.mouseEnabled = true;
        this.dialog.list.selectedIndex = -1;
        this.dialog.list.refresh();
        this.dialog.btn.mouseEnabled = true;
        this.reset();
        this.onGOLD_UPDATE();
    };
    TianFuMediator.prototype.updateFun = function () {
        var li = 40;
        if (this.nowIndex != Math.floor(this.mvValue / li)) {
            var v = Math.floor(this.mvValue % 9);
            var n = Math.floor(Math.random() * 9);
            this.mvFun(n);
            this.nowIndex = Math.floor(this.mvValue / li);
        }
    };
    TianFuMediator.prototype.mvFun = function (v) {
        for (var i = 0; i < this.dialog.list.cells.length; i++) {
            var c = this.dialog.list.cells[i];
            c.select.visible = (i == v);
        }
    };
    TianFuMediator.prototype.onGOLD_UPDATE = function () {
        this.dialog.btn.gray = !this.tianFuSession.check(); // .checkGold();
    };
    TianFuMediator.prototype.getLoaderUrl = function () {
        return ["res/atlas/tianfu.atlas"];
    };
    return TianFuMediator;
}(Mediator_1.default));
exports.default = TianFuMediator;
},{"../../game/App":5,"../../game/Mediator":12,"../MyGameInit":22,"../scene/Tips":65,"../session/LogType":70}],42:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Mediator_1 = require("../../game/Mediator");
var App_1 = require("../../game/App");
var MyGameInit_1 = require("../MyGameInit");
var SdkSession_1 = require("../session/SdkSession");
var RotationEffect_1 = require("../scene/RotationEffect");
var TimeGoldDialogMediator = /** @class */ (function (_super) {
    __extends(TimeGoldDialogMediator, _super);
    function TimeGoldDialogMediator() {
        var _this = _super.call(this) || this;
        _this.timeGoldSession = null;
        _this.sdkSession = null;
        return _this;
    }
    TimeGoldDialogMediator.prototype.setSprite = function (sp) {
        this.dialog = sp;
    };
    TimeGoldDialogMediator.prototype.LingBtn_click = function () {
        if (this.timeGoldSession.gold == 0) {
            this.dialog.close();
            return;
        }
        App_1.default.dialog(MyGameInit_1.default.NewGetItemDialog, true, this.timeGoldSession.gold);
        this.timeGoldSession.rewardGold(false);
        this.init();
    };
    TimeGoldDialogMediator.prototype.AdLingBtn_click = function () {
        if (this.timeGoldSession.gold == 0) {
            this.dialog.close();
            return;
        }
        this.sdkSession.playAdVideo(SdkSession_1.default.TIME_GOLD, new Laya.Handler(this, this.adFun));
    };
    TimeGoldDialogMediator.prototype.adFun = function (stat) {
        if (this.timeGoldSession.gold == 0) {
            this.dialog.close();
            return;
        }
        if (stat == 1) {
            App_1.default.dialog(MyGameInit_1.default.NewGetItemDialog, true, this.timeGoldSession.gold * 3);
            this.timeGoldSession.rewardGold(true);
            this.init();
        }
    };
    TimeGoldDialogMediator.prototype.init = function () {
        this.dialog.goldFc.value = this.timeGoldSession.gold + "";
        this.dialog.btn1Fc.value = this.timeGoldSession.gold + "";
        this.dialog.btn2Fc.value = this.timeGoldSession.gold * 3 + "";
        this.sdkSession.initAdBtn(this.dialog.AdLingBtn, SdkSession_1.default.TIME_GOLD);
        this.dialog.effectView.ani1.play();
        RotationEffect_1.default.play(this.dialog.light);
    };
    return TimeGoldDialogMediator;
}(Mediator_1.default));
exports.default = TimeGoldDialogMediator;
},{"../../game/App":5,"../../game/Mediator":12,"../MyGameInit":22,"../scene/RotationEffect":63,"../session/SdkSession":73}],43:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Mediator_1 = require("../../game/Mediator");
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var App_1 = require("../../game/App");
var MyGameInit_1 = require("../MyGameInit");
var SysConfig_1 = require("../config/SysConfig");
var BagSession_1 = require("../session/BagSession");
var SdkSession_1 = require("../session/SdkSession");
var Tips_1 = require("../scene/Tips");
var LogType_1 = require("../session/LogType");
var TreasureDialogMediator = /** @class */ (function (_super) {
    __extends(TreasureDialogMediator, _super);
    function TreasureDialogMediator() {
        var _this = _super.call(this) || this;
        _this.bagSession = null;
        _this.sdkSession = null;
        _this.dataSession = null;
        _this.treasureSession = null;
        return _this;
    }
    TreasureDialogMediator.prototype.setSprite = function (sp) {
        this.dialog = sp;
    };
    TreasureDialogMediator.prototype.init = function () {
        this.init1Box();
        this.init2Box();
        this.init3Box();
        this.dialog.adview.ani1.interval = 1000 / 35;
        this.dialog.adview.ani1.play(0, true);
        this.checkTime();
    };
    TreasureDialogMediator.prototype.checkTime = function () {
        if (this.treasureSession.time > Laya.Browser.now()) {
            //倒计时
            Laya.timer.loop(1000, this, this.fpFun);
            this.fpFun();
            this.dialog.timeBox.visible = true;
        }
        else {
            this.dialog.timeBox.visible = false;
        }
    };
    TreasureDialogMediator.prototype.fpFun = function () {
        var sec = (this.treasureSession.time - Laya.Browser.now()) / 1000;
        var hour = Math.floor(sec / 3600);
        sec -= hour * 3600;
        var min = parseInt(sec % 3600 / 60 + "");
        sec -= min * 60;
        sec = Math.ceil(sec);
        var str = "0" + hour + " " + this.getNum(min) + " " + this.getNum(sec);
        this.dialog.timeFc.value = str;
    };
    TreasureDialogMediator.prototype.getNum = function (v) {
        if (v < 10) {
            return "0" + v;
        }
        return v + "";
    };
    TreasureDialogMediator.prototype.init1Box = function () {
        var sys = App_1.default.getConfig(MyGameInit_1.default.sys_pet, 5);
        this.dialog.priceFc.value = sys.boxCost + "";
        this.dialog.t1.text = sys.txt;
        this.dialog.btn1.clickHandler = new Laya.Handler(this, this.btn1Fun);
    };
    TreasureDialogMediator.prototype.btn1Fun = function () {
        var sys = App_1.default.getConfig(MyGameInit_1.default.sys_pet, 5);
        if (sys.boxCost > this.bagSession.gold) {
            Tips_1.default.show("金币不够");
            return;
        }
        this.bagSession.changeGold(-sys.boxCost, BagSession_1.GOLD_TYPE.TREASURE1);
        var a = new layaMaxUI_1.ui.scene.PTbaoxiangUI();
        a.popup();
        a.zOrder = 10001;
        a.ani1.interval = 1000 / 15;
        a.ani1.play(0, false);
        a.ani1.on(Laya.Event.COMPLETE, this, this.ani1OverFun, [a]);
    };
    TreasureDialogMediator.prototype.ani1OverFun = function (a) {
        a.removeSelf();
        var sys = App_1.default.getConfig(MyGameInit_1.default.sys_pet, 5);
        var lv = App_1.default.getRandom2(sys.equipLvMin, sys.equipLvMax);
        var e = this.bagSession.getNewItemByLv(lv);
        this.bagSession.addEquipInBag(e);
        App_1.default.dialog(MyGameInit_1.default.NewGetItemDialog, false, e);
    };
    TreasureDialogMediator.prototype.init2Box = function () {
        this.dialog.btn2.clickHandler = new Laya.Handler(this, this.btn2Fun);
        var v = this.bagSession.getAverageEquipLv();
        var sys = SysConfig_1.SysPet.getLv(TreasureDialogMediator.GoldBox, v);
        if (sys == null) {
            //八成是少一个装备 然后 平均值 不对
            sys = SysConfig_1.SysPet.getLv(TreasureDialogMediator.GoldBox, 1);
        }
        this.dialog.gold2.value = sys.boxCost + "";
        this.dialog.t2.text = sys.txt;
    };
    TreasureDialogMediator.prototype.btn2Fun = function () {
        var v = this.bagSession.getAverageEquipLv();
        var sys = SysConfig_1.SysPet.getLv(TreasureDialogMediator.GoldBox, v);
        if (sys.boxCost > this.bagSession.gold) {
            Tips_1.default.show("金币不够");
            return;
        }
        this.bagSession.changeGold(-sys.boxCost, BagSession_1.GOLD_TYPE.TREASURE2);
        var a = new layaMaxUI_1.ui.scene.ZJbaoxiangUI();
        a.popup();
        a.zOrder = 10001;
        a.ani1.interval = 1000 / 15;
        a.ani1.play(0, false);
        a.ani1.on(Laya.Event.COMPLETE, this, this.ani2OverFun, [a]);
    };
    TreasureDialogMediator.prototype.ani2OverFun = function (a) {
        a.removeSelf();
        var v = this.bagSession.getAverageEquipLv();
        var sys = SysConfig_1.SysPet.getLv(TreasureDialogMediator.GoldBox, v);
        var lv = App_1.default.getRandom2(sys.equipLvMin, sys.equipLvMax);
        var e = this.bagSession.getNewItemByLv(lv);
        this.bagSession.addEquipInBag(e);
        this.init2Box();
        App_1.default.dialog(MyGameInit_1.default.NewGetItemDialog, false, e);
    };
    TreasureDialogMediator.prototype.init3Box = function () {
        var sys = this.getSys3();
        App_1.default.getRandom2(sys.equipLvMin, sys.equipLvMax);
        this.dialog.t3.text = sys.txt;
        this.sdkSession.initAdBtn(this.dialog.adBtn, SdkSession_1.default.TREASURE);
        this.dialog.adBtn.clickHandler = new Laya.Handler(this, this.adFun);
    };
    TreasureDialogMediator.prototype.getSys3 = function () {
        var v = this.bagSession.getAverageEquipLv();
        return SysConfig_1.SysPet.getLv(TreasureDialogMediator.AD_BOX, v);
    };
    TreasureDialogMediator.prototype.adFun = function () {
        if (this.treasureSession.canOpen() == false) {
            Tips_1.default.show("时间不到");
            return;
        }
        this.dataSession.log(LogType_1.default.CLICK_BOX);
        this.sdkSession.playAdVideo(SdkSession_1.default.TREASURE, new Laya.Handler(this, this.adOverFun));
    };
    TreasureDialogMediator.prototype.adOverFun = function () {
        var a = new layaMaxUI_1.ui.scene.NBbaoxiangUI();
        a.popup();
        a.zOrder = 10001;
        a.ani1.interval = 1000 / 15;
        a.ani1.play(0, false);
        a.ani1.on(Laya.Event.COMPLETE, this, this.aniOverFun, [a]);
        this.dataSession.log(LogType_1.default.BOX_COM);
    };
    TreasureDialogMediator.prototype.aniOverFun = function (a) {
        a.close();
        var arr = [];
        for (var i = 0; i < 6; i++) {
            var sys = this.getSys3();
            var lv = App_1.default.getRandom2(sys.equipLvMin, sys.equipLvMax);
            var e = this.bagSession.getNewItemByLv(lv);
            if (this.bagSession.addEquipInBag(e)) {
                arr.push(e);
            }
        }
        if (arr.length == 0) {
            Tips_1.default.show("请您清理背包");
            return;
        }
        App_1.default.dialog(MyGameInit_1.default.NewGetItemDialog, false, arr);
        this.treasureSession.openBox();
        this.checkTime();
    };
    TreasureDialogMediator.prototype.getLoaderUrl = function () {
        return ["res/atlas/dabaoxiang.atlas"];
    };
    TreasureDialogMediator.AD_BOX = 700003;
    TreasureDialogMediator.GoldBox = 700004;
    return TreasureDialogMediator;
}(Mediator_1.default));
exports.default = TreasureDialogMediator;
},{"../../game/App":5,"../../game/Mediator":12,"../../ui/layaMaxUI":83,"../MyGameInit":22,"../config/SysConfig":23,"../scene/Tips":65,"../session/BagSession":66,"../session/LogType":70,"../session/SdkSession":73}],44:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Mediator_1 = require("../../game/Mediator");
var App_1 = require("../../game/App");
var SysConfig_1 = require("../config/SysConfig");
var MyGameInit_1 = require("../MyGameInit");
var SdkSession_1 = require("../session/SdkSession");
var LogType_1 = require("../session/LogType");
var ZhuanMediator = /** @class */ (function (_super) {
    __extends(ZhuanMediator, _super);
    function ZhuanMediator() {
        var _this = _super.call(this) || this;
        _this.bagSession = null;
        _this.sdkSession = null;
        _this.dataSession = null;
        _this.arr = [];
        _this.badEquipId = 0;
        return _this;
    }
    ZhuanMediator.prototype.setSprite = function (sp) {
        this.dialog = sp;
        this.arr.push(this.dialog.s0);
        this.arr.push(this.dialog.s1);
        this.arr.push(this.dialog.s2);
        this.arr.push(this.dialog.s3);
        this.arr.push(this.dialog.s4);
        this.arr.push(this.dialog.s5);
    };
    ZhuanMediator.prototype.setParam = function (p) {
        this.badEquipId = p;
    };
    ZhuanMediator.prototype.init = function () {
        //let arr = this.bagSession.badId.concat();
        var arr = [String(this.badEquipId)];
        if (arr.length < 6) {
            var num = 6 - arr.length;
            for (var i = 0; i < num; i++) {
                arr.push(this.getNewId() + "");
            }
        }
        this.setArr(arr);
        this.dataSession.log(LogType_1.default.OPEN_ZHUAN);
        this.dialog.once(Laya.Event.UNDISPLAY, this, this.undisFun);
    };
    ZhuanMediator.prototype.undisFun = function () {
        this.dataSession.log(LogType_1.default.CLOSE_ZHUAN_PAN);
    };
    ZhuanMediator.prototype.setArr = function (arr1) {
        this.dataArr = arr1;
        for (var i = 0; i < this.arr.length; i++) {
            var sp = this.arr[i];
            var itemId = parseInt(arr1[i]);
            sp.logo.skin = SysConfig_1.Res.getItemUrl(itemId);
            var sys = App_1.default.getConfig(MyGameInit_1.default.sys_item, itemId);
            sp.s0.skin = SysConfig_1.Res.getItemBorder(sys.itemQuality);
            sp.fc.value = sys.itemLevel + "";
        }
    };
    ZhuanMediator.prototype.getNewId = function () {
        var arr = [200001, 300001, 400001, 500001, 600001];
        return App_1.default.RandomByArray(arr);
    };
    ZhuanMediator.prototype.adBtn_click = function () {
        this.sdkSession.playAdVideo(SdkSession_1.default.ZHUAN, new Laya.Handler(this, this.adFun));
    };
    ZhuanMediator.prototype.adFun = function () {
        this.play();
    };
    ZhuanMediator.prototype.play = function () {
        this.dialog.adBtn.disabled = true;
        this.dialog.img.rotation = this.dialog.img.rotation % 360;
        var arr = [0, 1, 2, 3, 4, 5];
        var a = App_1.default.RandomByArray(arr);
        var itemId = this.dataArr[a];
        if (this.bagSession.badId[a] != null) {
            this.bagSession.badId.splice(a, 1);
        }
        var max = -10 * 360 - a * 60 - 30;
        var t = new Laya.Tween();
        t.to(this.dialog.img, { rotation: max }, 4000, Laya.Ease.cubicOut, new Laya.Handler(this, this.comFun, [itemId]));
    };
    ZhuanMediator.prototype.comFun = function (itemId) {
        var sys = App_1.default.getConfig(MyGameInit_1.default.sys_item, itemId);
        this.bagSession.addEquipInBagBySys(sys);
        App_1.default.dialog(MyGameInit_1.default.NewGetItemDialog, true, sys);
        //App.getInstance().eventManager.once( MyEvent.GET_GOLD_CLOSE , this, this.onCloseFun );
        this.dialog.adBtn.disabled = false;
        this.dataSession.log(LogType_1.default.AD_ZHUAN);
    };
    ZhuanMediator.prototype.onCloseFun = function () {
        this.init();
    };
    return ZhuanMediator;
}(Mediator_1.default));
exports.default = ZhuanMediator;
},{"../../game/App":5,"../../game/Mediator":12,"../MyGameInit":22,"../config/SysConfig":23,"../session/LogType":70,"../session/SdkSession":73}],45:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HitObject_1 = require("./HitObject");
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var AddHpDiaplay = /** @class */ (function (_super) {
    __extends(AddHpDiaplay, _super);
    function AddHpDiaplay() {
        var _this = _super.call(this) || this;
        _this.display = new layaMaxUI_1.ui.scene.AddHpDisplayUI();
        _this.addChild(_this.display);
        _this.display.y = -_this.display.height - 80;
        _this.display.ani1.play(0, true);
        return _this;
    }
    AddHpDiaplay.prototype.getHitBox = function () {
        return this.display.hitBox;
    };
    AddHpDiaplay.prototype.getDisplay = function () {
        return this.display;
    };
    return AddHpDiaplay;
}(HitObject_1.default));
exports.default = AddHpDiaplay;
},{"../../ui/layaMaxUI":83,"./HitObject":57}],46:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var SysConfig_1 = require("../config/SysConfig");
var App_1 = require("../../game/App");
var MyGameInit_1 = require("../MyGameInit");
var BagListCell = /** @class */ (function (_super) {
    __extends(BagListCell, _super);
    function BagListCell() {
        var _this = _super.call(this) || this;
        _this.gridIndex = 0;
        _this.sys = null;
        _this.equip = null;
        return _this;
    }
    BagListCell.prototype.setEquip = function (equip, selected, isSellMode) {
        if (isSellMode === void 0) { isSellMode = false; }
        this.equip = equip;
        if (equip == null) {
            this.sys = null;
        }
        else {
            this.sys = App_1.default.getInstance().configManager.getConfig(MyGameInit_1.default.sys_item, equip.id);
        }
        this.selected(selected, isSellMode);
        this.setBorder(equip);
        this.setLogo(equip);
        this.setIsEquip();
        this.setEquipLv();
        this.stopEffect();
    };
    /**
     * 播放合成预览特效
     */
    BagListCell.prototype.playEffect = function () {
        this.canHeEffectView.visible = true;
        this.canHeEffectView.ani1.play(0, true);
    };
    /**
     *
     */
    BagListCell.prototype.stopEffect = function () {
        this.canHeEffectView.visible = false;
        this.canHeEffectView.ani1.stop();
    };
    BagListCell.prototype.setEquipLv = function () {
        if (this.equip == null) {
            this.bg2Img.visible = false;
            this.fc.visible = false;
        }
        else {
            this.bg2Img.visible = true;
            this.fc.visible = true;
            this.fc.value = this.sys.itemLevel + "";
        }
    };
    /**
     * 设置是否装备中
     * @param value
     */
    BagListCell.prototype.setIsEquip = function () {
        if (this.equip == null) {
            this.useImg.visible = false;
            return;
        }
        if (this.equip.isEquip) {
            this.useImg.visible = true;
        }
        else {
            this.useImg.visible = false;
        }
    };
    /**
     * 设置logo
     * @param equip
     */
    BagListCell.prototype.setLogo = function (equip) {
        this.logoImg.skin = null;
        if (equip == null) {
            this.logoImg.visible = false;
        }
        else {
            this.logoImg.visible = true;
            this.logoImg.skin = SysConfig_1.Res.getItemUrl(equip.id);
        }
    };
    /**
     * 设置边框
     * @param equip
     */
    BagListCell.prototype.setBorder = function (equip) {
        if (equip == null) {
            this.bgImg.skin = "sence/zhuangbeikong.png";
        }
        else {
            this.bgImg.skin = SysConfig_1.Res.getItemBorder(this.sys.itemQuality);
        }
    };
    /**
     * 是否选中
     * @param value
     * @param isSellMode
     */
    BagListCell.prototype.selected = function (value, isSellMode) {
        this.selectImg.visible = value;
        if (isSellMode) {
            this.selectImg.skin = "sence/xuanzhong.png";
        }
        else {
            this.selectImg.skin = "sence/xuanzhong1.png";
        }
    };
    BagListCell.prototype.reset = function () {
    };
    BagListCell.prototype.empty = function () {
    };
    return BagListCell;
}(layaMaxUI_1.ui.scene.BagListCellUI));
exports.default = BagListCell;
},{"../../game/App":5,"../../ui/layaMaxUI":83,"../MyGameInit":22,"../config/SysConfig":23}],47:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BattleDisplay = /** @class */ (function (_super) {
    __extends(BattleDisplay, _super);
    function BattleDisplay() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BattleDisplay.FLYOVEREVENT = "FLYOVEREVENT";
    return BattleDisplay;
}(Laya.Sprite));
exports.BattleDisplay = BattleDisplay;
/**
 * boss普通的关底小boss
 * bigboss 单独关的boss
 */
var DISPLAY_TYPE;
(function (DISPLAY_TYPE) {
    DISPLAY_TYPE[DISPLAY_TYPE["MONSTER"] = 1] = "MONSTER";
    DISPLAY_TYPE[DISPLAY_TYPE["ADD_HP"] = 2] = "ADD_HP";
    DISPLAY_TYPE[DISPLAY_TYPE["BOSS"] = 3] = "BOSS";
    DISPLAY_TYPE[DISPLAY_TYPE["BUFF"] = 4] = "BUFF";
    DISPLAY_TYPE[DISPLAY_TYPE["BIG_BOSS"] = 5] = "BIG_BOSS";
})(DISPLAY_TYPE = exports.DISPLAY_TYPE || (exports.DISPLAY_TYPE = {}));
},{}],48:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SysConfig_1 = require("../config/SysConfig");
var BattleSession_1 = require("../session/BattleSession");
var MyEffect_1 = require("../effect/MyEffect");
var App_1 = require("../../game/App");
var MyGameInit_1 = require("../MyGameInit");
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var BattleScene = /** @class */ (function (_super) {
    __extends(BattleScene, _super);
    function BattleScene() {
        var _this = _super.call(this) || this;
        _this.bloodRect = new Laya.Rectangle(0, 0);
        _this.whiteRect = new Laya.Rectangle(0, 0);
        _this.twover = true;
        _this.nowGold = 0;
        _this.flyNum = 0;
        _this.FLY_BOX_TIME = 10 * 1000;
        _this.FLY_BOX_TIME_SECOND = 2 * 60 * 1000;
        _this.bloodRect.width = _this.bloodImg.width;
        _this.bloodRect.height = _this.bloodImg.height;
        _this.whiteRect.width = _this.bloodWhite.width;
        _this.whiteRect.height = _this.bloodWhite.height;
        _this.initPool();
        return _this;
    }
    BattleScene.prototype.initPool = function () {
        for (var i = 0; i < 3; i++) {
            Laya.Pool.recover("hitEf", this.createHitEf());
        }
        for (var i = 0; i < 30; i++) {
            var img = new Laya.Image("sence/dongjin.png");
            Laya.Pool.recover("flygold", img);
        }
        for (var i = 0; i < 13; i++) {
            var isCrit = (i > 10);
            var f = new Laya.FontClip();
            if (isCrit) {
                f.skin = "battlescene/hurt1.png";
                f.sheet = "0123 4567 89+- x1%=";
            }
            else {
                f.skin = "battlescene/hurt2.png";
                f.sheet = "0123 4567 89+- x1=%";
            }
            f.anchorX = 0.5;
            f.anchorY = 0.5;
            Laya.Pool.recover("flyFc" + isCrit, f);
        }
    };
    /**
     * 设置玩家属性
     */
    BattleScene.prototype.setAttribute = function (equip) {
        this.l0.text = equip.attack + "";
        this.l1.text = equip.crit + "";
        this.l2.text = equip.defense + "";
        this.l3.text = equip.move + "";
        this.l4.text = equip.hitPoint + "";
    };
    /**
     * 设置玩家的装备
     */
    BattleScene.prototype.setEquipment = function (arr) {
        this.setEquipmentByPart(this.e0, arr[BattleSession_1.EQUIP_TYPE.WEAPON]);
        this.setEquipmentByPart(this.e1, arr[BattleSession_1.EQUIP_TYPE.HEAD]);
        this.setEquipmentByPart(this.e2, arr[BattleSession_1.EQUIP_TYPE.BODY]);
        this.setEquipmentByPart(this.e3, arr[BattleSession_1.EQUIP_TYPE.HORSE]);
    };
    BattleScene.prototype.setEquipmentByPart = function (img, equip) {
        var image = img.getChildAt(0);
        if (equip == null) {
            image.skin = null;
            return;
        }
        var sys = equip.getSysItem();
        img.skin = SysConfig_1.Res.getItemBorder(sys.itemQuality);
        image.skin = SysConfig_1.Res.getItemUrl(sys.id);
    };
    BattleScene.prototype.setNowHp = function (value) {
        if (value <= 0) {
            this.bloodImg.visible = false;
            this.bloodWhite.visible = false;
            return;
        }
        var lastWidth = this.bloodRect.width;
        this.bloodRect.width = this.bloodImg.width * value;
        this.bloodImg.scrollRect = this.bloodRect;
        if (this.twover) {
            this.twover = false;
            this.whiteRect.width = lastWidth;
            this.bloodWhite.scrollRect = this.whiteRect;
            Laya.timer.frameLoop(1, this, this.whiteLoopFun);
        }
    };
    BattleScene.prototype.whiteLoopFun = function (e) {
        var len = Laya.timer.delta * 0.12; //速度是0.5像素每毫秒
        var nowWid = this.bloodWhite.scrollRect.width - len;
        this.whiteRect.width = nowWid;
        this.bloodWhite.scrollRect = this.whiteRect;
        if (this.whiteRect.width <= this.bloodRect.width) {
            Laya.timer.clear(this, this.whiteLoopFun);
            this.twover = true;
        }
    };
    /**
     * 只更新血
     * @param value
     */
    BattleScene.prototype.onlyResetHp = function (value) {
        this.bloodRect.width = this.bloodImg.width * value;
        this.whiteRect.width = this.bloodWhite.width * value;
        this.bloodImg.scrollRect = this.bloodRect;
        this.bloodWhite.scrollRect = this.whiteRect;
        this.bloodImg.visible = true;
        this.bloodWhite.visible = true;
    };
    BattleScene.prototype.hpMax = function () {
        var t = new Laya.Tween();
        t.to(this.bloodRect, { width: this.bloodImg.width, update: new Laya.Handler(this, this.hpmaxFun) }, 200, Laya.Ease.strongOut);
        var tt = new Laya.Tween();
        tt.to(this.blood, { scaleX: 1, scaleY: 1.2 }, 100, null, new Laya.Handler(this, this.bloodComfun));
    };
    BattleScene.prototype.hpmaxFun = function () {
        this.bloodImg.scrollRect = this.bloodRect;
    };
    BattleScene.prototype.bloodComfun = function () {
        this.blood.scale(1, 1);
    };
    BattleScene.prototype.createHitEf = function () {
        var c = new Laya.Animation();
        c.interval = 1000 / 60;
        c.source = "scene/texiao/gongji.ani";
        c.zOrder = 1001;
        c.scale(2, 2);
        return c;
    };
    /**
     * 冒红色的光
     */
    BattleScene.prototype.playHitEffect = function (isCrit, ex, ey) {
        var c = Laya.Pool.getItem("hitEf");
        if (c == null) {
            c = this.createHitEf();
        }
        c.once(Laya.Event.COMPLETE, this, this.playHitEffectOver, [c]);
        c.pos(ex, ey);
        c.play(0, false);
        this.battleSp.addChild(c);
        if (isCrit) {
            //Laya.SoundManager.playSound("sound/comboEffect1.wav");
            App_1.default.getInstance().gameSoundManager.playEffect("sound/comboEffect1.wav");
        }
        else {
            App_1.default.getInstance().gameSoundManager.playEffect("sound/fx_Hit.wav");
            //Laya.SoundManager.playSound("sound/fx_Hit.wav");
        }
    };
    BattleScene.prototype.playHitEffectOver = function (c) {
        c.removeSelf();
        Laya.Pool.recover("hitEf", c);
    };
    BattleScene.prototype.flyHitEffect = function (num, isCrit, x1, y1) {
        var f = Laya.Pool.getItem("flyFc" + isCrit);
        if (f == null) {
            f = new Laya.FontClip();
            if (isCrit) {
                f.skin = "battlescene/hurt1.png";
                f.sheet = "0123 4567 89+- x1%=";
            }
            else {
                f.skin = "battlescene/hurt2.png";
                f.sheet = "0123 4567 89+- x1=%";
            }
            f.anchorX = 0.5;
            f.anchorY = 0.5;
        }
        f.scaleX = 1;
        f.scaleY = 1;
        f.alpha = 1;
        f.visible = true;
        f.value = "-" + num + "";
        f.zOrder = 1002;
        this.battleSp.addChild(f);
        f.x = x1;
        f.y = y1;
        var t = new Laya.Tween();
        if (isCrit) {
            var tt = new Laya.Tween();
            f.scale(0, 0);
            tt.to(f, { scaleX: 1, scaleY: 1 }, 200, Laya.Ease.backOut);
        }
        t.to(f, { y: f.y - 200, alpha: 0 }, 2000, null, new Laya.Handler(this, this.effectFun, [f, isCrit]));
    };
    BattleScene.prototype.effectFun = function (f, isCrit) {
        f.removeSelf();
        Laya.Pool.recover("flyFc" + isCrit, f);
    };
    BattleScene.prototype.flyGold = function (x1, y1, gold) {
        var flyGoldNum = 5;
        var goldEvery = gold / flyGoldNum;
        for (var i = 0; i < flyGoldNum; i++) {
            var img = Laya.Pool.getItem("flygold");
            if (img == null) {
                img = new Laya.Image("sence/dongjin.png");
            }
            Laya.stage.addChild(img);
            img.scaleX = 1;
            img.scaleY = 1;
            img.x = x1 + Math.random() * 80 - 50;
            img.y = y1 + Math.random() * 80 - 150;
            img.alpha = 0;
            this.flyEffect(img, goldEvery);
        }
    };
    BattleScene.prototype.flyEffect = function (img, gold) {
        var p = this.goldImg.localToGlobal(MyEffect_1.default.getP00());
        var t = new Laya.Tween();
        img.anchorX = img.anchorY = 0.5;
        MyEffect_1.default.BigSmallEffect(img);
        t.to(img, { x: p.x + 10, y: p.y + 10, scaleX: 0.6, scaleY: 0.6 }, 700, Laya.Ease.backIn, new Laya.Handler(this, this.flyGoldOverFun, [img, gold]), Math.random() * 500);
    };
    BattleScene.prototype.flyGoldOverFun = function (img, gold) {
        img.removeSelf();
        Laya.Pool.recover("flygold", img);
        var t = new Laya.Tween();
        t.to(this.goldImg, { scaleX: 0.7, scaleY: 0.7 }, 80);
        var t1 = new Laya.Tween();
        t1.to(this.goldImg, { scaleX: 1, scaleY: 1 }, 60, null, null, 80);
        this.nowGold += gold;
        this.goldFc.value = parseInt(Math.ceil(this.nowGold) + "") + "";
    };
    BattleScene.prototype.setNowGold = function (value) {
        this.goldFc.value = value + "";
        this.nowGold = value;
    };
    BattleScene.prototype.flyBoxStart = function () {
        var time = 0;
        if (this.flyNum == 0) {
            time = this.FLY_BOX_TIME;
        }
        else {
            time = this.FLY_BOX_TIME_SECOND;
        }
        Laya.timer.once(time, this, this.flyBoxFun);
        this.flyNum++;
    };
    BattleScene.prototype.flyBoxFun = function () {
        var a = new layaMaxUI_1.ui.scene.feibaoxiangUI();
        a.mouseThrough = true;
        this.addChild(a);
        a.x = -750;
        a.ani1.play(0, true);
        var t = new Laya.Tween();
        a.box.on(Laya.Event.CLICK, this, this.flyBoxClickFun);
        t.to(a, { x: 0 }, 1000, null, new Laya.Handler(this, this.fly2Fun, [a]));
    };
    BattleScene.prototype.flyBoxClickFun = function () {
        App_1.default.dialog(MyGameInit_1.default.FlyBoxDialog);
    };
    BattleScene.prototype.fly2Fun = function (a) {
        var t = new Laya.Tween();
        t.to(a, { x: 750 }, 500, null, new Laya.Handler(this, this.flyOverFun, [a]), 3000);
    };
    BattleScene.prototype.flyOverFun = function (a) {
        a.removeSelf();
        this.flyBoxStart();
    };
    return BattleScene;
}(layaMaxUI_1.ui.scene.BattleSceneUI));
exports.default = BattleScene;
},{"../../game/App":5,"../../ui/layaMaxUI":83,"../MyGameInit":22,"../config/SysConfig":23,"../effect/MyEffect":24,"../session/BattleSession":67}],49:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var App_1 = require("../../game/App");
var MyGameInit_1 = require("../MyGameInit");
var MyEvent_1 = require("../MyEvent");
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var BattleDisplay_1 = require("./BattleDisplay");
var HitObject_1 = require("./HitObject");
var Boss1 = /** @class */ (function (_super) {
    __extends(Boss1, _super);
    function Boss1() {
        var _this = _super.call(this) || this;
        _this.hitType = HitObject_1.default.ENEMY;
        _this.view = new layaMaxUI_1.ui.scene.Boss1ViewUI();
        _this.ani = _this.view.bossAni;
        _this.addChild(_this.view);
        _this.view.y = -_this.view.height;
        _this.view.x = -_this.view.width / 2;
        _this.setBar(_this.view.blood.bloodImg);
        _this.view.visible = false;
        return _this;
    }
    Boss1.prototype.showTalk = function () {
        this.view.talk.visible = true;
    };
    Boss1.prototype.closeTalk = function () {
        this.view.talk.visible = false;
    };
    Boss1.prototype.clearAll = function () {
        this.select = false;
        Laya.timer.clearAll(this);
        this.ani.offAllCaller(this);
        this.ani.gotoAndStop(0);
        this.wait();
    };
    /**
     * 起飞
     */
    Boss1.prototype.flyaway = function () {
        this.select = false;
        Laya.timer.clearAll(this);
        this.ani.offAllCaller(this);
        this.ani.gotoAndStop(0);
        this.ani.play(0, false, "att2");
        this.ani.once(Laya.Event.COMPLETE, this, this.mfun);
    };
    Boss1.prototype.mfun = function () {
        this.visible = false;
        Laya.timer.once(500, this, this.flFun);
    };
    Boss1.prototype.flFun = function () {
        this.event(BattleDisplay_1.BattleDisplay.FLYOVEREVENT);
    };
    Boss1.prototype.die = function () {
        _super.prototype.die.call(this);
        this.dieMv();
        this.clear();
    };
    Boss1.prototype.getHitBox = function () {
        return this.view.hitBox;
    };
    Boss1.prototype.getHurt = function () {
        return this.sys.enemyAttk;
    };
    Boss1.prototype.setSysEnemy = function (sys) {
        this.sys = sys;
        this.setMaxHp(sys.enemyHp);
        this.resetHp();
    };
    Boss1.prototype.startMv = function () {
        this.view.visible = true;
        this.ani.play(0, false, "luo");
        this.ani.once(Laya.Event.COMPLETE, this, this.startMvOver);
    };
    Boss1.prototype.startMvOver = function () {
        this.ani.interval = 1000 / 24;
        this.ani.play(0, false, "att1");
        this.nextWait();
    };
    Boss1.prototype.nextWait = function () {
        this.ani.once(Laya.Event.COMPLETE, this, this.wait);
    };
    Boss1.prototype.wait = function () {
        this.ani.play(0, true, "wait");
    };
    Boss1.prototype.startAttackTime = function () {
        this.attackOnce();
    };
    Boss1.prototype.attackOnce = function () {
        var skillId = 0;
        if (0.5 < Math.random()) {
            skillId = 1;
        }
        else {
            skillId = 2;
        }
        var sys = App_1.default.getConfig(MyGameInit_1.default.sys_skill, skillId);
        Laya.timer.once(sys.skillTime, this, this.bossTimerFun, [skillId]);
    };
    Boss1.prototype.bossTimerFun = function (skillId) {
        if (skillId == 1) {
            this.atk1Fun();
            App_1.default.sendEvent(MyEvent_1.default.FLASH_RED);
        }
        else {
            this.atk2Fun();
        }
        this.attackOnce();
    };
    /**
     * 飞上天
     */
    Boss1.prototype.atk2Fun = function () {
        this.select = false;
        this.ani.gotoAndStop(0);
        this.ani.play(0, false, "att2");
        this.ani.once(Laya.Event.COMPLETE, this, this.moveFun);
    };
    Boss1.prototype.clear = function () {
        this.ani.offAllCaller(this);
        Laya.timer.clearAll(this);
    };
    Boss1.prototype.moveFun = function () {
        Laya.timer.once(1000, this, this.flyStopFun);
    };
    Boss1.prototype.flyStopFun = function () {
        this.ani.play(0, false, "luo");
        this.nextWait();
        Laya.timer.once(300, this, this.downFireFun);
    };
    Boss1.prototype.downFireFun = function () {
        this.select = true;
        for (var i = 0; i < 6; i++) {
            this.addOneDown(300 + i * 200, 0);
        }
    };
    Boss1.prototype.addOneDown = function (x1, time) {
        time = Math.random() * 3000;
        var a = new BossAtk2(time);
        a.battle = this.battle;
        a.x = this.x - x1;
        a.y = this.y;
        this.battle.battleSp.addChild(a);
        this.battle.addHitObject(a);
    };
    /**
     * 张嘴横着喷火球
     */
    Boss1.prototype.atk1Fun = function () {
        this.ani.interval = 1000 / 24;
        this.ani.play(0, false, "att1");
        this.nextWait();
        Laya.timer.once(1500, this, this.addFireBall);
    };
    /**
     * 横着飞火球
     */
    Boss1.prototype.addFireBall = function () {
        var b = new BossAtk1();
        b.battle = this.battle;
        b.x = this.x;
        b.y = this.y;
        b.move();
        this.battle.battleSp.addChild(b);
        this.battle.addHitObject(b);
    };
    return Boss1;
}(HitObject_1.default));
exports.default = Boss1;
var BossAtk2 = /** @class */ (function (_super) {
    __extends(BossAtk2, _super);
    function BossAtk2(time) {
        var _this = _super.call(this) || this;
        _this.hitType = HitObject_1.default.BULLET;
        _this.view = new layaMaxUI_1.ui.scene.Attack2UI();
        _this.addChild(_this.view);
        _this.view.y = -_this.view.height;
        _this.view.redView.ani1.play(0, true);
        var targetY = _this.view.clip_luo.y;
        _this.view.clip_luo.y = -1000;
        _this.view.clip_luo.play();
        var t = new Laya.Tween();
        t.to(_this.view.clip_luo, { y: targetY }, 1500, null, new Laya.Handler(_this, _this.luoOverFun), time);
        return _this;
    }
    BossAtk2.prototype.getHitBox = function () {
        return this.view.hitBox;
    };
    BossAtk2.prototype.luoOverFun = function () {
        this.battle.removeHitObject(this);
        this.zhaEffect();
    };
    BossAtk2.prototype.hitFun = function () {
        this.zhaEffect();
        this.view.clipZha.y = this.view.clip_luo.y - 10;
        return true;
    };
    BossAtk2.prototype.zhaEffect = function () {
        Laya.Tween.clearAll(this);
        this.view.clip_luo.visible = false;
        this.view.redView.visible = false;
        this.view.clipZha.visible = true;
        this.view.clipZha.play(0, this.view.clipZha.total - 1);
        this.view.clipZha.on(Laya.Event.COMPLETE, this, this.comFun);
    };
    BossAtk2.prototype.getSkill = function () {
        return App_1.default.getConfig(MyGameInit_1.default.sys_skill, "2");
    };
    BossAtk2.prototype.comFun = function () {
        this.removeSelf();
    };
    BossAtk2.prototype.clear = function () {
        this.view.clipZha.offAllCaller(this);
        Laya.Tween.clearAll(this.view.clip_luo);
        Laya.Tween.clearAll(this);
    };
    BossAtk2.prototype.getAttackObject = function () {
        return this.getHp41();
    };
    return BossAtk2;
}(HitObject_1.default));
exports.BossAtk2 = BossAtk2;
var BossAtk1 = /** @class */ (function (_super) {
    __extends(BossAtk1, _super);
    function BossAtk1() {
        var _this = _super.call(this) || this;
        _this.hitType = HitObject_1.default.BULLET;
        _this.view = new layaMaxUI_1.ui.scene.BossFireBallUI();
        _this.view.fireClip.play();
        _this.addChild(_this.view);
        _this.view.y = -_this.view.height;
        return _this;
    }
    BossAtk1.prototype.getHitBox = function () {
        return this.view.hitBox;
    };
    BossAtk1.prototype.clear = function () {
        Laya.Tween.clearAll(this);
        this.view.clipZha.offAllCaller(this);
    };
    BossAtk1.prototype.move = function () {
        var t = new Laya.Tween();
        t.to(this, { x: this.x - 800 }, 800 / 0.6, null, new Laya.Handler(this, this.moveOver));
    };
    BossAtk1.prototype.moveOver = function () {
        this.removeSelf();
        this.battle.removeHitObject(this);
    };
    BossAtk1.prototype.hitFun = function () {
        this.hitEffect();
        return true;
    };
    BossAtk1.prototype.getSkill = function () {
        return App_1.default.getConfig(MyGameInit_1.default.sys_skill, "1");
    };
    BossAtk1.prototype.hitEffect = function () {
        this.clear();
        this.view.fireClip.visible = false;
        this.view.clipZha.visible = true;
        this.view.clipZha.play(0, this.view.clipZha.total - 1);
        this.view.clipZha.once(Laya.Event.COMPLETE, this, this.comFun);
    };
    BossAtk1.prototype.comFun = function () {
        this.removeSelf();
    };
    BossAtk1.prototype.getAttackObject = function () {
        return this.getHp41();
    };
    return BossAtk1;
}(HitObject_1.default));
exports.BossAtk1 = BossAtk1;
},{"../../game/App":5,"../../ui/layaMaxUI":83,"../MyEvent":21,"../MyGameInit":22,"./BattleDisplay":47,"./HitObject":57}],50:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HitObject_1 = require("./HitObject");
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var BossDao_1 = require("./BossDao");
var RotationEffect_1 = require("./RotationEffect");
var Boss2 = /** @class */ (function (_super) {
    __extends(Boss2, _super);
    function Boss2() {
        var _this = _super.call(this) || this;
        _this.daoArr = [];
        _this.startX = 0;
        _this.hitType = HitObject_1.default.ENEMY;
        _this.view = new layaMaxUI_1.ui.scene.Boss2ViewUI();
        _this.ani = _this.view.bossAni;
        _this.addChild(_this.view);
        _this.view.y = -_this.view.height;
        _this.view.x = -_this.view.width / 2;
        _this.setBar(_this.view.blood.bloodImg);
        _this.view.visible = false;
        return _this;
    }
    Boss2.prototype.die = function () {
        _super.prototype.die.call(this);
        this.dieMv();
        this.clear();
    };
    Boss2.prototype.getHurt = function () {
        return this.sys.enemyAttk;
    };
    Boss2.prototype.clear = function () {
        Laya.timer.clearAll(this);
        this.ani.offAllCaller(this);
    };
    Boss2.prototype.setSysEnemy = function (sys) {
        this.sys = sys;
        this.setMaxHp(sys.enemyHp);
        this.resetHp();
    };
    Boss2.prototype.getHitBox = function () {
        return this.view.hitBox;
    };
    Boss2.prototype.startMv = function () {
        this.view.visible = true;
        this.ani.interval = 1000 / 15;
        this.ani.play(0, false, "att1_2");
        this.nextWait();
    };
    Boss2.prototype.nextWait = function () {
        this.ani.once(Laya.Event.COMPLETE, this, this.wait);
    };
    Boss2.prototype.startMvOver = function () {
    };
    Boss2.prototype.startAttackTime = function () {
        this.attackOnce();
    };
    Boss2.prototype.attackOnce = function () {
        var skillId = 0;
        if (0.5 < Math.random()) {
            skillId = 1;
        }
        else {
            skillId = 2;
        }
        //let sys = <SysSkill>App.getConfig( MyGameInit.sys_skill,skillId );
        Laya.timer.once(10000, this, this.bossTimerFun, [skillId]);
    };
    Boss2.prototype.bossTimerFun = function (skillId) {
        if (skillId == 1) {
            this.atk1Fun();
        }
        else {
            this.atk2Fun();
        }
        this.attackOnce();
    };
    Boss2.prototype.clearDao = function () {
        for (var _i = 0, _a = this.daoArr; _i < _a.length; _i++) {
            var i = _a[_i];
            if (i.parent) {
                i.removeSelf();
                this.battle.removeHitObject(i);
            }
        }
        this.daoArr.length = 0;
    };
    Boss2.prototype.atk1Fun = function () {
        this.select = false;
        this.view.blood.visible = false;
        this.ani.interval = 1000 / 24;
        this.ani.play(0, false, "att1");
        this.ani.once(Laya.Event.COMPLETE, this, this.atk1ComFun);
    };
    Boss2.prototype.atk1ComFun = function () {
        var left = new BossDao_1.default();
        var right = new BossDao_1.default();
        left.battle = this.battle;
        right.battle = this.battle;
        this.battle.addHitObject(left);
        this.battle.addHitObject(right);
        this.battle.setY(left);
        this.battle.setY(right);
        this.battle.battleSp.addChild(left);
        this.battle.battleSp.addChild(right);
        left.x = this.battle.playerView.x - 150;
        right.x = this.battle.playerView.x + 150;
        this.daoArr.push(left);
        this.daoArr.push(right);
        Laya.timer.once(Boss2.BOSS_DOWN_TIME, this, this.downFun);
    };
    Boss2.prototype.downFun = function () {
        var v = new ATK1();
        v.battle = this.battle;
        this.battle.addHitObject(v);
        this.battle.battleSp.addChild(v);
        v.x = this.battle.playerView.x;
        this.battle.setY(v);
        Laya.timer.once(1500, this, this.downFunOver);
    };
    Boss2.prototype.downFunOver = function () {
        this.clearDao();
        this.ani.interval = 1000 / 60;
        this.ani.play(0, false, "att1_2");
        this.nextWait();
        this.select = true;
        this.view.blood.visible = true;
    };
    Boss2.prototype.atk2Fun = function () {
        this.select = false;
        this.view.blood.visible = false;
        this.ani.interval = 1000 / 24;
        this.ani.play(0, false, "att1");
        this.ani.once(Laya.Event.COMPLETE, this, this.atk2ComFun);
    };
    Boss2.prototype.atk2ComFun = function () {
        this.visible = false;
        this.resetTemp();
        this.tsp.x = this.battle.playerView.x - 250;
        this.tAni.scaleX = -1;
        this.tAni.interval = 1000 / 24;
        this.tAni.play(0, false, "att1_2");
        this.tAni.once(Laya.Event.COMPLETE, this, this.atk3ComFun);
    };
    Boss2.prototype.resetTemp = function () {
        var sp = new Laya.Sprite();
        this.tsp = sp;
        var t = new layaMaxUI_1.ui.scene.Boss2ViewUI();
        this.tAni = t.bossAni;
        sp.addChild(t);
        t.y = -t.height;
        t.x = -t.width / 2;
        t.blood.visible = false;
        this.battle.battleSp.addChild(sp);
        this.battle.setY(sp);
    };
    Boss2.prototype.atk3ComFun = function () {
        this.tAni.interval = 1000 / 24;
        this.tAni.play(0, false, "att4");
        //放蛋刀的动作
        this.tAni.once(Laya.Event.COMPLETE, this, this.atk4ComFun);
    };
    Boss2.prototype.atk4ComFun = function () {
        this.fly();
        //起飞
        this.tAni.interval = 1000 / 24;
        this.tAni.play(0, false, "att1");
        this.tAni.once(Laya.Event.COMPLETE, this, this.atk5ComFun);
    };
    Boss2.prototype.fly = function () {
        var a = new ATK2();
        var b = new ATK2();
        a.battle = this.battle;
        b.battle = this.battle;
        this.battle.battleSp.addChild(a);
        this.battle.battleSp.addChild(b);
        this.battle.addHitObject(a);
        this.battle.addHitObject(b);
        this.battle.setY(a);
        this.battle.setY(b);
        a.x = this.tsp.x;
        b.x = this.tsp.x;
        a.zOrder = b.zOrder = 1000;
        a.start(this.tsp.x + 500);
        b.start(this.tsp.x - 500);
    };
    Boss2.prototype.atk5ComFun = function () {
        this.tsp.removeSelf();
        //移除拷贝
        //this.x = this.startX;
        //this.view.bossAni.scaleX = 1;
        this.visible = true;
        this.ani.interval = 1000 / 24;
        this.ani.play(0, false, "att1_2");
        this.nextWait();
        this.select = true;
        this.view.blood.visible = true;
    };
    Boss2.prototype.wait = function () {
        this.ani.interval = 1000 / 24;
        this.ani.play(0, true, "wait");
    };
    Boss2.BOSS_DOWN_TIME = 5000;
    return Boss2;
}(HitObject_1.default));
exports.default = Boss2;
var ATK2 = /** @class */ (function (_super) {
    __extends(ATK2, _super);
    function ATK2() {
        var _this = _super.call(this) || this;
        _this.sx = 0;
        _this.hitType = HitObject_1.default.BULLET;
        _this.view = new layaMaxUI_1.ui.scene.Boss2Atk2UI();
        _this.view.x = -_this.view.width / 2;
        _this.view.y = -_this.view.height;
        _this.addChild(_this.view);
        RotationEffect_1.default.play(_this.view.img, 10);
        return _this;
    }
    ATK2.prototype.getHitBox = function () {
        return this.view.hitbox;
    };
    ATK2.prototype.start = function (target) {
        this.sx = this.x;
        var t = new Laya.Tween();
        t.to(this, { x: target }, 3000, null, new Laya.Handler(this, this.com1));
    };
    ATK2.prototype.com1 = function () {
        var t = new Laya.Tween();
        t.to(this, { x: this.sx }, 1000, null, new Laya.Handler(this, this.com2));
    };
    ATK2.prototype.com2 = function () {
        this.removeSelf();
        this.battle.removeHitObject(this);
    };
    ATK2.prototype.hitFun = function () {
        this.view.img.visible = false;
        this.view.yinying.visible = false;
        this.hitEffect();
        return true;
    };
    ATK2.prototype.hitEffect = function () {
        Laya.Tween.clearAll(this);
        this.view.clipZha.visible = true;
        this.view.clipZha.play(0, this.view.clipZha.total - 1);
        this.view.clipZha.once(Laya.Event.COMPLETE, this, this.cccFun);
    };
    ATK2.prototype.cccFun = function () {
        this.removeSelf();
    };
    ATK2.prototype.clear = function () {
        Laya.Tween.clearAll(this);
        this.removeSelf();
    };
    ATK2.prototype.getAttackObject = function () {
        return this.getHp41();
    };
    return ATK2;
}(HitObject_1.default));
exports.ATK2 = ATK2;
var ATK1 = /** @class */ (function (_super) {
    __extends(ATK1, _super);
    function ATK1() {
        var _this = _super.call(this) || this;
        _this.hitType = HitObject_1.default.BULLET;
        _this.view = new layaMaxUI_1.ui.scene.Boss2Atk1UI();
        _this.view.redView.ani1.play(0, true);
        _this.addChild(_this.view);
        _this.view.y = -_this.view.height;
        var t = new Laya.Tween();
        var targetY = _this.view.height + 200;
        _this.view.dan.y = -1000;
        _this.view.x = -_this.view.width / 2;
        t.to(_this.view.dan, { y: targetY }, 1500, null, new Laya.Handler(_this, _this.comFun));
        return _this;
    }
    ATK1.prototype.hitFun = function () {
        this.hitEffect();
        return true;
    };
    /**
     * 爆炸效果
     */
    ATK1.prototype.hitEffect = function () {
        this.clear();
        this.view.clipZha.visible = true;
        this.view.clipZha.play(0, this.view.clipZha.total - 1);
        this.view.clipZha.once(Laya.Event.COMPLETE, this, this.comFun2);
        this.view.dan.visible = false;
    };
    ATK1.prototype.clear = function () {
        Laya.Tween.clearAll(this);
        this.view.clipZha.offAllCaller(this);
    };
    ATK1.prototype.comFun2 = function () {
        this.removeSelf();
    };
    /**
     * 伊利丹落地了 没砸到人
     */
    ATK1.prototype.comFun = function () {
        this.battle.removeHitObject(this);
        this.hitEffect();
    };
    ATK1.prototype.zhaComFun = function () {
        this.removeSelf();
    };
    ATK1.prototype.getHitBox = function () {
        return this.view.hitbox;
    };
    ATK1.prototype.getAttackObject = function () {
        return this.getHp41();
    };
    return ATK1;
}(HitObject_1.default));
exports.ATK1 = ATK1;
},{"../../ui/layaMaxUI":83,"./BossDao":51,"./HitObject":57,"./RotationEffect":63}],51:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HitObject_1 = require("./HitObject");
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var App_1 = require("../../game/App");
var MyGameInit_1 = require("../MyGameInit");
var BossDao = /** @class */ (function (_super) {
    __extends(BossDao, _super);
    function BossDao() {
        var _this = _super.call(this) || this;
        _this.view = new layaMaxUI_1.ui.scene.Boss2DaoUI();
        _this.addChild(_this.view);
        _this.view.y = -_this.view.height;
        _this.view.x = -_this.view.width / 2;
        _this.view.ani.play(0, false, "ani1");
        _this.view.ani.once(Laya.Event.COMPLETE, _this, _this.comFun);
        _this.select = false;
        _this.hitType = HitObject_1.default.ENEMY;
        _this.setBar(_this.view.blood.bloodImg);
        var sys = App_1.default.getConfig(MyGameInit_1.default.sys_enemy, 20146);
        _this.setSysEnemy(sys);
        _this.view.blood.visible = false;
        return _this;
    }
    BossDao.prototype.die = function () {
        this.removeSelf();
        this.battle.removeHitObject(this);
    };
    BossDao.prototype.setSysEnemy = function (sys) {
        this.setMaxHp(sys.enemyHp);
        this.resetHp();
    };
    BossDao.prototype.hitFun = function () {
        this.view.blood.visible = true;
        return false;
    };
    BossDao.prototype.comFun = function () {
        this.select = true;
    };
    BossDao.prototype.getHitBox = function () {
        return this.view.hitBox;
    };
    return BossDao;
}(HitObject_1.default));
exports.default = BossDao;
},{"../../game/App":5,"../../ui/layaMaxUI":83,"../MyGameInit":22,"./HitObject":57}],52:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var HitObject_1 = require("./HitObject");
var BattleSession_1 = require("../session/BattleSession");
var DropBuff = /** @class */ (function (_super) {
    __extends(DropBuff, _super);
    function DropBuff() {
        var _this = _super.call(this) || this;
        _this.view = null;
        _this.view = new layaMaxUI_1.ui.scene.DropBuffUI();
        _this.addChild(_this.view);
        _this.view.y = -_this.view.height;
        return _this;
    }
    DropBuff.prototype.getHitBox = function () {
        return this.view.hitBox;
    };
    /**
     * 得到显示对象
     */
    DropBuff.prototype.getDisplay = function () {
        return this.view;
    };
    DropBuff.prototype.setBuffType = function (type) {
        this.type = type;
        this.view.img.skin = null;
        if (type == BattleSession_1.EQUIP_TYPE.BUFF_ATT) {
            this.view.img.skin = "battlescene/gongjishi.png";
        }
        else if (type == BattleSession_1.EQUIP_TYPE.BUFF_CRIT) {
            this.view.img.skin = "battlescene/baojishi.png";
        }
        else if (type == BattleSession_1.EQUIP_TYPE.BUFF_DEF) {
            this.view.img.skin = "battlescene/fangyushi.png";
        }
        else if (type == BattleSession_1.EQUIP_TYPE.BUFF_SPEED) {
            this.view.img.skin = "battlescene/sudushi.png";
        }
    };
    DropBuff.prototype.setMv = function () {
        this.view.img.visible = false;
        var v = null;
        if (this.type == BattleSession_1.EQUIP_TYPE.BUFF_ATT) {
            v = this.view.gong;
        }
        else if (this.type == BattleSession_1.EQUIP_TYPE.BUFF_CRIT) {
            v = this.view.baoji;
        }
        else if (this.type == BattleSession_1.EQUIP_TYPE.BUFF_DEF) {
            v = this.view.fangyu;
        }
        else if (this.type == BattleSession_1.EQUIP_TYPE.BUFF_SPEED) {
            v = this.view.sudu;
        }
        v.visible = true;
        var ani = v["ani1"];
        ani.play(0, true);
    };
    DropBuff.prototype.removeItem = function () {
        var t = new Laya.Tween();
        t.to(this, { alpha: 0 }, 300, null, new Laya.Handler(this, this.overFun));
    };
    DropBuff.prototype.overFun = function () {
        this.removeSelf();
    };
    DropBuff.prototype.hitFun = function () {
        this.hitTest = false;
        return true;
    };
    return DropBuff;
}(HitObject_1.default));
exports.default = DropBuff;
},{"../../ui/layaMaxUI":83,"../session/BattleSession":67,"./HitObject":57}],53:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SysConfig_1 = require("../config/SysConfig");
var App_1 = require("../../game/App");
var MyGameInit_1 = require("../MyGameInit");
var BattleSession_1 = require("../session/BattleSession");
var HitObject_1 = require("./HitObject");
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var DropItem = /** @class */ (function (_super) {
    __extends(DropItem, _super);
    function DropItem() {
        var _this = _super.call(this) || this;
        _this.view = null;
        /**
         * 是否碰撞上
         */
        _this.haveHit = false;
        _this.view = new layaMaxUI_1.ui.scene.DropItemUI();
        _this.addChild(_this.view);
        _this.view.y = -_this.view.height;
        _this.onceHitMode = true;
        return _this;
    }
    DropItem.prototype.setSysItem = function (sys) {
        this.sysItem = sys;
    };
    DropItem.prototype.getHitBox = function () {
        return this.view.hitbox;
    };
    DropItem.prototype.setItemId = function (itemId) {
        var s = App_1.default.getInstance().configManager.getConfig(MyGameInit_1.default.sys_item, itemId);
        this.view.head.visible = false;
        this.view.body.visible = false;
        this.view.weapon.visible = false;
        this.view.horse.visible = false;
        this.view.egg.visible = false;
        if (s.itemType == BattleSession_1.EQUIP_TYPE.PET) {
            this.view.egg.visible = true;
        }
        else {
            var img = null;
            if (s.itemType == BattleSession_1.EQUIP_TYPE.WEAPON) {
                img = this.view.weapon;
            }
            else if (s.itemType == BattleSession_1.EQUIP_TYPE.HORSE) {
                img = this.view.horse;
            }
            else if (s.itemType == BattleSession_1.EQUIP_TYPE.BODY) {
                img = this.view.body;
            }
            else if (s.itemType == BattleSession_1.EQUIP_TYPE.HEAD) {
                img = this.view.head;
            }
            img.visible = true;
            img.skin = null;
            img.skin = SysConfig_1.Res.getItemUrl(itemId);
        }
    };
    /**
     * 0在空中
     * 1在地上
     * @param stat
     */
    DropItem.prototype.setStat = function (stat) {
        this.view.di.visible = (stat == 1);
    };
    DropItem.prototype.hitFun = function () {
        _super.prototype.hitFun.call(this);
        return !this.battle.bagSession.isFull(this.sysItem.itemType);
    };
    return DropItem;
}(HitObject_1.default));
exports.default = DropItem;
},{"../../game/App":5,"../../ui/layaMaxUI":83,"../MyGameInit":22,"../config/SysConfig":23,"../session/BattleSession":67,"./HitObject":57}],54:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var RotationEffect_1 = require("./RotationEffect");
var SysConfig_1 = require("../config/SysConfig");
var GetItemViewBox = /** @class */ (function (_super) {
    __extends(GetItemViewBox, _super);
    function GetItemViewBox() {
        var _this = _super.call(this) || this;
        _this.map = {};
        _this.map["普通"] = "sence/putong.png";
        _this.map["精致"] = "sence/jingying.png";
        _this.map["强化"] = "sence/qianghua.png";
        _this.map["史诗"] = "sence/shishi.png";
        _this.map["罕见"] = "sence/hanjian.png";
        _this.map["稀有"] = "sence/xiyou.png";
        _this.anchorX = _this.anchorY = 0.5;
        RotationEffect_1.default.play(_this.light);
        return _this;
    }
    GetItemViewBox.prototype.setData = function (p) {
        this.equipTxtImg.visible = false;
        this.goldFc.visible = false;
        if (p instanceof SysConfig_1.Equip) {
            this.logo.skin = null;
            this.logo.skin = SysConfig_1.Res.getItemUrl(p.getSysItem().id);
            this.logo.scale(2.2, 2.2);
            this.equipTxtImg.visible = true;
            this.equipTxtImg.skin = this.map[p.getSysItem().name];
        }
        else if (p instanceof SysConfig_1.SysItem) {
            this.logo.skin = null;
            this.logo.skin = SysConfig_1.Res.getItemUrl(p.id);
            this.logo.scale(2.2, 2.2);
            this.equipTxtImg.visible = true;
            this.equipTxtImg.skin = this.map[p.name];
        }
        else if (p instanceof Object) {
            if (p.type == 0) {
                this.logo.skin = null;
                this.logo.skin = p.logo;
                this.logo.scale(1.5, 1.5);
                this.equipTxtImg.visible = true;
                this.equipTxtImg.skin = p.txtImg;
            }
        }
        else {
            this.logo.skin = null;
            this.logo.skin = "sence/jinbidai.png";
            this.logo.scale(1, 1);
            this.goldFc.visible = true;
            this.goldFc.value = p + "";
        }
    };
    return GetItemViewBox;
}(layaMaxUI_1.ui.scene.GetItemViewUI));
exports.default = GetItemViewBox;
},{"../../ui/layaMaxUI":83,"../config/SysConfig":23,"./RotationEffect":63}],55:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyEffect_1 = require("../effect/MyEffect");
var App_1 = require("../../game/App");
var MyEvent_1 = require("../MyEvent");
var LogType_1 = require("../session/LogType");
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var GirlViewC = /** @class */ (function (_super) {
    __extends(GirlViewC, _super);
    function GirlViewC() {
        var _this = _super.call(this) || this;
        _this.dataSession = null;
        App_1.default.getInstance().injOne(_this);
        _this.talkbg.bottom = 0;
        _this.height = Laya.stage.height;
        _this.init();
        return _this;
    }
    GirlViewC.prototype.toulan = function () {
        //App.getInstance().eventManager.once( GameEvent.OPEN_SCENE,this,this.openFun );
    };
    GirlViewC.prototype.toulanFun = function () {
        this.openFun();
    };
    GirlViewC.prototype.openFun = function () {
        this.dataSession.log(LogType_1.default.NEWER_XINGLAI);
        this.disGirl(1, "大白天偷懒睡觉，梅林法师已经\n很久没有消息啦！");
        Laya.timer.once(2000, this, this.hideAll);
    };
    GirlViewC.prototype.diaocha = function () {
        this.disGirl(0, "最近幽暗森林魔物越来越多，赶紧去调查一下。");
    };
    GirlViewC.prototype.tailihai = function () {
        this.disGirl(3, "太厉害了！点击角色按钮，进行查看。");
        Laya.timer.once(3000, this, this.click2Fun);
        this.event(GirlViewC.NEXT);
    };
    GirlViewC.prototype.click2Fun = function () {
        this.hideAll();
        //this.event( GirlViewC.NEXT );
    };
    /**
     * 隐藏全部
     */
    GirlViewC.prototype.hideAll = function () {
        this.box1.visible = false;
        this.girl.visible = false;
        this.talkbg.visible = false;
    };
    GirlViewC.prototype.init = function () {
        this.leftImg.graphics.drawRect(0, 0, 375, Laya.stage.height, "#000000");
        this.rightImg.graphics.drawRect(0, 0, 375, Laya.stage.height, "#000000");
        this.leftImg.alpha = 0.1;
        this.rightImg.alpha = 0.3;
        this.box1.visible = false;
    };
    /**
     * 说第一句话
     */
    GirlViewC.prototype.startOne = function () {
        this.disGirl(1, "你还在磨蹭什么？魔龙开始侵袭！\n赶紧去增援！");
        Laya.stage.once(Laya.Event.CLICK, this, this.clickFun);
    };
    GirlViewC.prototype.clickFun = function () {
        this.dataSession.log(LogType_1.default.NEWER_FIRST_CLICK);
        this.event(GirlViewC.NEXT);
    };
    /**
     * 移动教学
     */
    GirlViewC.prototype.moveGuide = function () {
        this.box1.visible = true;
        MyEffect_1.default.alhpa(this.box1, 1, 100);
        this.girl.visible = false;
        this.talkbg.visible = false;
        Laya.timer.once(3000, this, this.moveGuideOver);
    };
    GirlViewC.prototype.moveGuideOver = function () {
        var t = new Laya.Tween();
        t.to(this.box1, { alpha: 0 }, 100, null, new Laya.Handler(this, this.moveGuideOver2));
    };
    GirlViewC.prototype.moveGuideOver2 = function () {
        this.box1.visible = false;
    };
    /**
     * 你变的越来越强大
     * 之后让玩家干魔龙
     */
    GirlViewC.prototype.bianQiang = function () {
        this.dataSession.log(LogType_1.default.NEWER_YUELAIYUEQIANGDA);
        this.disGirl(3, "你变得越来越强大！");
        App_1.default.sendEvent(MyEvent_1.default.EQUIP_OVER_NEWER);
        this.click33Fun();
        //Laya.timer.once( 1500 ,this,this.hideAll );
        //Laya.stage.once(Laya.Event.CLICK,this,this.click33Fun);
    };
    GirlViewC.prototype.click33Fun = function () {
        Laya.timer.once(3000, this, this.hideAll);
    };
    /**
     * 显示女孩
     * @param stat
     * @param text
     */
    GirlViewC.prototype.disGirl = function (stat, text) {
        this.setGirlStat(stat);
        this.txt.text = text;
        this.girl.visible = true;
        this.talkbg.visible = true;
        this.box1.visible = false;
    };
    /**
     * 设置girl的脸
     * 0 默认的脸
     * 1 生气
     * 2 微笑
     * 3 大笑
     */
    GirlViewC.prototype.setGirlStat = function (stat) {
        this.nu.visible = false;
        this.xiao.visible = false;
        this.daxiao.visible = false;
        if (stat == 0) {
        }
        else if (stat == 1) {
            this.nu.visible = true;
        }
        else if (stat == 2) {
            this.xiao.visible = true;
        }
        else if (stat == 3) {
            this.daxiao.visible = true;
        }
    };
    GirlViewC.NEXT = "NEXT";
    return GirlViewC;
}(layaMaxUI_1.ui.scene.GrilViewUI));
exports.default = GirlViewC;
},{"../../game/App":5,"../../ui/layaMaxUI":83,"../MyEvent":21,"../effect/MyEffect":24,"../session/LogType":70}],56:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var SysConfig_1 = require("../config/SysConfig");
var HeChengEffect = /** @class */ (function (_super) {
    __extends(HeChengEffect, _super);
    function HeChengEffect() {
        var _this = _super.call(this) || this;
        _this.on(Laya.Event.UNDISPLAY, _this, _this.undisFun);
        return _this;
    }
    HeChengEffect.prototype.undisFun = function () {
        Laya.timer.clear(this, this.loopFun);
    };
    HeChengEffect.prototype.play = function (sys1, sys2) {
        this.sys1 = sys1;
        this.sys2 = sys2;
        this.h1Skin = SysConfig_1.Res.getItemUrl(this.sys1.id);
        this.h2Skin = SysConfig_1.Res.getItemUrl(this.sys1.id);
        this.h3Skin = SysConfig_1.Res.getItemUrl(this.sys1.id);
        this.bianSkin = SysConfig_1.Res.getItemUrl(this.sys2.id);
        this.loopFun();
        this.kuang.skin = SysConfig_1.Res.getItemBorder(this.sys1.itemQuality);
        this.hechengguang.visible = false;
        this.hechengguang.stop();
        this.ani1.play(0, false);
        this.ani1.on(Laya.Event.COMPLETE, this, this.aniComFun);
        Laya.timer.frameLoop(1, this, this.loopFun);
    };
    HeChengEffect.prototype.loopFun = function () {
        this.he2.skin = this.h1Skin;
        this.he1.skin = this.h2Skin;
        this.he3.skin = this.h3Skin;
        this.bian.skin = this.bianSkin;
    };
    HeChengEffect.prototype.aniComFun = function () {
        this.hechengguang.visible = true;
        this.hechengguang.play();
        //this.hechengguang.interval = 1000 / 60;
        Laya.timer.once(800, this, this.timerFun);
        this.kuang.skin = SysConfig_1.Res.getItemBorder(this.sys2.itemQuality);
    };
    HeChengEffect.prototype.timerFun = function () {
        Laya.Tween.to(this, { alpha: 0 }, 200, null, new Laya.Handler(this, this.tweenOver));
    };
    HeChengEffect.prototype.tweenOver = function () {
        this.removeSelf();
    };
    return HeChengEffect;
}(layaMaxUI_1.ui.scene.hechengUI));
exports.default = HeChengEffect;
},{"../../ui/layaMaxUI":83,"../config/SysConfig":23}],57:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MyProgressBar_1 = require("../../game/MyProgressBar");
var BattleDisplay_1 = require("./BattleDisplay");
var HitObject = /** @class */ (function (_super) {
    __extends(HitObject, _super);
    function HitObject() {
        var _this = _super.call(this) || this;
        /**
         * 碰撞类型
         * 他们被碰撞后 会按照类型处理
         */
        _this.hitType = -1;
        /**
         * 显示类型 比如你是boss 还是小兵
         */
        _this.disType = 0;
        /**
         * 是否进行碰撞检测
         */
        _this.hitTest = true;
        /**
         * 能否选中 比如龙上天 比如无敌时间
         */
        _this.select = true;
        _this.initPoint = new Laya.Point();
        _this.isDead = false;
        _this.checked = false;
        _this.mybar = null;
        /**
         * 一次碰撞检测
         * 开启这个功能 物品被碰撞一次后 不会持续检测
         */
        _this.onceHitMode = false;
        _this.once(Laya.Event.UNDISPLAY, _this, _this.undisFun);
        return _this;
    }
    HitObject.prototype.undisFun = function () {
        this.clear();
    };
    /**
     * 得到碰撞盒
     */
    HitObject.prototype.getHitBox = function () {
        return null;
    };
    /**
     * 得到显示对象
     */
    HitObject.prototype.getDisplay = function () {
        return null;
    };
    /**
     * 清理所有资源和tween等等 防止报错
     */
    HitObject.prototype.clear = function () {
    };
    HitObject.prototype.setDisplayType = function (type) {
        this.disType = type;
    };
    /**
     * 存储初始的位置
     */
    HitObject.prototype.savePos = function () {
        this.initPoint.x = this.x;
        this.initPoint.y = this.y;
    };
    /**
     * 显示的时候调用
     */
    HitObject.prototype.onShow = function () {
        this.visible = true;
    };
    /**
     * 隐藏的时候调用
     */
    HitObject.prototype.onHide = function () {
        if (this.disType == BattleDisplay_1.DISPLAY_TYPE.MONSTER || this.disType == BattleDisplay_1.DISPLAY_TYPE.ADD_HP) {
            this.visible = false;
        }
    };
    /**
     * 碰撞的回调方法 如果返回true 就会从列表里移除
     */
    HitObject.prototype.hitFun = function () {
        if (this.onceHitMode) {
            this.checked = true;
        }
        return false;
    };
    HitObject.prototype.unHitFun = function () {
        this.checked = false;
    };
    /**
     * 加减hp 加就是正的 减就是负的
     * @param hp
     */
    HitObject.prototype.changeHp = function (hp) {
        this.nowHp += hp;
        this.mybar.setValue(this.nowHp, this.maxHp);
        if (this.nowHp <= 0) {
            this.isDead = true;
        }
    };
    /**
     * 设置最大血量
     * @param maxHp
     */
    HitObject.prototype.setMaxHp = function (maxHp) {
        this.nowHp = maxHp;
        this.maxHp = maxHp;
        this.mybar.setValue(this.nowHp, this.maxHp);
    };
    /**
     * 如果设置了这个 就相当于有了血量
     * @param maxHp
     * @param img
     */
    HitObject.prototype.setBar = function (img) {
        if (this.mybar == null) {
            this.mybar = new MyProgressBar_1.default();
            this.mybar.setScrollRectSprite(img);
        }
    };
    HitObject.prototype.die = function () {
        this.isDead = true;
    };
    HitObject.prototype.dieMv = function () {
        var t = new Laya.Tween();
        t.to(this, { alpha: 0 }, 1000);
    };
    /**
     * 被击中
     */
    HitObject.prototype.hitIng = function () {
    };
    /**
     *  怪物对人造成的伤害
     */
    HitObject.prototype.getHurt = function () {
        return 0;
    };
    /**
     * 得到伤害类型 这个一般是子弹用的
     */
    HitObject.prototype.getAttackObject = function () {
        return null;
    };
    HitObject.prototype.getHp41 = function () {
        var hp = this.battle.bagSession.playerEquip.hitPoint / 4;
        var a = new AttackObject();
        a.type = AttackObject.FORCE_ATTACK;
        a.value = hp;
        return a;
    };
    /**
     * 回复血量
     */
    HitObject.prototype.resetHp = function () {
        if (this.mybar) {
            this.mybar.setValue(this.maxHp, this.maxHp);
        }
        this.nowHp = this.maxHp;
    };
    /**
     * 恢复位置
     */
    HitObject.prototype.resetPos = function () {
        this.x = this.initPoint.x;
        this.y = this.initPoint.y;
    };
    HitObject.prototype.setScaleX = function (value) {
    };
    HitObject.prototype.getScaleX = function () {
        return 0;
    };
    HitObject.prototype.setSysEnemy = function (sys) {
    };
    HitObject.prototype.drawHit = function () {
        var a = this.getHitBox();
        a.graphics.clear();
        a.graphics.drawRect(0, 0, a.width, a.height, "#ffffff");
    };
    HitObject.ENEMY = 0;
    HitObject.BULLET = 1;
    HitObject.ITEM = 2;
    HitObject.BUFF = 3;
    return HitObject;
}(Laya.Sprite));
exports.default = HitObject;
var AttackObject = /** @class */ (function () {
    function AttackObject() {
    }
    AttackObject.NORMAL_ATTACK = 0;
    AttackObject.FORCE_ATTACK = 1;
    return AttackObject;
}());
exports.AttackObject = AttackObject;
},{"../../game/MyProgressBar":17,"./BattleDisplay":47}],58:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var LoadView = /** @class */ (function (_super) {
    __extends(LoadView, _super);
    function LoadView() {
        var _this = _super.call(this) || this;
        _this.speed = 0.3;
        _this.on(Laya.Event.DISPLAY, _this, _this.disFun);
        _this.on(Laya.Event.UNDISPLAY, _this, _this.undisFun);
        return _this;
    }
    LoadView.prototype.disFun = function () {
        Laya.timer.frameLoop(1, this, this.loopFun);
    };
    LoadView.prototype.loopFun = function () {
        this.img.rotation += (Laya.timer.delta * this.speed);
    };
    LoadView.prototype.undisFun = function () {
        Laya.timer.clearAll(this);
    };
    return LoadView;
}(layaMaxUI_1.ui.scene.LoadViewUI));
exports.default = LoadView;
},{"../../ui/layaMaxUI":83}],59:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var RotationEffect_1 = require("./RotationEffect");
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var LoadView2 = /** @class */ (function (_super) {
    __extends(LoadView2, _super);
    function LoadView2() {
        var _this = _super.call(this) || this;
        _this.on(Laya.Event.PROGRESS, _this, _this.proFun);
        _this.on(Laya.Event.DISPLAY, _this, _this.disFun);
        _this.proFun(0);
        _this.bg.height = Laya.stage.height;
        _this.height = Laya.stage.height;
        _this.disFun();
        return _this;
    }
    LoadView2.prototype.disFun = function () {
        RotationEffect_1.default.play(this.zhuan);
        this.proFun(0);
    };
    LoadView2.prototype.proFun = function (value) {
        this.jindu.text = Math.floor(value * 100) + "%";
    };
    return LoadView2;
}(layaMaxUI_1.ui.scene.Loading2UI));
exports.default = LoadView2;
},{"../../ui/layaMaxUI":83,"./RotationEffect":63}],60:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var HitObject_1 = require("./HitObject");
var MyAnimation_1 = require("../../game/MyAnimation");
var BattleDisplay_1 = require("./BattleDisplay");
var MonsterDisplay = /** @class */ (function (_super) {
    __extends(MonsterDisplay, _super);
    function MonsterDisplay() {
        var _this = _super.call(this) || this;
        _this.myAni = null;
        _this.dieTween = new Laya.Tween();
        _this.tHandler = new Laya.Handler(_this, _this.tFun);
        _this.hitType = HitObject_1.default.ENEMY;
        _this.monster = new layaMaxUI_1.ui.scene.MonsterViewUI();
        _this.monster.y = -_this.monster.height;
        _this.setBar(_this.monster.blood.bloodImg);
        _this.addChild(_this.monster);
        return _this;
    }
    MonsterDisplay.prototype.getHitBox = function () {
        return this.monster.hitBox;
    };
    MonsterDisplay.prototype.getDisplay = function () {
        return this.monster;
    };
    MonsterDisplay.prototype.setSysEnemy = function (sys, style) {
        if (style === void 0) { style = -1; }
        this.sysEnemy = sys;
        this.removeChildByName("ani");
        this.myAni = new MyAnimation_1.default();
        this.myAni.name = "ani";
        var m = sys.enemymode;
        if (style != -1) {
            m = style;
        }
        this.myAni.load("scene/monsterAni/" + m + ".ani", "res/atlas/monsterAni/" + m + ".atlas");
        this.addChild(this.myAni);
        this.myAni.interval = 1000 / 60;
        this.wait();
        this.myAni.x = this.monster.width / 2;
        this.isDead = false;
        this.visible = true;
        this.alpha = 1;
        this.setMaxHp(sys.enemyHp);
        this.resetHp();
        this.monster.blood.visible = false;
        this.hitTest = true;
    };
    MonsterDisplay.prototype.setDisplayType = function (type) {
        _super.prototype.setDisplayType.call(this, type);
        if (type == BattleDisplay_1.DISPLAY_TYPE.BOSS) {
            this.myAni.scale(2, 2);
            this.getHitBox().scale(2, 2);
            this.monster.blood.y = -100;
        }
    };
    MonsterDisplay.prototype.hitFun = function () {
        this.monster.blood.visible = true;
        return false;
    };
    MonsterDisplay.prototype.setScaleX = function (value) {
        this.myAni.scaleX = value;
    };
    MonsterDisplay.prototype.getScaleX = function () {
        return this.myAni.scaleX;
    };
    MonsterDisplay.prototype.getHurt = function () {
        return this.sysEnemy.enemyAttk;
    };
    MonsterDisplay.prototype.die = function () {
        this.hitTest = false;
        _super.prototype.die.call(this);
        this.myAni.interval = 1000 / 60;
        this.myAni.play(0, false, "hit");
        this.myAni.once(Laya.Event.COMPLETE, this, this.dieOver);
    };
    MonsterDisplay.prototype.dieOver = function () {
        this.dieTween.to(this, { alpha: 0 }, 100, null, this.tHandler);
    };
    MonsterDisplay.prototype.tFun = function () {
        this.visible = false;
    };
    MonsterDisplay.prototype.hitIng = function () {
        this.myAni.interval = 1000 / 60;
        this.myAni.play(0, false, "hit");
        this.myAni.once(Laya.Event.COMPLETE, this, this.wait);
    };
    MonsterDisplay.prototype.wait = function () {
        this.myAni.play(0, true, "wait");
    };
    return MonsterDisplay;
}(HitObject_1.default));
exports.default = MonsterDisplay;
},{"../../game/MyAnimation":14,"../../ui/layaMaxUI":83,"./BattleDisplay":47,"./HitObject":57}],61:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PlayerHitObject = /** @class */ (function () {
    function PlayerHitObject() {
        /**
         * 攻击到敌人时回调
         */
        this.attackTargetHandler = null;
        /**
         * 攻击结束 回到原位回调
         */
        this.attackComHanlder = null;
        this.isAttack = false;
        this.targetHanlder = null;
        this.comHanlder = null;
        this.t1 = new Laya.Tween();
        this.t2 = new Laya.Tween();
        this.T1_TIME = 100;
        this.T2_TIME = 50;
        this.startX = 0;
        this.startY = 0;
        this.attackHO = null;
    }
    PlayerHitObject.prototype.setPlayer = function (p) {
        this.player = p;
        this.startX = this.player.player.x;
        this.startY = this.player.player.y;
        this.targetHanlder = new Laya.Handler(this, this.targetFun);
        this.comHanlder = new Laya.Handler(this, this.attackComFun);
    };
    /**
     * 播放攻击动作
     */
    PlayerHitObject.prototype.attack = function (hitObject) {
        this.attackHO = hitObject;
        this.t1.to(this.player.player, { x: 110, y: this.startY - 10 }, this.T1_TIME, null, this.targetHanlder);
        this.isAttack = true;
    };
    /**
     * 正进攻一半呢 忽然中弹死了
     * 在这里进行清理
     */
    PlayerHitObject.prototype.stop = function () {
        Laya.Tween.clearAll(this.player.player);
        this.player.x = this.startX;
        this.player.y = this.startY;
        this.isAttack = false;
    };
    PlayerHitObject.prototype.targetFun = function () {
        this.attackTargetHandler.runWith(this.attackHO);
        this.t2.to(this.player.player, { x: this.startX, y: this.startY }, this.T2_TIME, null, this.comHanlder);
    };
    PlayerHitObject.prototype.attackTarget = function () {
        if (this.attackHO.hitTest == false) {
            //如果这个时候 敌人消失了 比如飞天 遁地 就无法触发攻击
            return;
        }
        this.attackTargetHandler.runWith(this.attackHO);
        this.attackHO = null;
    };
    PlayerHitObject.prototype.attackComFun = function () {
        this.isAttack = false;
        this.attackComHanlder.run();
    };
    return PlayerHitObject;
}());
exports.default = PlayerHitObject;
},{}],62:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var BattleSession_1 = require("../session/BattleSession");
var SysConfig_1 = require("../config/SysConfig");
var App_1 = require("../../game/App");
var MyGameInit_1 = require("../MyGameInit");
var MyArray_1 = require("../../game/MyArray");
var BagListCell_1 = require("./BagListCell");
var HeChengEffect_1 = require("./HeChengEffect");
var MyEffect_1 = require("../effect/MyEffect");
var BagSession_1 = require("../session/BagSession");
var MyClip_1 = require("../../game/MyClip");
var Tips_1 = require("./Tips");
var LogType_1 = require("../session/LogType");
var RoleDialog = /** @class */ (function (_super) {
    __extends(RoleDialog, _super);
    function RoleDialog() {
        var _this = _super.call(this) || this;
        _this.bagSession = null;
        _this.tianFuSession = null;
        _this.dataSession = null;
        _this.battleSession = null;
        _this.isSellMode = false;
        _this.tabIndex_equipType = {};
        _this.sellEquipArr = new MyArray_1.default();
        _this.startPo = new Laya.Point();
        App_1.default.getInstance().injOne(_this);
        _this.list.itemRender = BagListCell_1.default;
        _this.list.renderHandler = new Laya.Handler(_this, _this.renderFun);
        _this.tab.selectHandler = new Laya.Handler(_this, _this.tabChangeFun);
        _this.list.selectHandler = new Laya.Handler(_this, _this.listSelectFun);
        _this.tabIndex_equipType[0] = BattleSession_1.EQUIP_TYPE.WEAPON;
        _this.tabIndex_equipType[1] = BattleSession_1.EQUIP_TYPE.HEAD;
        _this.tabIndex_equipType[2] = BattleSession_1.EQUIP_TYPE.BODY;
        _this.tabIndex_equipType[3] = BattleSession_1.EQUIP_TYPE.HORSE;
        _this.tabIndex_equipType[4] = BattleSession_1.EQUIP_TYPE.PET;
        _this.clearSelect();
        _this.heibox.visible = false;
        _this.sellpricebox.visible = false;
        _this.sellBtn.clickHandler = new Laya.Handler(_this, _this.sellFun);
        _this.equipBtn.clickHandler = new Laya.Handler(_this, _this.equipBtnFun);
        _this.refreshPlayer();
        _this.setCompare(null);
        _this.once(Laya.Event.UNDISPLAY, _this, _this.undisFun);
        return _this;
    }
    RoleDialog.prototype.undisFun = function () {
        Laya.stage.offAllCaller(this);
        Laya.timer.clearAll(this);
    };
    /**
     * 换装备
     */
    RoleDialog.prototype.equipBtnFun = function () {
        var e = this.list.selectedItem;
        if (e == null) {
            return;
        }
        this.bagSession.equipEquip(e);
        this.refresh();
        this.refreshPlayer();
    };
    RoleDialog.prototype.refreshPlayer = function () {
        this.bagSession.setPlayerEquip(this.playerMv);
        this.playerMv.wait.play();
        this.label0.text = this.bagSession.playerEquip.attack + "";
        this.label1.text = this.bagSession.playerEquip.crit + "";
        this.label2.text = this.bagSession.playerEquip.defense + "";
        this.label3.text = this.bagSession.playerEquip.move + "";
        this.label4.text = this.bagSession.playerEquip.hitPoint + "";
        this.refreshPet();
    };
    RoleDialog.prototype.refreshPet = function () {
        var equip = this.bagSession.playerEquipArr[BattleSession_1.EQUIP_TYPE.PET];
        if (equip == null) {
            this.dataSession.log(LogType_1.default.CODE_ERROR, this.dataSession.saveKey);
            return;
        }
        this.petImg.skin = "player/all/" + equip.id + ".png";
    };
    RoleDialog.prototype.zhengliFun = function () {
        this.bagSession.sortByType(this.tabIndex_equipType[this.tab.selectedIndex]);
        this.refresh();
    };
    RoleDialog.prototype.refresh = function () {
        this.tabChangeFun(this.tab.selectedIndex);
        this.refreshPet();
    };
    /**
     * 点击按钮变成售卖模式
     */
    RoleDialog.prototype.sellFun = function () {
        if (this.sellEquipArr.arr.length > 0) {
            //已经选中了某些装备
            var d = new layaMaxUI_1.ui.scene.SellDialogUI();
            d.popup();
            d.yesBtn.clickHandler = new Laya.Handler(this, this.sellYesFun);
            return;
        }
        this.sellEquipArr.clear();
        if (this.isSellMode) {
            this.isSellMode = false;
            this.heibox.visible = false;
            this.sellBox.mouseThrough = true;
            this.btnLabelImg.skin = "sence/btnfanmai.png";
            this.list.selectedIndex = -1;
        }
        else {
            this.sellBox.mouseThrough = false;
            this.isSellMode = true;
            this.heibox.visible = true;
            this.btnLabelImg.skin = "sence/quxiao.png";
            this.list.selectedIndex = -1;
        }
    };
    RoleDialog.prototype.sellYesFun = function () {
        for (var _i = 0, _a = this.sellEquipArr.arr; _i < _a.length; _i++) {
            var i = _a[_i];
            var sys = i.getSysItem();
            this.bagSession.bagMap.deleteData(sys.itemType, i, 1);
        }
        console.log(this.bagSession.bagMap);
        this.bagSession.changeGold(this.getSellPrice(), BagSession_1.GOLD_TYPE.SELL);
        this.sellEquipArr.clear();
        this.resetData();
        this.changePrice();
    };
    RoleDialog.prototype.resetData = function () {
        this.refresh();
    };
    /**
     * 改变售出价格
     */
    RoleDialog.prototype.changePrice = function () {
        if (this.sellEquipArr.arr.length > 0) {
            this.btnLabelImg.visible = false;
            this.sellpricebox.visible = true;
            this.priceFc.value = this.getSellPrice() + "";
        }
        else {
            this.sellpricebox.visible = false;
            this.btnLabelImg.visible = true;
            this.btnLabelImg.skin = "sence/quxiao.png";
            this.btnLabelImg.centerX = 0;
        }
    };
    RoleDialog.prototype.getSellPrice = function () {
        var a = 0;
        for (var _i = 0, _a = this.sellEquipArr.arr; _i < _a.length; _i++) {
            var i = _a[_i];
            var sys = App_1.default.getInstance().configManager.getConfig(MyGameInit_1.default.sys_item, i.id);
            a += sys.sellPrice;
        }
        return a;
    };
    RoleDialog.prototype.clearSelect = function () {
        this.logoImg.skin = null;
        this.selectImg.skin = "sence/meiyoukuang.png";
        this.l1.text = "0";
        this.l2.text = "0";
        this.l3.text = "0";
        this.l4.text = "0";
        this.l5.text = "0";
        this.gailvlabel.text = "";
        this.setCompare(null);
    };
    /**
     * 选中某个装备 显示他的详细数据
     * @param index
     */
    RoleDialog.prototype.listSelectFun = function (index) {
        if (this.isSellMode) {
            return;
        }
    };
    RoleDialog.prototype.setSelectEquip = function (index) {
        var equip = this.list.getItem(index);
        if (equip == null) {
            this.clearSelect();
            return;
        }
        var cell = this.list.getCell(index);
        MyEffect_1.default.clickEffect(cell.box);
        var sys = App_1.default.getInstance().configManager.getConfig(MyGameInit_1.default.sys_item, equip.id);
        this.logoImg.skin = "icons/" + equip.id + ".png";
        this.selectImg.skin = SysConfig_1.Res.getItemBorder(sys.itemQuality);
        this.l1.text = equip.attack + "";
        this.l2.text = equip.crit + "";
        this.l3.text = equip.defense + "";
        this.l4.text = equip.move + "";
        this.l5.text = equip.hitPoint + "";
        var sysc = App_1.default.getConfig(MyGameInit_1.default.sys_compose, sys.id);
        var suc = sysc.random + this.tianFuSession.mergeEquip;
        suc = Math.min(suc, 100);
        this.gailvlabel.text = "下一级合成成功率：" + suc + "%";
        this.setCompare(equip);
        //Laya.SoundManager.playSound("sound/fx_itemSelect.wav");
        App_1.default.getInstance().gameSoundManager.playEffect("sound/fx_itemSelect.wav");
    };
    RoleDialog.prototype.setCompare = function (equip) {
        if (equip == null) {
            this.al0.text = "";
            this.al1.text = "";
            this.al2.text = "";
            this.al3.text = "";
            this.al4.text = "";
        }
        else {
            var e = this.bagSession.compare(equip);
            this.setCompareColor(this.al0, e.attack);
            this.setCompareColor(this.al1, e.crit);
            this.setCompareColor(this.al2, e.defense);
            this.setCompareColor(this.al3, e.move);
            this.setCompareColor(this.al4, e.hitPoint);
        }
    };
    RoleDialog.prototype.setCompareColor = function (t, value) {
        if (value == 0) {
            t.text = "";
        }
        else {
            if (value < 0) {
                t.text = "(" + value + ")";
                t.color = "#ff0000";
            }
            else {
                t.text = "(+" + value + ")";
                t.color = "#00ff00";
            }
        }
    };
    /**
     * @param index 切换tab标签
     */
    RoleDialog.prototype.tabChangeFun = function (index) {
        this.list.selectedIndex = -1;
        var equipType = this.tabIndex_equipType[index];
        var a = this.dataMap.getData(equipType);
        var b = a.concat();
        b.length = 16;
        this.list.array = b;
        this.bagSession.deleteRed(equipType);
        if (equipType == BattleSession_1.EQUIP_TYPE.PET) {
            this.eggBox.visible = true;
            this.selectImg.visible = false;
            this.chuZhanSp.visible = true;
            this.zhuanBeiSp.visible = false;
        }
        else {
            this.eggBox.visible = false;
            this.selectImg.visible = true;
            this.chuZhanSp.visible = false;
            this.zhuanBeiSp.visible = true;
        }
    };
    /**
     * 售卖模式 点击装备
     */
    RoleDialog.prototype.clickFun = function (cell, index) {
        if (this.isSellMode == false) {
            this.setSelectEquip(index);
            return;
        }
        //售卖模式可以多选
        var item = this.list.getItem(index);
        if (item != null && item.isEquip) {
            return;
        }
        this.sellEquipArr.pushOrDelete(item);
        this.list.array = this.list.array;
        this.changePrice();
    };
    RoleDialog.prototype.renderFun = function (cell, index) {
        var e = this.list.getItem(index);
        var isSelect = false;
        if (this.isSellMode) {
            isSelect = this.sellEquipArr.contain(e);
        }
        else {
            isSelect = (this.list.selectedIndex == index);
        }
        cell.gridIndex = index;
        cell.setEquip(e, isSelect, this.isSellMode);
        cell.on(Laya.Event.CLICK, this, this.clickFun, [cell, index]);
        cell.on(Laya.Event.MOUSE_DOWN, this, this.mouseDown, [e, cell]);
    };
    RoleDialog.prototype.mouseDown = function (e, bagCell) {
        if (e == null) {
            return;
        }
        if (this.isSellMode) {
            return;
        }
        if (e.lv == BagSession_1.default.MAX_LV) {
            return;
        }
        this.startPo.x = Laya.stage.mouseX;
        this.startPo.y = Laya.stage.mouseY;
        Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.mouseMove, [e, bagCell]);
        Laya.stage.once(Laya.Event.MOUSE_UP, this, this.mouseUpFun2);
    };
    RoleDialog.prototype.mouseUpFun2 = function () {
        this.clearMouse();
    };
    /**
     * 必须移动一下 不然点一下就出效果了
     */
    RoleDialog.prototype.mouseMove = function (e, bagCell) {
        if (this.startPo.distance(Laya.stage.mouseX, Laya.stage.mouseY) < 20) {
            return;
        }
        this.clearMouse();
        this.startDragFun(e, bagCell);
    };
    RoleDialog.prototype.startDragFun = function (e, bagCell) {
        if (e == null) {
            return;
        }
        if (e.isEquip) {
            return;
        }
        var cell = new BagListCell_1.default();
        cell.gridIndex = bagCell.gridIndex;
        cell.setEquip(e, false, false);
        Laya.stage.addChild(cell);
        var p = bagCell.localToGlobal(new Laya.Point(0, 0));
        cell.x = p.x + cell.width / 2;
        cell.y = p.y + cell.height / 2;
        cell.startDrag();
        cell.anchorX = 0.5;
        cell.anchorY = 0.5;
        cell.zOrder = 1000;
        this.mouseEnabled = false;
        bagCell.alpha = 0.6;
        Laya.stage.once(Laya.Event.MOUSE_UP, this, this.mouseUpFun, [bagCell, cell]);
        Laya.stage.on(Laya.Event.MOUSE_OUT, this, this.mouseUpFun, [bagCell, cell]);
        this.canHeChengEffect(e);
    };
    /**
     * 播放可以合成的特效
     */
    RoleDialog.prototype.canHeChengEffect = function (e) {
        var a = this.list.cells;
        for (var _i = 0, a_1 = a; _i < a_1.length; _i++) {
            var i = a_1[_i];
            var ii = i;
            if (ii.equip && ii.equip.id == e.id) {
                if (e != ii.equip) {
                    ii.playEffect();
                }
            }
        }
    };
    RoleDialog.prototype.closeHeChengEffect = function () {
        var a = this.list.cells;
        for (var _i = 0, a_2 = a; _i < a_2.length; _i++) {
            var i = a_2[_i];
            var ii = i;
            ii.stopEffect();
        }
    };
    RoleDialog.prototype.mouseUpFun = function (oldCell, dragCell) {
        oldCell.alpha = 1;
        this.mouseEnabled = true;
        dragCell.stopDrag();
        dragCell.removeSelf();
        this.clearMouse();
        this.checkSynthetic(dragCell);
        this.closeHeChengEffect();
    };
    /**
     * 合成 碰撞检测 拖拽的方块碰到中心点
     */
    RoleDialog.prototype.checkSynthetic = function (cell) {
        for (var _i = 0, _a = this.list.cells; _i < _a.length; _i++) {
            var i = _a[_i];
            var p = i.localToGlobal(new Laya.Point(i.width / 2, i.height / 2));
            if (cell.hitTestPoint(p.x, p.y)) {
                this.checkGridIndex(cell.gridIndex, i["gridIndex"]);
                return;
            }
        }
    };
    /**
     * 检测能否合成
     * @param oldIndex
     * @param newIndex
     */
    RoleDialog.prototype.checkGridIndex = function (dragIndex, newIndex) {
        if (dragIndex == newIndex) {
            return;
        }
        var a = this.list.getItem(dragIndex);
        var b = this.list.getItem(newIndex);
        if (a == null || b == null) {
            return;
        }
        if (a.id != b.id) {
            return;
        }
        if (a.lv == BagSession_1.default.MAX_LV) {
            Tips_1.default.show("暂未开启" + BagSession_1.default.MAX_LV + "级装备，敬请期待");
            return;
        }
        var mergeEquip = this.bagSession.mergeEquip(a, b);
        var cell = this.list.getCell(newIndex);
        var p = cell.localToGlobal(new Laya.Point(cell.width / 2, cell.height / 2), true, this); //cell.width/2,cell.height/2
        //mergeEquip = null;
        if (mergeEquip == null) {
            //合成失败
            var fail = new layaMaxUI_1.ui.scene.MergeFailEffectViewUI();
            var myClip = new MyClip_1.default();
            //Laya.stage.addChild( fail );
            this.addChild(fail);
            myClip.setClip(fail.clip);
            myClip.removeSp = fail;
            myClip.playOnceAndRemove();
            fail.zOrder = 1001;
            fail.anchorX = fail.anchorY = 0.5;
            fail.pos(p.x, p.y);
        }
        else {
            var h = new HeChengEffect_1.default();
            h.anchorX = 0.5;
            h.anchorY = 0.5;
            this.addChild(h);
            //Laya.stage.addChild( h );
            h.pos(p.x, p.y);
            h.zOrder = 1001;
            h.play(a.getSysItem(), mergeEquip.getSysItem());
        }
        this.refresh();
    };
    RoleDialog.prototype.clearMouse = function () {
        Laya.stage.offAllCaller(this);
    };
    RoleDialog.prototype.setData = function (map) {
        this.dataMap = map;
        this.tab.selectedIndex = -1;
        this.tab.selectedIndex = 0;
    };
    RoleDialog.HAVE_AD_STAGE_5 = false;
    return RoleDialog;
}(layaMaxUI_1.ui.scene.RoleDialogUI));
exports.default = RoleDialog;
},{"../../game/App":5,"../../game/MyArray":15,"../../game/MyClip":16,"../../ui/layaMaxUI":83,"../MyGameInit":22,"../config/SysConfig":23,"../effect/MyEffect":24,"../session/BagSession":66,"../session/BattleSession":67,"../session/LogType":70,"./BagListCell":46,"./HeChengEffect":56,"./Tips":65}],63:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var RotationEffect = /** @class */ (function () {
    function RotationEffect() {
    }
    RotationEffect.prototype.rotation = function (s, ro) {
        this.s = s;
        this.ro = ro;
        Laya.timer.frameLoop(1, this, this.loopFun);
        s.once(Laya.Event.UNDISPLAY, this, this.undisFun);
    };
    RotationEffect.prototype.undisFun = function () {
        Laya.timer.clear(this, this.loopFun);
    };
    RotationEffect.prototype.loopFun = function () {
        this.s.rotation += this.ro;
    };
    RotationEffect.play = function (s, ro) {
        if (ro === void 0) { ro = 1; }
        var a = new RotationEffect();
        a.rotation(s, ro);
    };
    return RotationEffect;
}());
exports.default = RotationEffect;
},{}],64:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var App_1 = require("../../game/App");
var TimeLogo = /** @class */ (function () {
    function TimeLogo() {
        this.timeGoldSession = null;
        App_1.default.getInstance().injOne(this);
    }
    TimeLogo.prototype.setUI = function (a) {
        this.mainUI = a;
        this.mainUI.on(Laya.Event.UNDISPLAY, this, this.undisFun);
        Laya.timer.frameLoop(1, this, this.loopFun);
        //App.onEvent( MyEvent.TIME_GOLD_UPDATE , this, this.onTIME_GOLD_UPDATE );
    };
    TimeLogo.prototype.undisFun = function () {
        Laya.timer.clearAll(this);
        //App.getInstance().eventManager.off( MyEvent.TIME_GOLD_UPDATE , this, this.onTIME_GOLD_UPDATE );
    };
    TimeLogo.prototype.onTIME_GOLD_UPDATE = function () {
        //this.mainUI.goldFc.value = 
    };
    TimeLogo.prototype.loopFun = function () {
        var arr = this.timeGoldSession.getNowTime();
        this.mainUI.timeFc.value = this.getString(arr[0]) + " " + this.getString(arr[1]);
        this.mainUI.goldFc.value = this.timeGoldSession.gold + "";
        var ms = arr[2] * 1000 + arr[3];
        var endA = 360 * ((60000 - ms) / 60000) - 90;
        var a = this.mainUI.shanbox;
        a.graphics.clear();
        a.graphics.drawPie(a.width / 2 - 1, a.height / 2 + 2, 35, -90, endA, "#ffec1d");
    };
    TimeLogo.prototype.getString = function (value) {
        return value < 10 ? 0 + "" + value : value + "";
    };
    return TimeLogo;
}());
exports.default = TimeLogo;
},{"../../game/App":5}],65:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var Tips = /** @class */ (function (_super) {
    __extends(Tips, _super);
    function Tips() {
        return _super.call(this) || this;
    }
    Tips.show = function (text) {
        var t = new Tips();
        t.txt.text = text;
        Laya.stage.addChild(t);
        t.zOrder = 10002;
        t.centerX = 0;
        t.y = (Laya.stage.height - t.height) / 2 + 100;
        var tween = new Laya.Tween();
        tween.to(t, { y: 100 }, 6000, null, new Laya.Handler(null, Tips.tOver, [t]));
        var tw2 = new Laya.Tween();
        tw2.to(t, { alpha: 0 }, 500, null, null, 1000);
    };
    Tips.tOver = function (t) {
        t.removeSelf();
    };
    return Tips;
}(layaMaxUI_1.ui.scene.ErrorTipsUI));
exports.default = Tips;
},{"../../ui/layaMaxUI":83}],66:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Session_1 = require("../../game/Session");
var Map2Array_1 = require("../../game/Map2Array");
var BattleSession_1 = require("./BattleSession");
var SysConfig_1 = require("../config/SysConfig");
var App_1 = require("../../game/App");
var MyGameInit_1 = require("../MyGameInit");
var MyEvent_1 = require("../MyEvent");
var Tips_1 = require("../scene/Tips");
var RoleDialog_1 = require("../scene/RoleDialog");
var BagSession = /** @class */ (function (_super) {
    __extends(BagSession, _super);
    function BagSession() {
        var _this = _super.call(this) || this;
        _this.dataSession = null;
        _this.newerSession = null;
        _this.canAddred = true;
        _this.battleSession = null;
        _this.gold = 1;
        /**
         * 配置文件分组
         */
        _this.sysMap = new Map2Array_1.default();
        /**
         * 玩家背包
         */
        _this.bagMap = new Map2Array_1.default();
        /**
         * 玩家穿上装备后的所有属性
         */
        _this.playerEquip = new SysConfig_1.Equip();
        /**
         * 玩家装备数组
         */
        _this.playerEquipArr = [];
        /**
         * 红点
         */
        _this.redMap = {};
        _this.petSession = null;
        _this.tianFuSession = null;
        _this.buffEquip = new SysConfig_1.Equip();
        _this.badId = [];
        _this.initBagMap();
        _this.buffEquip.reset1();
        return _this;
    }
    BagSession.prototype.initBagMap = function () {
        this.bagMap.getData(BattleSession_1.EQUIP_TYPE.WEAPON);
        this.bagMap.getData(BattleSession_1.EQUIP_TYPE.BODY);
        this.bagMap.getData(BattleSession_1.EQUIP_TYPE.HEAD);
        this.bagMap.getData(BattleSession_1.EQUIP_TYPE.HORSE);
        this.bagMap.getData(BattleSession_1.EQUIP_TYPE.PET);
    };
    BagSession.prototype.onCONFIG_OVER = function () {
        var arr = App_1.default.getInstance().configManager.getDataArr(MyGameInit_1.default.sys_item);
        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
            var i = arr_1[_i];
            this.sysMap.setData(i.itemType, i);
        }
    };
    /**
     * 初始化9级装备
     */
    BagSession.prototype.onNEWER_INIT = function () {
        this.canAddred = false;
        this.initPlayerEquipNewer();
    };
    /**
     * 新手引导结束
     */
    BagSession.prototype.onNEWER_OVER = function () {
        //清空背包
        this.bagMap.map = {};
        this.initBagMap();
        this.playerEquipArr.length = 0;
        this.initPlayerEquip();
        this.canAddred = true;
    };
    /**
     *
     * @param value 金币改变
     */
    BagSession.prototype.changeGold = function (value, type) {
        if (value == null) {
            value = 0;
        }
        var old = this.gold;
        this.gold += value;
        App_1.default.sendEvent(MyEvent_1.default.GOLD_UPDATE, [old, this.gold, type]);
    };
    BagSession.prototype.initPlayerEquipNewer = function () {
        this.addPlayerEquip(BattleSession_1.EQUIP_TYPE.WEAPON, 9);
        this.addPlayerEquip(BattleSession_1.EQUIP_TYPE.BODY, 9);
        this.addPlayerEquip(BattleSession_1.EQUIP_TYPE.HEAD, 9);
        this.addPlayerEquip(BattleSession_1.EQUIP_TYPE.HORSE, 9);
        this.addPlayerEquip(BattleSession_1.EQUIP_TYPE.PET, 9);
        this.resetEquip();
    };
    /**
     * 进入游戏
     */
    BagSession.prototype.onDATA_FROM_SERVER = function () {
        this.resetEquip();
    };
    /**
     * 初始化玩家装备
     */
    BagSession.prototype.initPlayerEquip = function () {
        this.addPlayerEquip(BattleSession_1.EQUIP_TYPE.WEAPON, 1);
        this.addPlayerEquip(BattleSession_1.EQUIP_TYPE.BODY, 1);
        this.addPlayerEquip(BattleSession_1.EQUIP_TYPE.HEAD, 1);
        this.addPlayerEquip(BattleSession_1.EQUIP_TYPE.HORSE, 1);
        this.addPlayerEquip(BattleSession_1.EQUIP_TYPE.PET, 1);
        this.resetEquip();
    };
    /**
     * 添加某个部位的初始化装备
     * @param type
     */
    BagSession.prototype.addPlayerEquip = function (type, lv) {
        var a = this.getNewItem(type, lv);
        this.equipEquip(a);
        this.addEquipInBag(a);
    };
    /**
     * 装备装备
     * @param equip
     */
    BagSession.prototype.equipEquip = function (equip) {
        //卸载旧的
        var old = this.playerEquipArr[equip.type];
        if (old) {
            old.isEquip = false;
        }
        this.playerEquipArr[equip.type] = equip;
        equip.isEquip = true;
        App_1.default.sendEvent(MyEvent_1.default.EQUIP_UPDATE);
        this.resetEquip();
        Laya.timer.callLater(this, this.nextSaveRankFun);
    };
    BagSession.prototype.nextSaveRankFun = function () {
        this.dataSession.saveRank();
    };
    BagSession.prototype.compare = function (equip) {
        var old = this.playerEquip.copy();
        var e = this.playerEquip.copy();
        var noweq = this.playerEquipArr[equip.type];
        e.reduce(noweq);
        e.add(equip);
        e.reduce(old);
        return e;
    };
    BagSession.prototype.getBagNum = function (type) {
        var a = 0;
        var arr = this.bagMap.getData(type);
        for (var i = 0; i < arr.length; i++) {
            if (arr[i] == null) {
                a++;
            }
        }
        return a;
    };
    BagSession.prototype.haveNewEquip = function () {
        var arr = [BattleSession_1.EQUIP_TYPE.WEAPON, BattleSession_1.EQUIP_TYPE.HEAD, BattleSession_1.EQUIP_TYPE.BODY, BattleSession_1.EQUIP_TYPE.HORSE];
        if (this.petSession.eggNum > 0) {
            return true;
        }
        for (var _i = 0, arr_2 = arr; _i < arr_2.length; _i++) {
            var a = arr_2[_i];
            if (this.redMap[a] != null) {
                return true;
            }
        }
        return false;
    };
    BagSession.prototype.haveNewPet = function () {
        return this.petSession.eggNum > 0;
    };
    /**
     * @param equip 添加一件装备到背包里
     */
    BagSession.prototype.addEquipInBag = function (equip, toIndex) {
        if (toIndex === void 0) { toIndex = -1; }
        var arr = this.bagMap.getData(equip.type);
        arr.length = BagSession.BAG_LENGTH;
        if (toIndex == -1) {
            toIndex = this.getFirstNull(equip.type);
            if (toIndex == -1) {
                return false;
            }
        }
        arr[toIndex] = equip;
        this.addRed(equip.type);
        Laya.timer.callLater(this, this.nextFun2);
        App_1.default.sendEvent(MyEvent_1.default.EQUIP_LV_NUM, equip.lv);
        return true;
    };
    BagSession.prototype.getFirstNull = function (type) {
        var arr = this.bagMap.getData(type);
        arr.length = BagSession.BAG_LENGTH;
        for (var i = 0; i < arr.length; i++) {
            if (arr[i] == null) {
                return i;
            }
        }
        return -1;
    };
    BagSession.prototype.nextFun2 = function () {
        this.nextFun();
        App_1.default.sendEvent(MyEvent_1.default.BAG_UPDATE);
    };
    BagSession.prototype.isFull = function (type) {
        var arr = this.bagMap.getData(type);
        arr.length = BagSession.BAG_LENGTH;
        for (var i = 0; i < arr.length; i++) {
            if (arr[i] == null) {
                return false;
            }
        }
        return true;
    };
    BagSession.prototype.addRed = function (type) {
        if (this.newerSession.isNew) {
            return;
        }
        if (this.canAddred == false) {
            return;
        }
        this.redMap[type] = 1;
        App_1.default.sendEvent(MyEvent_1.default.RED_UPDATE);
    };
    BagSession.prototype.deleteRed = function (type) {
        this.redMap[type] = null;
        App_1.default.sendEvent(MyEvent_1.default.RED_UPDATE);
    };
    BagSession.prototype.nextFun = function () {
        this.dataSession.saveData();
    };
    BagSession.prototype.addEquipInBagBySys = function (sys) {
        var e = this.getEquipBySys(sys);
        return this.addEquipInBag(e);
    };
    BagSession.prototype.getEquipBySys = function (sys) {
        var e = new SysConfig_1.Equip();
        e.type = sys.itemType;
        e.lv = sys.itemLevel;
        e.id = sys.id;
        e.attack = sys.attack;
        e.defense = sys.defense;
        e.move = sys.move;
        e.hitPoint = sys.hitPoint;
        e.crit = sys.crit;
        return e;
    };
    /**
     * 重新计算玩家属性
     */
    BagSession.prototype.resetEquip = function () {
        this.playerEquip.reset();
        for (var _i = 0, _a = this.playerEquipArr; _i < _a.length; _i++) {
            var i = _a[_i];
            if (i == null) {
                continue;
            }
            this.playerEquip.add(i);
        }
        var buff = this.buffEquip.copy();
        var talent = this.tianFuSession.equip.copyPercent();
        buff.add(talent);
        this.playerEquip.multiply(buff);
        App_1.default.sendEvent(MyEvent_1.default.ATTRIBUTE_UPDATE);
    };
    BagSession.prototype.resetBuffByType = function (type) {
        var pname = "";
        if (type == BattleSession_1.EQUIP_TYPE.BUFF_ATT) {
            pname = "attack";
        }
        else if (type == BattleSession_1.EQUIP_TYPE.BUFF_CRIT) {
            pname = "crit";
        }
        else if (type == BattleSession_1.EQUIP_TYPE.BUFF_DEF) {
            pname = "defense";
        }
        else if (type == BattleSession_1.EQUIP_TYPE.BUFF_SPEED) {
            pname = "move";
        }
        this.buffEquip[pname] = 1;
    };
    BagSession.prototype.setBuffer = function (type) {
        var skillId = 0;
        var pname = "";
        if (type == BattleSession_1.EQUIP_TYPE.BUFF_ATT) {
            skillId = 3;
            pname = "attack";
        }
        else if (type == BattleSession_1.EQUIP_TYPE.BUFF_CRIT) {
            skillId = 4;
            pname = "crit";
        }
        else if (type == BattleSession_1.EQUIP_TYPE.BUFF_DEF) {
            skillId = 5;
            pname = "defense";
        }
        else if (type == BattleSession_1.EQUIP_TYPE.BUFF_SPEED) {
            skillId = 6;
            pname = "move";
        }
        var sysSkill = App_1.default.getConfig(MyGameInit_1.default.sys_skill, skillId);
        var per = sysSkill.skillStatus / 100;
        this.buffEquip[pname] += per;
        this.resetEquip();
    };
    /**
     * 合成装备
     * @param dragEquip1 拖拽的装备 他会被删除
     * @param changeEquip 数据被改变的装备
     * @return 返回null 代表合成失败
     */
    BagSession.prototype.mergeEquip = function (dragEquip, changeEquip) {
        if (dragEquip.lv == BagSession.MAX_LV || changeEquip.lv == BagSession.MAX_LV) {
            Tips_1.default.show("暂未开启" + BagSession.MAX_LV + "级装备，敬请期待");
            return null;
        }
        var maxLv = this.getMaxLv(changeEquip.type);
        var res = false;
        var sys = App_1.default.getConfig(MyGameInit_1.default.sys_compose, dragEquip.id);
        var r = Math.random() * 100;
        var resEquip = null;
        if (this.newerSession.isNew) {
            r = 0;
        }
        console.log("合成概率是:", r, sys.random);
        if (r < (sys.random + this.tianFuSession.mergeEquip)) {
            //合成成功
            var sysitem = App_1.default.getConfig(MyGameInit_1.default.sys_item, sys.item2);
            resEquip = this.getNewItem(dragEquip.type, sysitem.itemLevel);
            changeEquip.attack = resEquip.attack;
            changeEquip.defense = resEquip.defense;
            changeEquip.crit = resEquip.crit;
            changeEquip.hitPoint = resEquip.hitPoint;
            changeEquip.move = resEquip.move;
            changeEquip.lv = sysitem.itemLevel;
            changeEquip.id = sysitem.id;
            //Laya.SoundManager.playSound("sound/fx_itemGood.wav");
            App_1.default.getInstance().gameSoundManager.playEffect("sound/fx_itemGood.wav");
            if (this.newerSession.isNew == false) {
                App_1.default.sendEvent(MyEvent_1.default.MERGE);
                //RoleDialog.HAVE_AD_STAGE_5 == false && this.battleSession.stageNum == 5
                var target = 0;
                if (this.battleSession.stageNum <= 5) {
                    target = 20;
                }
                else if (this.battleSession.stageNum <= 10) {
                    target = 10;
                }
                else {
                    target = 5;
                }
                if ((Math.random() * 100) < target) {
                    App_1.default.dialog(MyGameInit_1.default.AD_MERGE_DIALOG, false, changeEquip);
                    RoleDialog_1.default.HAVE_AD_STAGE_5 = true;
                }
                else {
                    if (changeEquip.lv > maxLv) {
                        App_1.default.dialog(MyGameInit_1.default.SHARE_MERGE_DIALOG, false, changeEquip);
                    }
                }
            }
        }
        else {
            //Laya.SoundManager.playSound("sound/fx_itemBad.wav");
            App_1.default.getInstance().gameSoundManager.playEffect("sound/fx_itemBad.wav");
            this.addBadEquip(dragEquip.id);
            // Laya.timer.once( 500 , null , ()=>{
            // } );
            Tips_1.default.show("合成失败");
            App_1.default.dialog(MyGameInit_1.default.ZHUAN, true, dragEquip.id);
        }
        //无论合成成功还是失败 被拖拽的物品都消失
        this.bagMap.deleteData(dragEquip.type, dragEquip, 1);
        this.resetEquip();
        App_1.default.sendEvent(MyEvent_1.default.EQUIP_UPDATE);
        App_1.default.sendEvent(MyEvent_1.default.MERGE_EQUIP);
        Laya.timer.callLater(this, this.nextFun);
        if (changeEquip.isEquip) {
            this.dataSession.saveRank();
        }
        return resEquip;
    };
    BagSession.prototype.getMaxLv = function (type) {
        var arr = this.bagMap.getData(type);
        var elv = 0;
        for (var _i = 0, arr_3 = arr; _i < arr_3.length; _i++) {
            var a = arr_3[_i];
            if (a) {
                elv = Math.max(a.lv, elv);
            }
        }
        return elv;
    };
    BagSession.prototype.addBadEquip = function (id) {
        return;
        if (this.badId.length >= 6) {
            this.badId.shift();
        }
        this.badId.push(id + "");
    };
    BagSession.prototype.deleteBad = function (id) {
        var a = this.badId.indexOf(id + "");
        this.badId.splice(a, 1);
    };
    BagSession.prototype.getBadString = function () {
        return this.badId.join(",");
    };
    BagSession.prototype.setBadString = function (str) {
        if (str == null || str == "") {
            return;
        }
        this.badId = str.split(",");
    };
    BagSession.prototype.getNewItemByLv = function (lv) {
        //,EQUIP_TYPE.PET
        var typeArr = [BattleSession_1.EQUIP_TYPE.BODY, BattleSession_1.EQUIP_TYPE.WEAPON, BattleSession_1.EQUIP_TYPE.HEAD, BattleSession_1.EQUIP_TYPE.HORSE];
        var etype = App_1.default.RandomByArray(typeArr);
        return this.getNewItem(etype, lv);
    };
    /**
     * 生成新装备
     * @param type  部位
     * @param lv 等级 从1开始 根据配置表走
     */
    BagSession.prototype.getNewItem = function (type, lv) {
        var ressys = new SysConfig_1.Equip();
        ressys.type = type;
        ressys.lv = lv;
        var sys = this.sysMap.getData(type)[lv - 1];
        ressys.id = sys.id;
        ressys.attack = sys.attack;
        ressys.defense = sys.defense;
        ressys.crit = sys.crit;
        ressys.hitPoint = sys.hitPoint;
        ressys.move = sys.move;
        return ressys;
    };
    /**
     * @param type 得到主文件的属性名
     */
    BagSession.prototype.getMain = function (type) {
        if (type == BattleSession_1.EQUIP_TYPE.WEAPON) {
            return "attack";
        }
        else if (type == BattleSession_1.EQUIP_TYPE.HEAD) {
            return "defense";
        }
        else if (type == BattleSession_1.EQUIP_TYPE.BODY) {
            return "hitPoint";
        }
        else if (type == BattleSession_1.EQUIP_TYPE.HORSE) {
            return "move";
        }
    };
    /**
     * 根据类型整理背包
     * @param type
     */
    BagSession.prototype.sortByType = function (type) {
        var a = this.bagMap.getData(type);
        a.sort(this.sortFun);
    };
    BagSession.prototype.sortFun = function (a, b) {
        var alv = a ? a.lv : 0;
        var blv = b ? b.lv : 0;
        return blv - alv;
    };
    /**
     * 设定玩家形象
     * @param p
     */
    BagSession.prototype.setPlayerEquip = function (p) {
        var obj = {};
        obj[BattleSession_1.EQUIP_TYPE.HORSE] = ["ma", "horse"];
        obj[BattleSession_1.EQUIP_TYPE.HEAD] = ["kui", "head"];
        obj[BattleSession_1.EQUIP_TYPE.BODY] = ["jia", "equip"];
        obj[BattleSession_1.EQUIP_TYPE.WEAPON] = ["wuqi", "weapon"];
        for (var _i = 0, _a = this.playerEquipArr; _i < _a.length; _i++) {
            var i = _a[_i];
            if (i == null) {
                continue;
            }
            var arr = obj[i.type];
            if (arr == null) {
                continue;
            }
            var imgname = arr[0];
            var urlb = arr[1];
            if (obj[i.type] != null) {
                var img = p[imgname];
                img.skin = "player/all/" + i.id + ".png";
                if (i.type == BattleSession_1.EQUIP_TYPE.WEAPON) {
                    var item = App_1.default.getConfig(MyGameInit_1.default.sys_item, i.id);
                    if (item.effect == 0) {
                        p.guang.visible = false;
                    }
                    else {
                        p.guang.visible = true;
                        p.guang.skin = "player/all/e" + i.id + ".png";
                    }
                }
            }
        }
    };
    BagSession.setEquip = function (p, arr) {
        var obj = {};
        obj[BattleSession_1.EQUIP_TYPE.HORSE] = ["ma", "horse"];
        obj[BattleSession_1.EQUIP_TYPE.HEAD] = ["kui", "head"];
        obj[BattleSession_1.EQUIP_TYPE.BODY] = ["jia", "equip"];
        obj[BattleSession_1.EQUIP_TYPE.WEAPON] = ["wuqi", "weapon"];
        for (var _i = 0, arr_4 = arr; _i < arr_4.length; _i++) {
            var i = arr_4[_i];
            if (i == null || i == "") {
                5;
                continue;
            }
            var sysItem = App_1.default.getConfig(MyGameInit_1.default.sys_item, parseInt(i));
            var arr_5 = obj[sysItem.itemType];
            if (arr_5 == null) {
                continue;
            }
            var imgname = arr_5[0];
            var urlb = arr_5[1];
            var img = p[imgname];
            img.skin = "player/all/" + sysItem.id + ".png";
            if (sysItem.itemType == BattleSession_1.EQUIP_TYPE.WEAPON) {
                if (sysItem.effect == 0) {
                    p.guang.visible = false;
                }
                else {
                    p.guang.visible = true;
                    p.guang.skin = "player/all/e" + sysItem.id + ".png";
                }
            }
        }
    };
    /**
     * 随机损坏一件装备 不能是已经装备的
     */
    BagSession.prototype.destoryItem = function () {
        if (Math.random() * 100 < this.tianFuSession.deadLuck) {
            return null;
        }
        var arr = [];
        for (var i in this.bagMap.map) {
            var arr1 = this.bagMap.map[i];
            for (var _i = 0, arr1_1 = arr1; _i < arr1_1.length; _i++) {
                var j = arr1_1[_i];
                if (j && j.isEquip == false) {
                    arr.push(j);
                }
            }
        }
        if (arr.length == 0) {
            return null;
        }
        var e = App_1.default.RandomByArray(arr);
        this.bagMap.deleteData(e.type, e, 1);
        this.addBadEquip(e.id);
        Laya.timer.callLater(this, this.nextFun);
        return e;
    };
    /**
     * 得到玩家装备的平均等级
     */
    BagSession.prototype.getAverageEquipLv = function () {
        var allLv = 0;
        for (var _i = 0, _a = this.playerEquipArr; _i < _a.length; _i++) {
            var a = _a[_i];
            if (a && a.getSysItem().itemType != BattleSession_1.EQUIP_TYPE.PET) {
                allLv += a.getSysItem().itemLevel;
            }
        }
        var c = allLv / 4;
        if (c < 1) {
            return 1;
        }
        return c;
    };
    BagSession.prototype.getItemString = function () {
        this.initBagMap();
        var str = "";
        for (var i in this.bagMap.map) {
            if (i == null || i == "undefined") {
                continue;
            }
            var arr = this.bagMap.map[i];
            var str2 = "";
            var haveEquip = false;
            for (var ii in arr) {
                var e = arr[ii];
                if (e) {
                    str2 += e.id;
                    if (e.isEquip) {
                        haveEquip = true;
                        str2 = ii + "," + str2;
                    }
                }
                str2 += ",";
            }
            if (haveEquip) {
                str = str + str2 + ":";
            }
            else {
                return "";
            }
        }
        return str;
    };
    BagSession.prototype.setItemString = function (str) {
        this.initBagMap();
        var arr = str.split(":");
        for (var _i = 0, arr_6 = arr; _i < arr_6.length; _i++) {
            var i = arr_6[_i];
            var arr2 = i.split(",");
            var equipIndex = parseInt(arr2.shift());
            arr2.pop();
            var etype = this.getType(arr2);
            var earr = this.bagMap.getData(etype);
            earr.length = BagSession.BAG_LENGTH;
            for (var i_1 = 0; i_1 < arr2.length; i_1++) {
                var str_1 = arr2[i_1];
                if (str_1 == "") {
                    earr[i_1] = null;
                    continue;
                }
                var itemId = parseInt(str_1);
                var e = new SysConfig_1.Equip();
                e.id = itemId;
                var sys = e.getSysItem();
                earr[i_1] = e;
                e.type = sys.itemType;
                e.attack = sys.attack;
                e.crit = sys.crit;
                e.defense = sys.defense;
                e.hitPoint = sys.hitPoint;
                e.move = sys.move;
                e.lv = sys.itemLevel;
                e.isEquip = false;
                if (i_1 == equipIndex) {
                    e.isEquip = true;
                    this.playerEquipArr[e.type] = e;
                }
            }
        }
        this.resetEquip();
    };
    BagSession.prototype.getType = function (arr) {
        for (var _i = 0, arr_7 = arr; _i < arr_7.length; _i++) {
            var i = arr_7[_i];
            if (i != null && i != "") {
                var sys = App_1.default.getConfig(MyGameInit_1.default.sys_item, parseInt(i));
                return sys.itemType;
            }
        }
    };
    /**
     * 或者装备弹窗
     * @param arr
     */
    BagSession.prototype.getEquipDialog = function (arr, comHandler, closeOther) {
        if (closeOther === void 0) { closeOther = true; }
        App_1.default.dialog(MyGameInit_1.default.NewGetItemDialog, closeOther, arr);
        if (comHandler) {
            App_1.default.onceEvent(MyEvent_1.default.GET_GOLD_CLOSE, this, this.cItemFun, [comHandler]);
        }
    };
    BagSession.prototype.cItemFun = function (h) {
        h.run();
    };
    BagSession.prototype.nextGoldFun = function (c, a) {
        App_1.default.dialog(MyGameInit_1.default.NewGetItemDialog, c, a);
    };
    BagSession.prototype.getGoldAndMain = function () {
        App_1.default.getInstance().eventManager.once(MyEvent_1.default.GET_GOLD_CLOSE, this, this.goldFun);
    };
    BagSession.prototype.goldFun = function () {
        App_1.default.getInstance().openScene(MyGameInit_1.default.MainScene, true, MyGameInit_1.default.SelectStage);
    };
    /**
     * 天赋更新了
     */
    BagSession.prototype.onTALENT_UPDATE = function () {
        this.resetEquip();
    };
    BagSession.BAG_LENGTH = 16;
    BagSession.MAX_LV = 26;
    return BagSession;
}(Session_1.default));
exports.default = BagSession;
var GOLD_TYPE;
(function (GOLD_TYPE) {
    GOLD_TYPE[GOLD_TYPE["FLY_BOX"] = 0] = "FLY_BOX";
    GOLD_TYPE[GOLD_TYPE["GAME_OVER_NORMAL"] = 1] = "GAME_OVER_NORMAL";
    GOLD_TYPE[GOLD_TYPE["GAME_OVER_AD"] = 2] = "GAME_OVER_AD";
    GOLD_TYPE[GOLD_TYPE["TREASURE1"] = 3] = "TREASURE1";
    GOLD_TYPE[GOLD_TYPE["SELL"] = 4] = "SELL";
    GOLD_TYPE[GOLD_TYPE["TASK"] = 5] = "TASK";
    GOLD_TYPE[GOLD_TYPE["TIME_GOLD"] = 6] = "TIME_GOLD";
    GOLD_TYPE[GOLD_TYPE["KILL_BOSS"] = 7] = "KILL_BOSS";
    GOLD_TYPE[GOLD_TYPE["TREASURE2"] = 8] = "TREASURE2";
    GOLD_TYPE[GOLD_TYPE["KILL_MONSTER"] = 9] = "KILL_MONSTER";
    GOLD_TYPE[GOLD_TYPE["TIANFU"] = 10] = "TIANFU";
})(GOLD_TYPE = exports.GOLD_TYPE || (exports.GOLD_TYPE = {}));
},{"../../game/App":5,"../../game/Map2Array":11,"../../game/Session":20,"../MyEvent":21,"../MyGameInit":22,"../config/SysConfig":23,"../scene/RoleDialog":62,"../scene/Tips":65,"./BattleSession":67}],67:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Session_1 = require("../../game/Session");
var SysConfig_1 = require("../config/SysConfig");
var App_1 = require("../../game/App");
var MyGameInit_1 = require("../MyGameInit");
var MyEvent_1 = require("../MyEvent");
var MyArray_1 = require("../../game/MyArray");
var BattleSession = /** @class */ (function (_super) {
    __extends(BattleSession, _super);
    function BattleSession() {
        var _this = _super.call(this) || this;
        _this.newerSession = null;
        _this.sdkSession = null;
        _this.dataSession = null;
        /**
         * 过到第几关了 配置表里的id
         */
        _this.stageNum = 1;
        _this.noPlayerStage = new MyArray_1.default();
        /**
         * 过了几个boss 里面记录着他们的id
         */
        _this.killBossArr = new MyArray_1.default();
        return _this;
    }
    BattleSession.prototype.killBoss = function () {
        this.killBossArr.push(this.sys.id);
        this.dataSession.saveRank();
        App_1.default.sendEvent(MyEvent_1.default.KILL_BOSS);
    };
    BattleSession.prototype.getKillBoss = function () {
        return this.killBossArr.arr.join(",");
    };
    BattleSession.prototype.setKillBoss = function (v) {
        if (v == null || v == "" || v == "NaN") {
            return;
        }
        var a1 = v.split(",");
        for (var _i = 0, a1_1 = a1; _i < a1_1.length; _i++) {
            var a = a1_1[_i];
            this.killBossArr.push(parseInt(a));
        }
    };
    BattleSession.prototype.gameOver = function () {
        App_1.default.sendEvent(MyEvent_1.default.STAGE, this.sys.id);
        if (this.sys.stageType == 2) {
            return;
        }
        if (this.stageNum != this.sys.id) {
            return;
        }
        if (this.sys.nextId == 0) {
            return;
        }
        this.stageNum = this.sys.nextId;
        this.sdkSession.savePlayerData(this.stageNum);
        this.addNoPlayStage(this.stageNum);
        var arr = SysConfig_1.SysStageInfo.getStageInfo(this.sys.starID);
        if (this.stageNum == arr[4].id) {
            this.addNoPlayStage(arr[arr.length - 2].id);
        }
        if (this.stageNum == arr[9].id) {
            this.addNoPlayStage(arr[arr.length - 1].id);
        }
        this.dataSession.saveRank();
    };
    BattleSession.prototype.onNEWER_INIT = function () {
        this.addNoPlayStage(1);
    };
    BattleSession.prototype.addNoPlayStage = function (stageIndex) {
        this.noPlayerStage.push(stageIndex + "");
    };
    BattleSession.prototype.deleteNoPlayStage = function (stageIndex) {
        this.noPlayerStage.delete(stageIndex + "", 0);
    };
    BattleSession.prototype.getNoPlayStage = function () {
        return this.noPlayerStage.arr.join(",");
    };
    BattleSession.prototype.setNoPlayStage = function (str) {
        if (str == null) {
            this.noPlayerStage.arr = [];
            return;
        }
        this.noPlayerStage.arr = str.split(",");
    };
    BattleSession.prototype.setNewer = function () {
        var s = new SysConfig_1.SysStageInfo();
        s.bossGold = 1000;
        s.stageType = 1;
        s.starID = 1001;
        s.id = 1;
        s.monsterGroups = "20001,20005";
        s.monsterBoss = 20071;
        s.dropGold = "10,37";
        s.dropbuff = "4";
        s.collect = "1,3";
        s.collectDrop = 0;
        this.sys = s;
    };
    BattleSession.prototype.setSysStageInfo = function (sys) {
        this.sys = sys;
    };
    BattleSession.prototype.setMaxStage = function () {
        var sys = App_1.default.getConfig(MyGameInit_1.default.sys_stageinfo, this.sys.nextId);
        this.setSysStageInfo(sys);
    };
    BattleSession.prototype.getMaxStageNumber = function () {
        return this.stageNum;
    };
    /**
     * 得到随机一个怪物
     */
    BattleSession.prototype.getNewMonster = function () {
        var monsterId = App_1.default.RandomByArray(this.sys.monsterArr);
        return App_1.default.getConfig(MyGameInit_1.default.sys_enemy, monsterId);
    };
    /**
     * 得到boss的配置
     */
    BattleSession.prototype.getBossSys = function () {
        return App_1.default.getConfig(MyGameInit_1.default.sys_enemy, this.sys.monsterBoss);
    };
    BattleSession.prototype.isBossStage = function () {
        return this.sys.stageType == 2;
    };
    /**
     *
     * @param havePet 根据当前战场配置文件掉落装备
     */
    BattleSession.prototype.getEquip = function (havePet) {
        if (havePet === void 0) { havePet = true; }
        var elv = App_1.default.getRandom2(this.sys.lvMin, this.sys.lvMax);
        var typeArr = [EQUIP_TYPE.BODY, EQUIP_TYPE.WEAPON, EQUIP_TYPE.HEAD, EQUIP_TYPE.HORSE];
        if (havePet) {
            typeArr.push(EQUIP_TYPE.PET);
        }
        var etype = App_1.default.RandomByArray(typeArr);
        var sysi = SysConfig_1.SysItem.ItemMap[etype + "_" + elv];
        return sysi;
    };
    /**
     * 战场里掉的 可能是buff
     */
    BattleSession.prototype.getNewItem = function () {
        if (this.newerSession.isNew) {
            return SysConfig_1.SysItem.ItemMap[EQUIP_TYPE.WEAPON + "_" + 9];
        }
        //19 pet 5
        var typeArr = [EQUIP_TYPE.BODY, EQUIP_TYPE.WEAPON, EQUIP_TYPE.HEAD, EQUIP_TYPE.HORSE, EQUIP_TYPE.PET, EQUIP_TYPE.BUFF_ATT];
        var weightArr = [19, 19, 19, 19, 5, 19];
        var etype = App_1.default.RandomWeight(typeArr, weightArr); //App.RandomByArray( typeArr );
        if (etype == EQUIP_TYPE.BUFF_ATT) {
            //就是掉的buff
            var buffArr = [EQUIP_TYPE.BUFF_ATT, EQUIP_TYPE.BUFF_CRIT, EQUIP_TYPE.BUFF_DEF, EQUIP_TYPE.BUFF_SPEED];
            etype = App_1.default.RandomByArray(buffArr);
        }
        if (etype >= 10) {
            return etype;
        }
        return this.getEquip();
    };
    /**
     * 只有boss关用这个
     * 其他关是由时间控制的 不需要这样
     */
    BattleSession.prototype.getEquipArr = function () {
        var a = [];
        for (var i = 0; i < this.sys.collectDrop; i++) {
            a.push(this.getEquip(false));
        }
        return a;
    };
    BattleSession.prototype.openSelectStageDialog = function (stageId) {
        if (stageId == 1001) {
            App_1.default.dialog(MyGameInit_1.default.SelectStage, true, stageId);
        }
        else if (stageId == 2001) {
            App_1.default.dialog(MyGameInit_1.default.SelectStage2, true, stageId);
        }
        else if (stageId == 3001) {
            App_1.default.dialog(MyGameInit_1.default.SelectStage3, true, stageId);
        }
    };
    return BattleSession;
}(Session_1.default));
exports.default = BattleSession;
var EQUIP_TYPE;
(function (EQUIP_TYPE) {
    EQUIP_TYPE[EQUIP_TYPE["WEAPON"] = 2] = "WEAPON";
    EQUIP_TYPE[EQUIP_TYPE["HEAD"] = 3] = "HEAD";
    EQUIP_TYPE[EQUIP_TYPE["BODY"] = 4] = "BODY";
    EQUIP_TYPE[EQUIP_TYPE["HORSE"] = 5] = "HORSE";
    EQUIP_TYPE[EQUIP_TYPE["PET"] = 6] = "PET";
    EQUIP_TYPE[EQUIP_TYPE["CRIT"] = 7] = "CRIT";
    EQUIP_TYPE[EQUIP_TYPE["BUFF_CRIT"] = 10] = "BUFF_CRIT";
    EQUIP_TYPE[EQUIP_TYPE["BUFF_DEF"] = 11] = "BUFF_DEF";
    EQUIP_TYPE[EQUIP_TYPE["BUFF_ATT"] = 12] = "BUFF_ATT";
    EQUIP_TYPE[EQUIP_TYPE["BUFF_SPEED"] = 13] = "BUFF_SPEED";
})(EQUIP_TYPE = exports.EQUIP_TYPE || (exports.EQUIP_TYPE = {}));
},{"../../game/App":5,"../../game/MyArray":15,"../../game/Session":20,"../MyEvent":21,"../MyGameInit":22,"../config/SysConfig":23}],68:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Session_1 = require("../../game/Session");
var App_1 = require("../../game/App");
var MyEvent_1 = require("../MyEvent");
var MyGameInit_1 = require("../MyGameInit");
var LogType_1 = require("./LogType");
var Tips_1 = require("../scene/Tips");
var MyConfig_1 = require("../../MyConfig");
var DataSession = /** @class */ (function (_super) {
    __extends(DataSession, _super);
    function DataSession() {
        var _this = _super.call(this) || this;
        _this.bagSession = null;
        _this.petSession = null;
        _this.battleSession = null;
        _this.timeGoldSession = null;
        _this.newerSession = null;
        _this.setSession = null;
        _this.sdkSession = null;
        _this.tianFuSession = null;
        _this.jsonObj = {};
        /**
         * 数据是否准备完毕 有可能还没准备完
         */
        _this.dataIsInit = false;
        _this.openid = "";
        _this.regArr = [];
        App_1.default.onEvent(MyEvent_1.default.LOGIN, _this, _this.loginFun);
        return _this;
        //Laya.loader.on(Laya.Event.ERROR,this,this.loadErrorFun);        
    }
    DataSession.prototype.loadErrorFun = function (url) {
        this.log(LogType_1.default.LOAD_ERROR, url);
    };
    DataSession.prototype.onWX_ON_HIDE = function () {
        this.saveData();
        if (this.newerSession.isNew) {
            this.log(LogType_1.default.WX_HIDE);
        }
    };
    DataSession.prototype.onWX_ON_SHOW = function () {
        if (this.newerSession.isNew) {
            this.log(LogType_1.default.WX_SHOW);
        }
    };
    DataSession.prototype.loginFun = function () {
        //新的登录逻辑
        if (MyConfig_1.default.PLATFORM == 0) {
            // if (Laya.Browser.window.wx) {
            //     Laya.Scene.showLoadingPage();
            //     this.loginGame511Wx();
            // } else {
            //     this.localLogin({});
            // }
            this.localLogin({});
        }
        else if (MyConfig_1.default.PLATFORM == DataSession.WX) {
            Laya.Scene.showLoadingPage();
            this.loginWXServer();
        }
        else {
            App_1.default.getInstance().openScene(MyGameInit_1.default.TestScene);
        }
    };
    DataSession.prototype.loginGame511Wx = function () {
        var _this = this;
        console.log(" loginGame511Wx ");
        //this.sdkSession.
        var obj = {};
        obj.success = function (res) {
            //console.log(res);
            //{errMsg: "login:ok", code: "021Sm5IE00bm2i2yH5JE0SUUHE0Sm5Ib"}
            var http = new Laya.HttpRequest();
            //let url:string = MyConfig.IP + "gamex2/login";            
            var httpdata = "scode=" + 1 + "&jscode=" + res.code;
            http.send(url + "?" + httpdata, null, "GET");
            //console.log( httpdata );
            http.once(Laya.Event.COMPLETE, _this, _this.loginWXFun, [http]);
            http.once(Laya.Event.ERROR, _this, _this.loginErrorFun, [http]);
            http.once(Laya.Event.PROGRESS, _this, _this.loginProFun, [http]);
        };
        Laya.Browser.window.wx.login(obj);
    };
    DataSession.prototype.loginWXFun = function (http, res) {
        //记录每个http登陆的状态
        //console.log("ccccccccccc" ,  saveKey );
        // let j:any = JSON.parse(res);       
        // this.openid= j.openid;
        // console.log("openid = ", j.openid);
        //{session_key: "aexVNsXkq6CK+D0VUxyJtg==", openid: "oJjEa48zjMN9b8wBwYODXe29-_z4"}
        // this.localLogin(res);
        this.localLogin({});
        //this.saveKey = j.userInfo.userId;
        // //console.log( this.saveKey );
        // this.startHeart();
        // this.requestData();
        // this.loginLogStatus( http.http.status );
    };
    DataSession.prototype.loginWXServer = function () {
        var _this = this;
        var obj = {};
        obj.success = function (res) {
            _this.loginMyServer(res);
        };
        //if( Laya.Browser.onQGMiniGame ){
        Laya.Browser.window.qg.login(obj);
        // }else{
        //     Laya.Browser.window.wx.login( obj );
        // }
    };
    DataSession.prototype.localLogin = function (res) {
        this.saveKey = DataSession.local_name;
        this.startHeart();
        this.dataIsInit = true;
        var str = Laya.LocalStorage.getItem(this.saveKey);
        if (!str || str == "0" || str == "") {
            //新玩家
            this.log(LogType_1.default.NEW_PLAYER, this.saveKey);
            App_1.default.sendEvent(MyEvent_1.default.NEWER_INIT);
            App_1.default.getInstance().openScene(MyGameInit_1.default.NewerScene);
        }
        else if (str == "1") {
            App_1.default.sendEvent(MyEvent_1.default.SECOND_NEW);
            App_1.default.getInstance().openScene(MyGameInit_1.default.MainScene);
        }
        else {
            console.log("本地数据是:");
            console.log(str);
            this.log(LogType_1.default.PLAYER_DATA, str);
            this.jsonObj = JSON.parse(str);
            this.setSessionData();
            App_1.default.sendEvent(MyEvent_1.default.DATA_FROM_SERVER);
            App_1.default.getInstance().openScene(MyGameInit_1.default.MainScene);
        }
    };
    DataSession.prototype.loginMyServer = function (res) {
        var j = JSON.stringify(res.data);
        if (res.token) {
            var http = new Laya.HttpRequest();
            //let url:string = MyConfig.IP + "gamex2/login";            
            var httpdata = "scode=" + 3 + "&jscode=" + res.token;
            http.send(url + "?" + httpdata, null, "GET");
            //console.log( httpdata );
            http.once(Laya.Event.COMPLETE, this, this.loginMyServerFun, [http]);
            http.once(Laya.Event.ERROR, this, this.loginErrorFun, [http]);
            http.once(Laya.Event.PROGRESS, this, this.loginProFun, [http]);
        }
        else {
            console.log("登陆失败:", res);
        }
    };
    DataSession.prototype.loginProFun = function (http, e) {
        this.loginLogStatus(http.http.status);
    };
    DataSession.prototype.loginErrorFun = function (http, e) {
        this.loginLogStatus(http.http.status);
    };
    DataSession.prototype.loginMyServerFun = function (http, saveKey) {
        //记录每个http登陆的状态
        //console.log("ccccccccccc" ,  saveKey );
        var j = JSON.parse(saveKey);
        //console.log( "dddd" , saveKey.userInfo.userId );
        console.log("eeee", j);
        this.saveKey = j.userInfo.userId;
        //console.log( this.saveKey );
        this.startHeart();
        this.requestData();
        this.loginLogStatus(http.http.status);
    };
    DataSession.prototype.loginLogStatus = function (value) {
        this.log(LogType_1.default.LOGIN_STATUS, value);
    };
    /**
     * 请求服务器 得到最新数据
     * 这个一般就登陆时请求一次
     */
    DataSession.prototype.requestData = function () {
        App_1.default.http(MyConfig_1.default.IP + "gamex2/gamedata", "skey=" + this.saveKey, "post", this, this.requestDataFun);
    };
    DataSession.prototype.requestDataFun = function (str) {
        this.dataIsInit = true;
        if (str == "0" || str == "") {
            //新玩家
            this.log(LogType_1.default.NEW_PLAYER, this.saveKey);
            App_1.default.sendEvent(MyEvent_1.default.NEWER_INIT);
            App_1.default.getInstance().openScene(MyGameInit_1.default.NewerScene);
        }
        else if (str == "1") {
            App_1.default.sendEvent(MyEvent_1.default.SECOND_NEW);
            App_1.default.getInstance().openScene(MyGameInit_1.default.MainScene);
        }
        else {
            console.log("服务器数据是:");
            console.log(str);
            this.log(LogType_1.default.PLAYER_DATA, str);
            this.jsonObj = JSON.parse(str);
            this.setSessionData();
            App_1.default.sendEvent(MyEvent_1.default.DATA_FROM_SERVER);
            App_1.default.getInstance().openScene(MyGameInit_1.default.MainScene);
        }
    };
    DataSession.prototype.requestSaveData = function (isImportant) {
        if (isImportant === void 0) { isImportant = false; }
        if (this.saveKey == DataSession.local_name) {
            Laya.LocalStorage.setItem(this.saveKey, JSON.stringify(this.jsonObj));
            return;
        }
        //console.log("this.saveKey == " , this.saveKey);        
        if (isImportant) {
            App_1.default.http(MyConfig_1.default.IP + "gamex2/save2", "skey=" + this.saveKey + "&gamedata=" + JSON.stringify(this.jsonObj) + "&type=1&num=" + this.jsonObj.stageNum, "post", this, this.requestSaveDataFun);
        }
        else {
            App_1.default.http(MyConfig_1.default.IP + "gamex2/save2", "skey=" + this.saveKey + "&gamedata=" + JSON.stringify(this.jsonObj) + "&type=0&num=0", "post", this, this.requestSaveDataFun);
        }
    };
    /**
     * 记录到地图
     */
    DataSession.prototype.save1 = function () {
        if (this.saveKey == DataSession.local_name) {
            Laya.LocalStorage.setItem(this.saveKey, "1");
            return;
        }
        App_1.default.http(MyConfig_1.default.IP + "gamex2/save2", "skey=" + this.saveKey + "&gamedata=1&type=0&num=0", "post");
    };
    DataSession.prototype.requestSaveDataFun = function (str) {
        //无视这个方法
        console.log("存储成功= " + str);
    };
    DataSession.prototype.saveData = function (isImportant) {
        if (isImportant === void 0) { isImportant = false; }
        if (this.dataIsInit == false) {
            return;
        }
        if (this.newerSession.isNew) {
            return;
        }
        this.resetJsonObj();
        if (this.jsonObj.item == "") {
            this.log(LogType_1.default.ERROR_ITEM_NULL);
            console.log("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
            return;
        }
        this.requestSaveData(isImportant);
    };
    DataSession.prototype.clearData = function () {
        this.dataIsInit = false;
        if (this.saveKey == DataSession.local_name) {
            Laya.LocalStorage.setItem(this.saveKey, "0");
            return;
        }
        App_1.default.http(MyConfig_1.default.IP + "gamex2/save2", "skey=" + this.saveKey + "&gamedata=0&type=0&num=0", "post", this, this.clearFun);
    };
    DataSession.prototype.clearFun = function () {
        Tips_1.default.show("已经清档，请您重启游戏");
    };
    /**
     * 自动注册属性
     * @param target
     * @param pName
     */
    DataSession.prototype.regAtt = function (a) {
        this.regArr.push(a);
    };
    /**
     * 从json里得到需要的数据
     */
    DataSession.prototype.setSessionData = function () {
        this.bagSession.gold = this.jsonObj.gold;
        if (this.jsonObj.gold == null) {
            this.bagSession.gold = 0;
        }
        this.petSession.eggNum = this.jsonObj.egg;
        this.battleSession.stageNum = this.jsonObj.stageNum;
        this.bagSession.setItemString(this.jsonObj.item);
        this.timeGoldSession.endTime = this.jsonObj.timeGoldEndTime;
        this.timeGoldSession.reward_min = this.jsonObj.timeGoldReward_min;
        this.timeGoldSession.gold = this.jsonObj.timeGoldGold;
        this.newerSession.isNew = this.jsonObj.isNew;
        this.setSession.setMusic(this.jsonObj.music);
        this.setSession.setSound(this.jsonObj.sound);
        this.battleSession.setNoPlayStage(this.jsonObj.noPlayStage);
        this.sdkSession.shareTime = this.jsonObj.shareTime ? this.jsonObj.shareTime : 0;
        this.sdkSession.shareTimes = this.jsonObj.shareTimes ? this.jsonObj.shareTimes : 0;
        this.tianFuSession.setLvString(this.getString(this.jsonObj.talentStr));
        this.tianFuSession.lvTimes = this.getNumber(this.jsonObj.talentLv);
        this.battleSession.setKillBoss(this.jsonObj.killBoss);
        this.bagSession.setBadString(this.jsonObj.bad);
        console.log("分享的数据是:", this.sdkSession.shareTime, this.sdkSession.shareTimes);
        for (var _i = 0, _a = this.regArr; _i < _a.length; _i++) {
            var a = _a[_i];
            var key = App_1.default.getInstance().getInjectionName(a);
            a.setData(this.jsonObj[key]);
        }
        if (this.jsonObj.loginTime == null) {
            App_1.default.sendEvent(MyEvent_1.default.NEW_DAY);
        }
        else {
            var last = new Date(this.jsonObj.loginTime);
            var now = new Date();
            if (now.getDate() != last.getDate()) {
                App_1.default.sendEvent(MyEvent_1.default.NEW_DAY);
            }
        }
        this.timeFun(0);
        this.jsonObj.loginTime = Date.now();
        //this.jsonObj.loginTime = Date.now() - 24 * 60 * 60 * 1000;
    };
    DataSession.prototype.timeFun = function (send) {
        if (send == 1) {
            App_1.default.sendEvent(MyEvent_1.default.NEW_DAY);
        }
        var now = new Date();
        var h = 60 * 60 * 1000;
        var time = 24 * h - now.getHours() * h - now.getMinutes() * 60 * 1000 - now.getSeconds() * 1000;
        Laya.timer.once(time + 1000, this, this.timeFun, [1]);
    };
    DataSession.prototype.getNumber = function (value) {
        if (value == null) {
            return 0;
        }
        return value;
    };
    DataSession.prototype.getString = function (value) {
        if (value == null) {
            return null;
        }
        if (value == "NaN") {
            return null;
        }
        return value;
    };
    /**
     * 从各个模块 得到要存储的数据
     */
    DataSession.prototype.resetJsonObj = function () {
        this.jsonObj.gold = this.bagSession.gold;
        if (this.bagSession.gold == null) {
            this.jsonObj.gold = 0;
        }
        this.jsonObj.egg = this.petSession.eggNum;
        this.jsonObj.stageNum = this.battleSession.stageNum;
        this.jsonObj.item = this.bagSession.getItemString();
        this.jsonObj.timeGoldEndTime = this.timeGoldSession.endTime;
        this.jsonObj.timeGoldReward_min = this.timeGoldSession.reward_min;
        this.jsonObj.timeGoldGold = this.timeGoldSession.gold;
        this.jsonObj.gamever = DataSession.GAME_VER;
        this.jsonObj.isNew = this.newerSession.isNew;
        this.jsonObj.music = this.setSession.music;
        this.jsonObj.sound = this.setSession.sound;
        this.jsonObj.platform = MyConfig_1.default.PLATFORM;
        this.jsonObj.noPlayStage = this.battleSession.getNoPlayStage();
        this.jsonObj.shareTime = this.sdkSession.shareTime;
        this.jsonObj.shareTimes = this.sdkSession.shareTimes;
        this.jsonObj.talentStr = this.tianFuSession.getLvString();
        this.jsonObj.talentLv = this.tianFuSession.lvTimes;
        this.jsonObj.killBoss = this.battleSession.getKillBoss();
        this.jsonObj.bad = this.bagSession.getBadString();
        for (var _i = 0, _a = this.regArr; _i < _a.length; _i++) {
            var a = _a[_i];
            var key = App_1.default.getInstance().getInjectionName(a);
            this.jsonObj[key] = a.getData();
        }
    };
    DataSession.prototype.startHeart = function () {
        Laya.timer.loop(60 * 1000, this, this.heartFun);
    };
    DataSession.prototype.heartFun = function () {
        //this.log( LogType.HEART );
    };
    DataSession.prototype.log = function (type, content) {
        if (content === void 0) { content = ""; }
        // if (this.saveKey == DataSession.local_name) {
        //     console.log("log " + this.saveKey)
        //     return;
        // }
        // console.log("log" + type);
        // var arr: Array<any> = [];
        // arr.push(Laya.Browser.now());
        // arr.push(DataSession.GAME_VER);
        // arr.push(this.saveKey);
        // arr.push(MyConfig.PLATFORM);
        // arr.push(DataSession.ONLY_ID);
        // arr.push(type);
        // arr.push(content);
        // arr.push(this.sdkSession.wxName);
        // let str = arr.join("\t");
        // var str:String = "";
        // for( var i:number = 0; i < arr.length; i++ ){
        //     str += ( arr[i] + "\t" );
        // }
        // App.http(MyConfig.IP + "gamex2/gamelog", "log=" + str, "post");        
        App_1.default.sendRecord(type);
    };
    DataSession.staticLog = function (type, content) {
        if (content === void 0) { content = ""; }
        // if (DataSession.GAME_VER == "5.0.3") {
        //     return;
        // }
        // if (Laya.Browser.onMiniGame == false) {
        //     return;
        // }
        // var arr: Array<any> = [];
        // arr.push(Laya.Browser.now());
        // arr.push(DataSession.GAME_VER);
        // arr.push("have no savekey");
        // arr.push(1);
        // arr.push(DataSession.ONLY_ID);
        // arr.push(type);
        // arr.push(content);
        // var str: String = "";
        // for (var i: number = 0; i < arr.length; i++) {
        //     str += (arr[i] + "\t");
        // }
        // App.http(MyConfig.IP + "gamex2/gamelog", "log=" + str, "post");
    };
    DataSession.prototype.saveRank = function () {
        if (this.saveKey == DataSession.local_name) {
            return;
        }
        if (this.newerSession.isNew) {
            return;
        }
        if (Laya.Browser.onMiniGame == false) {
            var score_1 = this.getScore();
            var item_1 = this.getItem();
            App_1.default.http(MyConfig_1.default.IP + "gamex2/saveRank", "skey=" + this.saveKey + "&name=骑马合成冲" + "&url=sence/action.png" + "&scorestr=" + score_1 + "&items=" + item_1, "post");
            return;
        }
        if (this.sdkSession.haveRight == false) {
            return;
        }
        var score = this.getScore();
        var item = this.getItem();
        console.log("排行榜数据", score, item);
        App_1.default.http(MyConfig_1.default.IP + "gamex2/saveRank", "skey=" + this.saveKey + "&name=" + this.sdkSession.wxName + "&url=" + this.sdkSession.wxHead + "&scorestr=" + score + "&items=" + item, "post");
    };
    DataSession.prototype.getItem = function () {
        var s = "";
        for (var _i = 0, _a = this.bagSession.playerEquipArr; _i < _a.length; _i++) {
            var a = _a[_i];
            if (a) {
                s += (a.id + ",");
            }
        }
        return s;
    };
    DataSession.prototype.getRank = function (caller, listener) {
        if (this.saveKey == DataSession.local_name) {
            return;
        }
        App_1.default.http(MyConfig_1.default.IP + "gamex2/getRank", "skey=" + this.saveKey + "&st=0&et=50", "GET", caller, listener);
    };
    DataSession.prototype.getScore = function () {
        var v = 0;
        for (var _i = 0, _a = this.bagSession.playerEquipArr; _i < _a.length; _i++) {
            var a = _a[_i];
            if (a) {
                v += a.lv;
            }
        }
        console.log("playerarr:", this.bagSession.playerEquipArr);
        v += this.battleSession.stageNum;
        var a1 = this.battleSession.killBossArr.arr;
        console.log("已过boss:", a1);
        for (var _b = 0, a1_1 = a1; _b < a1_1.length; _b++) {
            var b = a1_1[_b];
            v += parseInt(b);
        }
        console.log("得到排行榜积分", v);
        return v;
    };
    DataSession.TEST = 0;
    DataSession.WX = 1;
    DataSession.QQ = 2;
    DataSession.DOUYIN = 3;
    DataSession.GAME_VER = "5.0.4";
    DataSession.START_TIME = 0;
    DataSession.ONLY_ID = Math.random();
    DataSession.local_name = "test_0500";
    return DataSession;
}(Session_1.default));
exports.default = DataSession;
},{"../../MyConfig":3,"../../game/App":5,"../../game/Session":20,"../MyEvent":21,"../MyGameInit":22,"../scene/Tips":65,"./LogType":70}],69:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Session_1 = require("../../game/Session");
var App_1 = require("../../game/App");
var GameEvent_1 = require("../../game/GameEvent");
var MyGameInit_1 = require("../MyGameInit");
var MyArray_1 = require("../../game/MyArray");
var LeuokSession = /** @class */ (function (_super) {
    __extends(LeuokSession, _super);
    function LeuokSession() {
        var _this = _super.call(this) || this;
        _this.newerSession = null;
        _this.sdkSession = null;
        // private box: ui.youzi.YouZiBoxUI = null;
        _this.dataSession = null;
        _this.showWall = false;
        _this.wallTimes = 0;
        _this.closeBanner = new MyArray_1.default();
        //return;
        App_1.default.onceEvent(GameEvent_1.default.ENTER_SCENE, _this, _this.enterFun);
        return _this;
        // App.onEvent(MyEvent.GOLD_UPDATE, this, this.goldFun);
    }
    LeuokSession.prototype.goldFun = function (oldGold, newGold, type) {
        // let o: any = {};
        // o.reason = type;
        // o.moneyType = 2;
        // o.oldMoney = oldGold;
        // o.newMoney = newGold;
        // this.getRoot().money(o);
    };
    LeuokSession.prototype.enterFun = function (url) {
        // this.getRoot().adLogin({ "nickName": this.sdkSession.wxName });
        this.loadFun();
    };
    LeuokSession.prototype.loadFun = function () {
        // this.initAll();
        App_1.default.onEvent(GameEvent_1.default.OPEN_DIALOG, this, this.openDialogFun2);
        App_1.default.onEvent(GameEvent_1.default.CLOSE_DIALOG, this, this.closeDialogFun2);
    };
    LeuokSession.prototype.openDialogFun2 = function (url) {
        this.setNowUrl(url, 1);
    };
    LeuokSession.prototype.closeDialogFun2 = function (url) {
        if (this.closeBanner.contain(url)) {
            this.sdkSession.hideBanner();
            this.closeBanner.clear();
        }
        Laya.timer.callLater(this, this.nextFun);
    };
    // public win;
    LeuokSession.prototype.initAll = function () {
        // this.box = new ui.youzi.YouZiBoxUI();
        // this.box.height = Laya.stage.height;
        // this.box.mouseThrough = true;
        // Laya.stage.addChild(this.box);
        // YouziCenter.getInstance().initYouzi("wxb45b791f8e76153d", "", "1.00.00");
        // YouziCenter.getInstance().createMainPush(this.box.zhuTui, { x: 0, y: 0 });
        // YouziCenter.getInstance().createSlideButton(this.box.chouTi, { x: 80, y: 0, width: 80, height: 74 }, true, true);
        // this.win = YouziCenter.getInstance().createSlideWindowUI(this.box, { x: 0, y: 250 }, true);//150 {x:0,y:628}
        // this.win.btnSLideClose.zOrder = 10000;
        // YouziCenter.getInstance().createBottomBanner(this.box.bottomBox, { x: (Laya.stage.width - 640) / 2, y: 0 });
        // //let xx = (750 - 530) / 2;
        // //let yy = ( Laya.stage.height - 680 ) / 2;
        // //this.wall = YouziCenter.getInstance().createMoreGameUI(this.box , {x:xx,y:yy} );
        // //App.onEvent( GameEvent.OPEN_DIALOG ,this,this.openDialogFun );
        // App.onEvent(GameEvent.ENTER_SCENE, this, this.enterSceneFun);
        // //App.onEvent( GameEvent.CLOSE_DIALOG ,this,this.closeDialogFun );
        // //App.onEvent( GameEvent.OPEN_SCENE_START, this,this.openSceneStartFun );
        // if (this.newerSession.isNew) {
        //     this.setNowUrl("", 0);
        // }
    };
    LeuokSession.prototype.openSceneStartFun = function (url) {
        if (url == MyGameInit_1.default.MainScene && App_1.default.getInstance().nowSceneUrl == MyGameInit_1.default.BattleScene) {
            this.showWall = true;
        }
    };
    LeuokSession.prototype.closeDialogFun = function (url) {
        console.log("关闭窗口:", url);
        if (this.closeBanner.contain(url)) {
            this.sdkSession.hideBanner();
            this.closeBanner.clear();
        }
        Laya.timer.callLater(this, this.nextFun);
        if (url == MyGameInit_1.default.RankDialog) {
            Laya.timer.callLater(this, this.nextCloseFun);
        }
        else if (url == MyGameInit_1.default.TimeGoldDialog) {
            Laya.timer.callLater(this, this.nextCloseFun);
        }
    };
    LeuokSession.prototype.nextCloseFun = function () {
        if (this.wallTimes >= 2) {
            return;
        }
        var ddd = this.wall.getChildByName("maskButton");
        ddd.scale(2, 2);
        this.wall.showMoreGameUI();
        this.wallTimes++;
        this.wall.visible = true;
    };
    LeuokSession.prototype.nextFun = function () {
        if (Laya.Dialog.manager.numChildren == 0) {
            this.setNowUrl(App_1.default.getInstance().nowSceneUrl, 3);
        }
        else {
            for (var i = 0; i < Laya.Dialog.manager.numChildren; i++) {
                var max = Laya.Dialog.manager.numChildren - 1;
                var sp = Laya.Dialog.manager.getChildAt(max - i);
                if (sp instanceof Laya.Dialog) {
                    this.setNowUrl(sp.url, 3);
                    return;
                }
            }
        }
    };
    LeuokSession.prototype.enterSceneFun = function (url) {
        this.setNowUrl(url, 2);
    };
    LeuokSession.prototype.openDialogFun = function (url) {
        this.setNowUrl(url, 1);
    };
    LeuokSession.prototype.heziFun = function () {
        //this.setNowUrl();
    };
    LeuokSession.prototype.setNowUrl = function (url, type) {
        if (type === void 0) { type = 0; }
        // Laya.stage.addChild(this.box);
        // this.box.zOrder = 1000;
        // for (let a: number = 0; a < this.box.numChildren; a++) {
        //     let sp: Laya.Sprite = <any>this.box.getChildAt(a);
        //     sp.visible = false;
        // }
        // this.box.bottomBox.bottom = 0;
        // if( this.newerSession.isNew ){
        //     return;
        // }
        console.log("BannerBannerBannerBannerBannerBannerBannerBanner:");
        console.log(url);
        if (url == MyGameInit_1.default.MainScene) {
            this.setShow([LeuokSession.ZHUTUI, LeuokSession.CHOUTI]);
            // if( this.showWall ){
            //     this.showWall = false;
            //     Laya.timer.once( 100, this,this.nextCloseFun );
            // }
        }
        else if (url == MyGameInit_1.default.RoleDialog) {
            //this.setShow( [LeuokSession.BOTTOMBOX ] );            
        }
        else if (url == MyGameInit_1.default.TimeGoldDialog) {
            //this.setShow( [LeuokSession.BOTTOMBOX] );
            this.showBanner(url, "146702");
        }
        else if (url == MyGameInit_1.default.TreasureDialog) {
            //this.setShow( [LeuokSession.BOTTOMBOX] );
            this.showBanner(url, "146703");
        }
        else if (url == MyGameInit_1.default.RankDialog) {
            this.showBanner(url, "146704");
        }
        else if (url == MyGameInit_1.default.GetGoldDialog) {
            this.showBanner(url, "146705");
            //this.setShow([LeuokSession.BOTTOMBOX]);
            //this.box.bottomBox.bottom = 300;
        }
        else if (url == MyGameInit_1.default.SettingDialog) {
            this.showBanner(url, "146706");
            //this.setShow([LeuokSession.BOTTOMBOX]);
            //this.box.bottomBox.bottom = 300;
        }
        else if (url == MyGameInit_1.default.SelectStage || url == MyGameInit_1.default.SelectStage2) {
            this.setShow([LeuokSession.ZHUTUI, LeuokSession.BOTTOMBOX]);
            // this.box.bottomBox.bottom = 0;
            this.showBanner(url, "146706");
        }
        else if (url == MyGameInit_1.default.BattleScene) {
            //this.setShow([LeuokSession.BOTTOMBOX]);//,LeuokSession.ZHUTUI
        }
        else if (url == MyGameInit_1.default.GameOverDialog) {
            //this.setShow([LeuokSession.BOTTOMBOX]);
            // this.setShow([LeuokSession.ZHUTUI, LeuokSession.BOTTOMBOX]);
            // this.box.bottomBox.bottom = null;
            // this.box.bottomBox.y = 450;
            // this.showBanner(url, "146706");
        }
        else if (url == MyGameInit_1.default.TASK) {
            this.showBanner(url, "146706");
        }
        else if (url == MyGameInit_1.default.ZHUAN) {
            this.showBanner(url, "146706");
        }
        else if (url == MyGameInit_1.default.FlyBoxDialog) {
            //this.setShow([]);
            this.showBanner(url, "146706");
        }
        else if (url == MyGameInit_1.default.SHARE_MERGE_DIALOG) {
            this.showBanner(url, "146706");
        }
        else if (url == MyGameInit_1.default.AD_MERGE_DIALOG) {
            this.showBanner(url, "146706");
        }
        else if (url == MyGameInit_1.default.TIANFU) {
            this.showBanner(url, "146706");
        }
        else if (url == MyGameInit_1.default.TASK_REWARD) {
            this.showBanner(url, "146706");
        }
    };
    LeuokSession.prototype.showBanner = function (url, code) {        
        this.sdkSession.showBanner(adBanner);
        this.closeBanner.push(url);
    };
    LeuokSession.prototype.clickFun = function () {
        var k = 1;
        if (k == 1)
            return;
        // this.win.visible = true;
        // this.win.showSlideWindow();
        // this.box.mouseThrough = false;
        Laya.timer.callLater(this, this.nFun);
    };
    LeuokSession.prototype.nFun = function () {
        Laya.stage.once(Laya.Event.CLICK, this, this.sClickFun);
    };
    LeuokSession.prototype.sClickFun = function () {
        // this.win.closeSlideWindow();
    };
    LeuokSession.prototype.setShow = function (arr) {
        // for (let a of arr) {
        //     let c: Laya.Sprite = <any>this.box.getChildByName(a);
        //     c.visible = true;
        //     c.on(Laya.Event.CLICK, this, this.clickFun);
        // }
        // this.win.visible = false;
        // this.win.closeSlideWindow();
        // for ( let a:number = 0; a < this.box.numChildren; a++ ){
        //     let sp:Laya.Sprite = <any>this.box.getChildAt(a);
        //     sp.visible = true;
        // }
        // let s = new Laya.Sprite();
        // s.zOrder = -100;
        // s.graphics.drawRect( 0 , 0, Laya.stage.width ,Laya.stage.height , "#000000" );
        // s.alpha = 0.6;
        // this.box.addChild(s);
        //this.box.graphics.drawRect( 0 , 0 , Laya.stage.width ,Laya.stage.height );
        //this.box.mouseThrough = false;
    };
    LeuokSession.prototype.getRoot = function () {
        return Laya.Browser.window.wx.leuok;
    };
    LeuokSession.prototype.onSHARE_START = function (type) {
        // this.getRoot().sharedOut({ "type": type });
    };
    /**
     *
     * @param type 视频出发点 是飞天宝箱还是什么别的
     * @param subType 是视频的哪个阶段
     */
    LeuokSession.prototype.onAD_EVENT = function (subType, type) {
        var obj = {};
        obj.type = type;
        obj.subType = subType;
        // this.getRoot().adVideo(obj);
        //this.dataSession.log( type * 100000 + subType );
    };
    LeuokSession.ZHUTUI = "zhuTui";
    LeuokSession.CHOUTI = "chouTi";
    LeuokSession.BOTTOMBOX = "bottomBox";
    return LeuokSession;
}(Session_1.default));
exports.default = LeuokSession;
},{"../../game/App":5,"../../game/GameEvent":9,"../../game/MyArray":15,"../../game/Session":20,"../MyGameInit":22}],70:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LogType = /** @class */ (function () {
    function LogType() {
    }
    LogType.HEART = 100;
    LogType.LOGIN_TIME = 0;
    LogType.ERROR_ITEM_NULL = 1;
    LogType.LOGIN_INFO = 2;
    /**
     * 登陆http的状态 正常是200
     */
    LogType.LOGIN_STATUS = 3;
    LogType.WX_HIDE = 4;
    LogType.WX_SHOW = 5;
    LogType.LOAD_ERROR = 6;
    /**开始挂机 */
    LogType.HANGUP_START = 7;
    /**结束挂机 */
    LogType.HANGUP_OVER = 8;
    /**
     * 记录玩家数据
     */
    LogType.PLAYER_DATA = 9;
    /**
     * 新玩家
     */
    LogType.NEW_PLAYER = 10;
    LogType.CLICK_BOX = 100;
    LogType.BOX_COM = 101;
    LogType.CODE_ERROR = 11;
    LogType.LOAD_CONFIG = 13;
    LogType.LOAD_VERSION = 14;
    LogType.LOAD_fileconfig = 15;
    LogType.LOAD_CONFIGZIP = 16;
    LogType.LOAD_CONFIG_ERR = 17;
    /**
     * 广告加载失败
     */
    LogType.AD_FAIL = 18;
    /**
     * 广告显示成功
     */
    LogType.AD_SUC = 19;
    /**
     * 广告播放完毕
     */
    LogType.AD_SUC_OVER = 20;
    /**
     * 失败2
     */
    LogType.AD_FAIL_2 = 21;
    LogType.OPEN_TASK = 22;
    LogType.OPEN_TIANFU = 23;
    LogType.CLOSE_ZHUAN_PAN = 24;
    LogType.OPEN_ZHUAN = 25;
    LogType.AD_ZHUAN = 26;
    /**
     * 玩家一进入游戏 点击屏幕开始
     */
    LogType.NEWER_FIRST_CLICK = 1000;
    /**
     * 打开角色面板
     */
    LogType.NEWER_OPEN_ROLE = 1001;
    /**
     * 指导装备装备
     */
    LogType.NEWER_EQUIP = 1002;
    /**
     * 你变的越来越强大
     */
    LogType.NEWER_YUELAIYUEQIANGDA = 1005;
    /**
     * 半血
     */
    LogType.NEWER_HALF = 1006;
    /**
     * 醒来
     */
    LogType.NEWER_XINGLAI = 1007;
    /**
     * 新手点城市
     */
    LogType.NEWER_CLICK_CITY = 1008;
    /**
     * 点关
     */
    LogType.NEWER_CLICK_STAGE = 1009;
    return LogType;
}());
exports.default = LogType;
},{}],71:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Session_1 = require("../../game/Session");
var App_1 = require("../../game/App");
var MyEvent_1 = require("../MyEvent");
var GirlViewC_1 = require("../scene/GirlViewC");
var MyGameInit_1 = require("../MyGameInit");
var GameEvent_1 = require("../../game/GameEvent");
var LogType_1 = require("./LogType");
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var NewerSession = /** @class */ (function (_super) {
    __extends(NewerSession, _super);
    function NewerSession() {
        var _this = _super.call(this) || this;
        _this.isNew = false;
        _this.dataSession = null;
        _this.g = null;
        _this.itemnum = 0;
        return _this;
    }
    NewerSession.prototype.clearNew = function () {
        this.isNew = false;
        if (this.g) {
            this.g.removeSelf();
            this.g = null;
        }
        Laya.timer.clearAll(this);
        App_1.default.getInstance().eventManager.offAllCaller(this);
        NewerSession.hand = null;
        App_1.default.sendEvent(MyEvent_1.default.NEWER_OVER);
        this.dataSession.saveData();
    };
    /**
     * 血量已经一半
     */
    NewerSession.prototype.onHP_HALF = function () {
        if (this.isNew == false) {
            return;
        }
        this.dataSession.save1();
        this.dataSession.log(LogType_1.default.NEWER_HALF);
        App_1.default.getInstance().openScene(MyGameInit_1.default.MainScene);
    };
    NewerSession.prototype.onNEWER_INIT = function () {
        this.isNew = true;
    };
    NewerSession.prototype.onENTER_BATTLE_SCENE = function () {
        if (this.isNew == false) {
            return;
        }
        this.enterFun();
    };
    /**
     * 第二次进入游戏
     */
    NewerSession.prototype.onSECOND_NEW = function () {
        this.isNew = true;
        this.g = new GirlViewC_1.default();
        Laya.stage.addChild(this.g);
    };
    NewerSession.prototype.enterFun = function () {
        this.g = new GirlViewC_1.default();
        Laya.stage.addChild(this.g);
        this.g.startOne();
        this.g.once(GirlViewC_1.default.NEXT, this, this.nextFun);
    };
    NewerSession.prototype.nextFun = function () {
        App_1.default.sendEvent(MyEvent_1.default.START_NEWER_MV);
        App_1.default.getInstance().eventManager.once(MyEvent_1.default.JINGTOU_BACK, this, this.nextFun2);
    };
    NewerSession.prototype.nextFun2 = function () {
        this.g.moveGuide();
        App_1.default.onEvent(MyEvent_1.default.GET_NEW_ITEM, this, this.getnewFun);
    };
    NewerSession.prototype.getnewFun = function () {
        this.itemnum++;
        if (this.itemnum == 2) {
            this.g.tailihai();
        }
        this.g.once(GirlViewC_1.default.NEXT, this, this.next2Fun);
    };
    NewerSession.prototype.next2Fun = function () {
        App_1.default.sendEvent(MyEvent_1.default.SHOUZHITOU);
        App_1.default.getInstance().eventManager.once(MyEvent_1.default.EQUIP_OVER, this, this.equipFun);
    };
    NewerSession.prototype.equipFun = function () {
        this.g.bianQiang();
    };
    /**
     * 新手
     */
    NewerSession.getHand = function () {
        if (NewerSession.hand == null) {
            NewerSession.hand = new layaMaxUI_1.ui.scene.newhand1UI();
        }
        NewerSession.hand.lightClip.play();
        return NewerSession.hand;
    };
    /**
     * 最后一步
     */
    NewerSession.prototype.last = function () {
        App_1.default.getInstance().eventManager.once(GameEvent_1.default.OPEN_SCENE_START, this, this.clickLast);
    };
    NewerSession.prototype.clickLast = function (url) {
        if (url == MyGameInit_1.default.BattleScene) {
            this.clearNew();
        }
    };
    NewerSession.hand = null;
    return NewerSession;
}(Session_1.default));
exports.default = NewerSession;
},{"../../game/App":5,"../../game/GameEvent":9,"../../game/Session":20,"../../ui/layaMaxUI":83,"../MyEvent":21,"../MyGameInit":22,"../scene/GirlViewC":55,"./LogType":70}],72:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Session_1 = require("../../game/Session");
var SysConfig_1 = require("../config/SysConfig");
var BattleSession_1 = require("./BattleSession");
var App_1 = require("../../game/App");
var MyEvent_1 = require("../MyEvent");
var PetSession = /** @class */ (function (_super) {
    __extends(PetSession, _super);
    function PetSession() {
        var _this = _super.call(this) || this;
        _this.bagSession = null;
        _this.eggNum = 0;
        return _this;
    }
    PetSession.prototype.addEgg = function () {
        this.changeEgg(1);
    };
    /**
     * 是否成功
     * @param value
     */
    PetSession.prototype.changeEgg = function (value) {
        if (value < 0) {
            if ((value + this.eggNum) < 0) {
                return false;
            }
        }
        this.eggNum += value;
        App_1.default.sendEvent(MyEvent_1.default.EGG_UPDATE);
        if (this.eggNum > 0) {
            this.bagSession.addRed(BattleSession_1.EQUIP_TYPE.PET);
        }
        return true;
    };
    /**
     * 砸开新的宠物蛋
     */
    PetSession.prototype.getNewPet = function () {
        if (this.changeEgg(-1) == false) {
            return null;
        }
        return this.getNewPetNoEgg();
    };
    PetSession.prototype.getNewPetArr = function () {
        var num = this.bagSession.getBagNum(BattleSession_1.EQUIP_TYPE.PET);
        var openNum = Math.min(this.eggNum, num);
        var arr = [];
        for (var i = 0; i < openNum; i++) {
            arr.push(this.getNewPet());
        }
        return arr;
    };
    PetSession.prototype.getNewPetNoEgg = function () {
        var petLv = this.getPetLv();
        var e = this.bagSession.getNewItem(BattleSession_1.EQUIP_TYPE.PET, petLv);
        this.bagSession.addEquipInBag(e);
        return e;
    };
    PetSession.prototype.getPetLv = function () {
        var lv = this.bagSession.getAverageEquipLv();
        lv = parseInt(lv + "");
        var sysarr = SysConfig_1.SysPet.getSysPet(PetSession.PET_BOX);
        for (var _i = 0, sysarr_1 = sysarr; _i < sysarr_1.length; _i++) {
            var s = sysarr_1[_i];
            if (lv >= s.playerEquipLvMin && lv <= s.playerEquipLvMax) {
                return App_1.default.getRandom2(s.petEquipLvMin, s.petEquipLvMax);
            }
        }
    };
    PetSession.PET_BOX = 700001;
    return PetSession;
}(Session_1.default));
exports.default = PetSession;
},{"../../game/App":5,"../../game/Session":20,"../MyEvent":21,"../config/SysConfig":23,"./BattleSession":67}],73:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Session_1 = require("../../game/Session");
var App_1 = require("../../game/App");
var MyEvent_1 = require("../MyEvent");
var GameEvent_1 = require("../../game/GameEvent");
var MyGameInit_1 = require("../MyGameInit");
var Tips_1 = require("../scene/Tips");
var LogType_1 = require("./LogType");
var SdkSession = /** @class */ (function (_super) {
    __extends(SdkSession, _super);
    function SdkSession() {
        var _this = _super.call(this) || this;
        _this.dataSession = null;
        _this.haveRight = false;
        _this.wxName = null;
        _this.wxHead = null;
        _this.adMap = {};
        /**
         * 最后广告成功时间
         */
        _this.lastAdSucTime = 0;
        _this.currentAdType = 0;
        _this.adHandler = null;
        /**
         * 1就是加载成功了
         * 2就是加载错误了
         */
        _this.adStat = 0;
        _this.errCode = 0;
        _this.shareStartTime = 0;
        /**
         * 今天分享了几次
         */
        _this.shareTimes = 0;
        /**
         * 分享的时间
         */
        _this.shareTime = 0;
        _this.bannerTime = 0;
        _this.banner = null;
        _this.isRecorder = false;
        _this.lpTime = 0;
        _this.share_txt = [
            "冲锋吧，勇士！",
            "冲锋吧，勇士！"
        ];
        _this.share_id = [
            "ee30f57a06gbav4gsp",
            "bnilc7da72334glgal"
        ];
        if (Laya.Browser.onMiniGame == false) {
            return _this;
        }
        Laya.Browser.window.wx.updateShareMenu({});
        Laya.Browser.window.wx.showShareMenu({});
        Laya.Browser.window.wx.onShareAppMessage(function () {
            return _this.getShareObject();
        });
        Laya.Browser.window.wx.getSetting({
            success: function (res) {
                if (res.authSetting["scope.userInfo"] == true) {
                    console.log("已经有授权了");
                    _this.getUserInfo();
                }
                else {
                    _this.haveRight = false;
                    console.log("没有授权");
                }
            }
        });
        Laya.Browser.window.wx.setKeepScreenOn({ keepScreenOn: true });
        Laya.Browser.window.wx.onShow(function (res) {
            App_1.default.sendEvent(MyEvent_1.default.WX_ON_SHOW);
        });
        Laya.Browser.window.wx.onHide(function (res) {
            App_1.default.sendEvent(MyEvent_1.default.WX_ON_HIDE);
        });
        var updateManager = Laya.Browser.window.wx.getUpdateManager();
        updateManager.onCheckForUpdate(function (res) {
            // 请求完新版本信息的回调
            console.log("版本更新回调:", res.hasUpdate);
        });
        updateManager.onUpdateReady(function () {
            Laya.Browser.window.wx.showModal({
                title: '更新提示',
                content: '新版本已经准备好，是否重启应用？',
                success: function (res) {
                    if (res.confirm) {
                        // 新的版本已经下载好，调用 applyUpdate 应用新版本并重启
                        updateManager.applyUpdate();
                    }
                }
            });
        });
        updateManager.onUpdateFailed(function () {
            // 新版本下载失败
        });
        var btn = {};
        btn.type = "image";
        var sty = {};
        sty.left = 0;
        sty.top = 300;
        sty.width = 44;
        sty.height = 44;
        //sty.backgroundColor = "#ffffff";
        //sty.borderWidth = 1;
        //sty.borderRadius = 1;
        sty.textAlign = "center";
        sty.fontSize = 28;
        sty.lineHeight = 30;
        btn.style = sty;
        btn.icon = "green";
        // this.gameClubButton = Laya.Browser.window.wx.createGameClubButton(btn);
        App_1.default.getInstance().eventManager.on(GameEvent_1.default.OPEN_SCENE_START, _this, _this.openScene);
        Laya.timer.callLater(_this, _this.callLaterFun);
        return _this;
    }
    SdkSession.prototype.getUserInfo = function () {
        var _this = this;
        Laya.Browser.window.wx.getUserInfo({
            success: function (res) {
                var userInfo = res.userInfo;
                _this.wxName = userInfo.nickName;
                _this.wxHead = userInfo.avatarUrl;
                var gender = userInfo.gender; //性别 0：未知、1：男、2：女
                var province = userInfo.province;
                var city = userInfo.city;
                var country = userInfo.country;
                console.log("已经授权了:", _this.wxName, _this.wxHead);
                _this.haveRight = true;
            }
        });
    };
    SdkSession.prototype.callLaterFun = function () {
        this.initAd();
    };
    SdkSession.prototype.openScene = function (url) {
        if (url == MyGameInit_1.default.BattleScene) {
            // this.gameClubButton.hide();
        }
        else {
            // this.gameClubButton.show();
        }
    };
    SdkSession.prototype.initAd = function () {
        var _this = this;
        if (App_1.default.isSimulator()) {
            return;
        }
        if (Laya.Browser.onMiniGame) {
            
        }
        
        this.ad.onClose(function (res) {
            console.log("广告 观看结果返回");
            if (res && res.isEnded || res === undefined) {
                _this.lastAdSucTime = Laya.Browser.now();
                _this.exeHandler();
                App_1.default.sendEvent(MyEvent_1.default.PLAY_AD);
                App_1.default.sendEvent(MyEvent_1.default.AD_EVENT, [AD_STAT.VEDIO_SUC, _this.currentAdType]);
                App_1.default.sendEvent(MyEvent_1.default.AD_EVENT, [AD_STAT.REWARD, _this.currentAdType]);
                _this.dataSession.log(LogType_1.default.AD_SUC_OVER);
            }
            else {
                App_1.default.sendEvent(MyEvent_1.default.AD_EVENT, [AD_STAT.VEDIO_FAIL, _this.currentAdType]);
            }
            App_1.default.sendEvent(MyEvent_1.default.AD_OVER);
        });
        this.ad.onError(function (err) {
            _this.adStat = 2;
            _this.errCode = err.errCode;
            App_1.default.sendEvent(MyEvent_1.default.AD_EVENT, [AD_STAT.NO_HAVE, _this.currentAdType]);
            console.log("广告 加载错误:", err);
            if (_this.errCode == 1004) {
                console.log("加载视频失败,30秒后重试");
                Laya.timer.once(30 * 1000, _this, _this.retryAdFun);
            }
            _this.dataSession.log(LogType_1.default.AD_FAIL, _this.errCode + "");
        });
        this.ad.onLoad(function () {
            _this.adStat = 1;
            console.log("广告 加载成功");
        });
    };
    SdkSession.prototype.retryAdFun = function () {
        this.ad.load();
    };
    SdkSession.prototype.playAdVideo = function (code, h) {
        this.currentAdType = code;
        console.log("广告 开始播放");
        App_1.default.sendEvent(MyEvent_1.default.AD_EVENT, [AD_STAT.VEDIO_CLICK, code]);
        if (Laya.Browser.onMiniGame == false) {
            h.runWith(1);
            App_1.default.sendEvent(MyEvent_1.default.PLAY_AD);
            return;
        }
        if (this.adStat == 2) {
            //Tips.show("稍后回来");
            this.share2(h);
            return;
        }
        this.adHandler = h;
        var adid = this.adMap[code];
       
        this.tryShowAD();
    };
    SdkSession.prototype.initAdBtn = function (sp, type) {
        // sp.gray = (this.adStat == 2);
        App_1.default.sendEvent(MyEvent_1.default.AD_EVENT, [AD_STAT.DIALOG_OPEN, type]);
        sp.once(Laya.Event.UNDISPLAY, this, this.adUndisFun, [type]);
    };
    SdkSession.prototype.adUndisFun = function (type) {
        App_1.default.sendEvent(MyEvent_1.default.AD_EVENT, [AD_STAT.DIALOG_CLOSE, type]);
    };
    SdkSession.prototype.tryShowAD = function () {
        var _this = this;
        // this.ad.show().then( ()=>{
        //     this.dataSession.log( LogType.AD_SUC );
        // } );
        this.dataSession.log(LogType_1.default.AD_SUC);
        this.ad.show().catch(function () {
            _this.ad.load().then(function () { return _this.ad.show(); }).catch(function (err) {
                console.log('广告再加载失败');
                console.log(err);
                _this.adStat = 2;
                _this.dataSession.log(LogType_1.default.AD_FAIL_2);
            });
        });
    };
    SdkSession.prototype.exeHandler = function () {
        this.adHandler.runWith(1);
    };
    SdkSession.prototype.exeHandler2 = function () {
        this.share(this.adHandler);
    };
    SdkSession.prototype.share2 = function (h) {
        var obj = this.getShareObject();
        obj.query = "";
        obj.imageUrlId = "";
        Laya.Browser.window.wx.shareAppMessage(obj);
        this.shareStartTime = Laya.Browser.now();
        App_1.default.getInstance().eventManager.once(MyEvent_1.default.WX_ON_SHOW, this, this.showFun, [h]);
    };
    SdkSession.prototype.share = function (h, type) {
        if (type === void 0) { type = 0; }
        this.checkShare();
        if (Laya.Browser.onMiniGame == false) {
            this.shareTimes++;
            h.runWith(1);
            return;
        }
        var obj = this.getShareObject();
        obj.query = "";
        obj.imageUrlId = "";
        Laya.Browser.window.wx.shareAppMessage(obj);
        App_1.default.sendEvent(MyEvent_1.default.SHARE_START, type);
        this.shareStartTime = Laya.Browser.now();
        var chao = this.shareTimes >= SdkSession.SHARE_MAX_TIMES;
        App_1.default.getInstance().eventManager.once(MyEvent_1.default.WX_ON_SHOW, this, this.showFun, [chao ? null : h]);
    };
    SdkSession.prototype.showFun = function (h) {
        if (h == null) {
            Tips_1.default.show("分享成功");
            return;
        }
        if ((Laya.Browser.now() - this.shareStartTime) > 2000) {
            this.shareTimes++;
            h.runWith(1);
        }
        else {
            Tips_1.default.show("请分享到不同群获得奖励");
        }
    };
    SdkSession.prototype.checkShare = function () {
        var now = new Date();
        var last = new Date(this.shareTime);
        if (now.getDate() != last.getDate()) {
            this.shareTimes = 0;
        }
        this.shareTime = Date.now();
    };
    SdkSession.prototype.getShareObject = function () {
        var arr = ["亲手打造更多的神兵利器，来与恶龙们抗争到底。", "只有我一个，我是独一份、我是限量款、我是天选之子。", "今年只玩骑马合成冲，对抗恶龙，拯救你的大陆。"];
        var obj = {};
        obj.title = App_1.default.RandomByArray(arr);        
        return obj;
    };
    /**
     * 存数据到排行榜服务器
     * @param stageNum
     */
    SdkSession.prototype.savePlayerData = function (stageNum) {
        if (Laya.Browser.onMiniGame == false) {
            return;
        }
        var obj = {};
        var o1 = {};
        o1.key = "stageNum";
        o1.value = stageNum + "";
        obj["KVDataList"] = [o1];
        obj.success = function (res) {
            console.log("存储数据成功", res);
        };
        obj.fail = function (res) {
            console.log("失败", res);
        };
        Laya.Browser.window.wx.setUserCloudStorage(obj);
    };
    /**
     * 显示banner
     */
    SdkSession.prototype.showBanner = function (code) {
        var _this = this;       
        var l = (Laya.Browser.clientWidth - 300) / 2;
        obj.style = { left: l, top: 0, width: 300, height: 125 };
        obj.adIntervals = 30;
        if (this.banner == null || (Laya.Browser.now() - this.bannerTime) > 30 * 1000) {
            if (this.banner) {
                this.banner.hide();
                this.banner.destroy();
            }
            this.banner = Laya.Browser.window.wx.createBannerAd(obj);
            this.bannerTime = Laya.Browser.now();
        }
        this.banner.onResize(function (res) {
            _this.banner.style.top = Laya.Browser.clientHeight - res.height - 20;
            _this.banner.style.left = (Laya.Browser.clientWidth - res.width) / 2;
        });
        this.banner.show();
    };
    /**
     * 隐藏
     */
    SdkSession.prototype.hideBanner = function () {
        if (this.banner) {
            this.banner.hide();
        }
    };
    /**
     * 添加授权按钮
     */
    SdkSession.prototype.addUserInfoBtn = function (sp, h) {
        var _this = this;
        var s = Laya.Browser.clientWidth / Laya.stage.width;
        var p = sp.localToGlobal(new Laya.Point(0, 0));
        var btnX = p.x * s;
        var btnY = p.y * s;
        var btnwid = sp.width * s;
        var btnhei = sp.height * s;
        this.userInfoButton = Laya.Browser.window.wx.createUserInfoButton({
            type: 'text',
            text: '',
            style: {
                left: btnX,
                top: btnY,
                width: btnwid,
                height: btnhei,
                lineHeight: 40,
                backgroundColor: '#ffffff00',
                color: '',
                textAlign: 'center',
                fontSize: 16,
                borderRadius: 0,
                borderColor: "#ffffff"
            }
        });
        this.userInfoButton.onTap(function (res) {
            if (res.errMsg == "getUserInfo:ok") {
                _this.wxName = res.userInfo.nickName;
                _this.wxHead = res.userInfo.avatarUrl;
                _this.haveRight = true;
                h.run();
                _this.undisFun();
            }
        });
        sp.once(Laya.Event.UNDISPLAY, this, this.undisFun);
    };
    SdkSession.prototype.undisFun = function () {
        if (this.userInfoButton) {
            this.userInfoButton.destroy();
            this.userInfoButton = null;
        }
    };
    /**
     *
     * @param code 插屏广告
     * @param handler
     */
    SdkSession.prototype.chaPingAd = function (type, handler) {
        if (Laya.Browser.window.wx.createInterstitialAd == null) {
            handler.run();
            return;
        }
        if ((Laya.Browser.now() - this.lastAdSucTime) < 3 * 60 * 1000) {
            handler.run();
            return;
        }
        if (this.canUse("2.6.0") == false) {
            handler.run();
            return;
        }
        var code = this.adMap[type];
        if (code == null) {
            handler.run();
            return;
        }
        var obj = {};
       
        ad.show().catch(function (err) {
            console.error("插屏广告:", err);
        });
        ad.onClose(function () {
            handler.run();
        });
    };
    SdkSession.prototype.canUse = function (str) {
        return this.compareVersion(str) >= 0;
    };
    SdkSession.prototype.compareVersion = function (v) {
        var now = Laya.Browser.window.wx.getSystemInfoSync().SDKVersion;
        var v1 = v.split('.');
        var v2 = now.split('.');
        var len = Math.max(v1.length, v2.length);
        while (v1.length < len) {
            v1.push('0');
        }
        while (v2.length < len) {
            v2.push('0');
        }
        for (var i = 0; i < len; i++) {
            var num1 = parseInt(v1[i]);
            var num2 = parseInt(v2[i]);
            if (num1 > num2) {
                return 1;
            }
            else if (num1 < num2) {
                return -1;
            }
        }
        return 0;
    };
    SdkSession.prototype.lp = function (recorder) {
        var _this = this;
        if (recorder === void 0) { recorder = true; }
        if (recorder == this.isRecorder)
            return;
        var tt = Laya.Browser.window.tt;
        if (!tt) {
            return;
        }
        if (!this.gameRecorderManager) {
            this.gameRecorderManager = tt.getGameRecorderManager();
            this.gameRecorderManager.onStart(function (res) {
                console.log("录屏开始");
                _this.isRecorder = true;
                SdkSession.tt_videoPath_ = "";
                _this.lpTime = Date.now();
            });
            this.gameRecorderManager.onStop(function (res) {
                console.log("录屏结束");
                _this.isRecorder = false;
                SdkSession.tt_videoPath_ = res.videoPath;
            });
        }
        if (!this.isRecorder) {
            // this.isRecorder = true;
            var obj = {
                duration: 60
            };
            this.gameRecorderManager.start(obj);
        }
        else {
            // this.isRecorder = false;
            this.gameRecorderManager.stop();
        }
    };
    SdkSession.prototype.tt_test_share = function () {
        // 视频分享
        var tt = Laya.Browser.window.tt;
        if (tt && SdkSession.tt_videoPath_ != "") {
            var k = Math.floor(Math.random() * this.share_txt.length);
            var obj_title = this.share_txt[k];
            var obj_id = this.share_id[k];
            tt.shareAppMessage({
                channel: "video",
                query: "",
                templateId: obj_id,
                title: obj_title,
                desc: "冲锋吧，勇士！",
                extra: {
                    videoPath: SdkSession.tt_videoPath_,
                    videoTopics: ["冲锋吧，勇士！"]
                },
                success: function () {
                    console.log("分享录屏成功");
                    App_1.default.sendEvent(MyEvent_1.default.SHARE_LP_COM);
                    this.isRecorder = false;
                    //GM.tt_videoPath = "";
                    // Game.eventManager.event(GameEvent.TT_SHARE_SUCCESS);
                    // GameData.I.event(GameEvent.Event_TT_SHARE_SUCCESS);
                },
                fail: function (e) {
                    console.log("分享录屏失败", e);
                    App_1.default.sendEvent(MyEvent_1.default.SHARE_LP_ERR);
                    this.isRecorder = false;
                    //GM.tt_videoPath = "";
                    //Game.eventManager.event(GameEvent.TT_SHARE_SUCCESS);
                    // GameData.I.event(GameEvent.Event_TT_SHARE_FAIL);
                }
            });
        }
    };
    SdkSession.tt_videoPath_ = "";
    SdkSession.FLY_BOX = 0;
    SdkSession.GAME_OVER = 1;
    SdkSession.GET_PET = 2;
    SdkSession.TIME_GOLD = 3;
    SdkSession.TREASURE = 4;
    SdkSession.ZHUAN = 5;
    SdkSession.AD_DIALOG = 7;
    SdkSession.TASK_REWARD = 8;
    SdkSession.NEXT_STAGE_CHAPING = 6;
    /**
     * 最大分享次数
     */
    SdkSession.SHARE_MAX_TIMES = 6;
    return SdkSession;
}(Session_1.default));
exports.default = SdkSession;
var AD_STAT;
(function (AD_STAT) {
    AD_STAT[AD_STAT["DIALOG_OPEN"] = 0] = "DIALOG_OPEN";
    AD_STAT[AD_STAT["DIALOG_CLOSE"] = 1] = "DIALOG_CLOSE";
    AD_STAT[AD_STAT["VEDIO_CLICK"] = 2] = "VEDIO_CLICK";
    AD_STAT[AD_STAT["VEDIO_FAIL"] = 3] = "VEDIO_FAIL";
    AD_STAT[AD_STAT["VEDIO_SUC"] = 4] = "VEDIO_SUC";
    AD_STAT[AD_STAT["REWARD"] = 5] = "REWARD";
    AD_STAT[AD_STAT["NO_HAVE"] = 6] = "NO_HAVE";
})(AD_STAT || (AD_STAT = {}));
},{"../../game/App":5,"../../game/GameEvent":9,"../../game/Session":20,"../MyEvent":21,"../MyGameInit":22,"../scene/Tips":65,"./LogType":70}],74:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Session_1 = require("../../game/Session");
var App_1 = require("../../game/App");
var SetSession = /** @class */ (function (_super) {
    __extends(SetSession, _super);
    function SetSession() {
        var _this = _super.call(this) || this;
        _this.music = true;
        _this.sound = true;
        return _this;
    }
    /**
     * true是有音乐
     * @param value
     */
    SetSession.prototype.setMusic = function (value) {
        this.music = value;
        Laya.SoundManager.musicMuted = !this.music;
        App_1.default.getInstance().gameSoundManager.setBgmMuted(!value);
    };
    SetSession.prototype.setSound = function (value) {
        this.sound = value;
        Laya.SoundManager.soundMuted = !this.sound;
        App_1.default.getInstance().gameSoundManager.setEffMuted(!value);
    };
    return SetSession;
}(Session_1.default));
exports.default = SetSession;
},{"../../game/App":5,"../../game/Session":20}],75:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Session_1 = require("../../game/Session");
var App_1 = require("../../game/App");
var MyGameInit_1 = require("../MyGameInit");
var MyArray_1 = require("../../game/MyArray");
var Map2Array_1 = require("../../game/Map2Array");
var BagSession_1 = require("./BagSession");
var MyEvent_1 = require("../MyEvent");
var GameEvent_1 = require("../../game/GameEvent");
var TaskSession = /** @class */ (function (_super) {
    __extends(TaskSession, _super);
    function TaskSession() {
        var _this = _super.call(this) || this;
        _this.dataSession = null;
        _this.bagSession = null;
        _this.newerSession = null;
        /**
         * 里面都是id 字符串
         */
        _this.overArr = new MyArray_1.default();
        /**
         * 已激活任务
         * 完成任务的时候 从这里拿 所以新加的任务必须放这里
         */
        _this.nowMap = new Map2Array_1.default();
        _this.dayTaskArr = [];
        _this.achievementArr = [];
        /**
         * 任务data的map
         * id 2 taskdata
         * 所有的都在这里
         */
        _this.taskMap = {};
        Laya.timer.callLater(_this, _this.nextFun);
        return _this;
    }
    TaskSession.prototype.nextFun = function () {
        this.dataSession.regAtt(this);
    };
    TaskSession.prototype.onNEWER_OVER = function () {
        this.setData(null);
    };
    TaskSession.prototype.haveOver = function () {
        for (var k in this.taskMap) {
            var td = this.taskMap[k];
            if (td.isOver()) {
                return true;
            }
        }
        return false;
    };
    TaskSession.prototype.onCONFIG_OVER = function () {
        var arr = App_1.default.getInstance().configManager.getDataArr(MyGameInit_1.default.sys_mission);
        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
            var sys = arr_1[_i];
            if (sys.missionNamesign == 1) {
                continue;
            }
            var td = new TaskData();
            this.taskMap[sys.id] = td;
            td.id = sys.id;
            td.now = 0;
            if (sys.missionType == 1) {
                this.dayTaskArr.push(sys);
            }
            else {
                this.achievementArr.push(sys);
            }
        }
    };
    TaskSession.prototype.getDayTask = function () {
        return this.dayTaskArr;
    };
    TaskSession.prototype.getAchievementTask = function (value) {
        if (value) {
            var aArr = [];
            for (var _i = 0, _a = this.achievementArr; _i < _a.length; _i++) {
                var a = _a[_i];
                var td = this.getTaskData(a.id);
                if (td.isReceived() == false) {
                    if (td.isOver()) {
                        aArr.unshift(a);
                    }
                    else {
                        aArr.push(a);
                    }
                }
            }
            return aArr;
        }
        else {
            var arr = [];
            for (var _b = 0, _c = this.achievementArr; _b < _c.length; _b++) {
                var sys = _c[_b];
                var td = this.getTaskData(sys.id);
                if (td.now == -1) {
                    arr.push(sys);
                }
            }
            return arr;
        }
    };
    TaskSession.prototype.getData = function () {
        var str = "";
        str = str + this.overArr.arr.join(",") + ".";
        for (var key in this.nowMap.map) {
            var arr = this.nowMap.map[key];
            for (var _i = 0, arr_2 = arr; _i < arr_2.length; _i++) {
                var td = arr_2[_i];
                str += (td.id + "," + td.now + ",");
            }
        }
        return str;
    };
    TaskSession.prototype.getTaskData = function (id) {
        return this.taskMap[id];
    };
    TaskSession.prototype.setData = function (value) {
        if (value != null) {
            //初始化
            var arr = value.split(".");
            if (arr[0] != "") {
                this.overArr.arr = arr[0].split(",");
                for (var _i = 0, _a = this.overArr.arr; _i < _a.length; _i++) {
                    var a = _a[_i];
                    var overId = parseInt(a);
                    var td = this.taskMap[overId];
                    td.now = -1;
                }
            }
            var arr2 = arr[1].split(",");
            if (arr2.length > 0) {
                arr2.pop();
            }
            for (var i = 0; i < arr2.length; i += 2) {
                var id = parseInt(arr2[i]);
                var now = parseInt(arr2[i + 1]);
                var td = this.taskMap[id];
                td.now = now;
            }
        }
        var sysArr = App_1.default.getInstance().configManager.getDataArr(MyGameInit_1.default.sys_mission);
        //分类
        for (var _b = 0, sysArr_1 = sysArr; _b < sysArr_1.length; _b++) {
            var sysMission = sysArr_1[_b];
            if (sysMission.missionNamesign == 1) {
                continue;
            }
            if (this.overArr.contain(sysMission.id + "") == false) {
                this.nowMap.setData(sysMission.type, this.taskMap[sysMission.id]);
            }
        }
    };
    TaskSession.prototype.one = function (type, subType) {
        if (subType === void 0) { subType = -1; }
        var arr = this.nowMap.getData(type);
        for (var _i = 0, arr_3 = arr; _i < arr_3.length; _i++) {
            var taskData = arr_3[_i];
            var sys = App_1.default.getConfig(MyGameInit_1.default.sys_mission, taskData.id);
            if (sys.subType == subType) {
                taskData.now++;
            }
        }
    };
    TaskSession.prototype.onPLAY_AD = function () {
        this.one(TASK_TYPE.AD);
    };
    TaskSession.prototype.onKILL_BOSS = function () {
        this.one(TASK_TYPE.KILL_BOSS);
    };
    TaskSession.prototype.onSTAGE = function (stageId) {
        this.one(TASK_TYPE.STAGE, stageId);
    };
    TaskSession.prototype.onMERGE = function () {
        this.one(TASK_TYPE.MERGE);
    };
    TaskSession.prototype.onEQUIP_LV_NUM = function (lv) {
        this.one(TASK_TYPE.EQUIP_LV_NUM, lv);
    };
    /**
     * 领取这个任务的奖励
     * @param id
     */
    TaskSession.prototype.overTask = function (id, bei) {
        if (bei === void 0) { bei = 1; }
        var sys = App_1.default.getConfig(MyGameInit_1.default.sys_mission, id);
        var td = this.taskMap[id];
        if (td.now == -1) {
            return;
        }
        td.now = -1;
        this.nowMap.deleteData(sys.type, td, 0);
        this.overArr.push(id + "");
        this.bagSession.changeGold(sys.gold * bei, BagSession_1.GOLD_TYPE.TASK);
        App_1.default.dialog(MyGameInit_1.default.NewGetItemDialog, false, sys.gold * bei);
        App_1.default.sendEvent(MyEvent_1.default.TASK_UPDATE);
    };
    TaskSession.prototype.onNEW_DAY = function () {
        for (var _i = 0, _a = this.dayTaskArr; _i < _a.length; _i++) {
            var sys = _a[_i];
            this.overArr.delete(sys.id + "", 0);
            //如果这个任务已经完成了 从这里去掉
            var td = this.taskMap[sys.id];
            this.nowMap.setData2(sys.type, td);
            td.now = 0;
        }
        this.one(TASK_TYPE.LOGIN);
        if (this.newerSession.isNew) {
            return;
        }
        App_1.default.onEvent(GameEvent_1.default.ENTER_SCENE, this, this.enterSceneFun);
    };
    TaskSession.prototype.enterSceneFun = function (url) {
        if (url == MyGameInit_1.default.MainScene) {
            App_1.default.getInstance().eventManager.off(GameEvent_1.default.ENTER_SCENE, this, this.enterSceneFun);
            Laya.timer.once(500, this, this.timeFun);
        }
    };
    TaskSession.prototype.timeFun = function () {
        App_1.default.getInstance().openDialogManager.openOnyByOne(MyGameInit_1.default.TASK);
    };
    return TaskSession;
}(Session_1.default));
exports.default = TaskSession;
var TaskData = /** @class */ (function () {
    function TaskData() {
        this.id = 0;
        this.now = 0;
    }
    TaskData.prototype.setString = function (value) {
        var arr = value.split(",");
        this.id = parseInt(arr[0]);
        this.now = parseInt(arr[1]);
    };
    TaskData.prototype.getString = function () {
        return this.id + "," + this.now;
    };
    TaskData.prototype.isOver = function () {
        var sys = App_1.default.getConfig(MyGameInit_1.default.sys_mission, this.id);
        return this.now >= sys.max;
    };
    /**
     * 已领取
     */
    TaskData.prototype.isReceived = function () {
        return this.now == -1;
    };
    return TaskData;
}());
exports.TaskData = TaskData;
var TASK_TYPE;
(function (TASK_TYPE) {
    TASK_TYPE[TASK_TYPE["AD"] = 1] = "AD";
    TASK_TYPE[TASK_TYPE["STAGE"] = 2] = "STAGE";
    TASK_TYPE[TASK_TYPE["EQUIP_LV_NUM"] = 3] = "EQUIP_LV_NUM";
    TASK_TYPE[TASK_TYPE["MERGE"] = 4] = "MERGE";
    TASK_TYPE[TASK_TYPE["KILL_BOSS"] = 5] = "KILL_BOSS";
    TASK_TYPE[TASK_TYPE["LOGIN"] = 6] = "LOGIN";
})(TASK_TYPE = exports.TASK_TYPE || (exports.TASK_TYPE = {}));
},{"../../game/App":5,"../../game/GameEvent":9,"../../game/Map2Array":11,"../../game/MyArray":15,"../../game/Session":20,"../MyEvent":21,"../MyGameInit":22,"./BagSession":66}],76:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Session_1 = require("../../game/Session");
var App_1 = require("../../game/App");
var MyGameInit_1 = require("../MyGameInit");
var SysConfig_1 = require("../config/SysConfig");
var BagSession_1 = require("./BagSession");
var MyEvent_1 = require("../MyEvent");
var TianFuSession = /** @class */ (function (_super) {
    __extends(TianFuSession, _super);
    function TianFuSession() {
        var _this = _super.call(this) || this;
        _this.bagSession = null;
        _this.dataSession = null;
        _this.equip = new SysConfig_1.Equip();
        /**
         * 升级了多少次
         */
        _this.lvTimes = 0;
        _this.lvArr = [];
        _this.mergeEquip = 0;
        _this.offLineGold = 0;
        _this.dropGold = 0;
        /**
         * 死亡不掉装备的几率
         */
        _this.deadLuck = 0;
        return _this;
    }
    TianFuSession.prototype.onNEWER_INIT = function () {
        this.setLvString(null);
    };
    TianFuSession.prototype.getLvString = function () {
        return this.lvArr.join(",");
    };
    TianFuSession.prototype.setLvString = function (str) {
        if (str == null || str == "") {
            for (var i = 0; i < 9; i++) {
                this.lvArr.push(0);
            }
            return;
        }
        var arr = str.split(",");
        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
            var a = arr_1[_i];
            this.lvArr.push(parseInt(a));
        }
        this.updateEquip();
    };
    TianFuSession.prototype.updateEquip = function () {
        this.equip.attack = this.getNumber(0, "addAttack");
        this.equip.move = this.getNumber(1, "addMove");
        this.deadLuck = this.getNumber(2, "dropItem");
        this.equip.defense = this.getNumber(3, "addDefense");
        this.equip.hitPoint = this.getNumber(4, "hitPoint");
        this.dropGold = this.getNumber(5, "dropGold");
        this.equip.crit = this.getNumber(6, "addCrit");
        this.offLineGold = this.getNumber(7, "offlineGold");
        this.mergeEquip = this.getNumber(8, "addCompose");
    };
    TianFuSession.prototype.getTxt = function (index) {
        if (index == 0) {
            return this.equip.attack + "";
        }
        else if (index == 1) {
            return this.equip.move + "";
        }
        else if (index == 2) {
            return this.deadLuck + "";
        }
        else if (index == 3) {
            return this.equip.defense + "";
        }
        else if (index == 4) {
            return this.equip.hitPoint + "";
        }
        else if (index == 5) {
            return this.dropGold + "";
        }
        else if (index == 6) {
            return this.equip.crit + "";
        }
        else if (index == 7) {
            return this.offLineGold + "";
        }
        else if (index == 8) {
            return this.mergeEquip + "";
        }
    };
    TianFuSession.prototype.getNumber = function (index, p) {
        var lv = this.lvArr[index];
        if (lv == 0) {
            return 0;
        }
        var sys = App_1.default.getConfig(MyGameInit_1.default.sys_talent, lv);
        return sys[p];
    };
    /**
     * 升级任一天赋
     * -1 金币不够
     * -2 等级已经超了
     * 天赋的总等级 不能大于 装备的平均等级
     */
    TianFuSession.prototype.lvUp = function () {
        var gold = this.getLvUpGold();
        if (gold > this.bagSession.gold) {
            return -1;
        }
        if (this.canLvUp() == false) {
            return -2;
        }
        this.bagSession.changeGold(-gold, BagSession_1.GOLD_TYPE.TIANFU);
        this.lvTimes++;
        var index = Math.floor(Math.random() * this.lvArr.length);
        this.lvArr[index]++;
        this.dataSession.saveData();
        this.updateEquip();
        App_1.default.sendEvent(MyEvent_1.default.TALENT_UPDATE);
        return index;
    };
    TianFuSession.prototype.getLvUpGold = function () {
        var sys = App_1.default.getConfig(MyGameInit_1.default.sys_talentcost, this.lvTimes + 1);
        return sys.talentCost;
    };
    /**
     * 能升级吗
     */
    TianFuSession.prototype.canLvUp = function () {
        return this.lvTimes < this.bagSession.getAverageEquipLv();
    };
    TianFuSession.prototype.onGOLD_UPDATE = function () {
        this.check();
    };
    TianFuSession.prototype.onEQUIP_UPDATE = function () {
        this.check();
    };
    TianFuSession.prototype.checkGold = function () {
        if (this.bagSession.gold < this.getLvUpGold()) {
            return false;
        }
        return true;
    };
    TianFuSession.prototype.check = function (send) {
        if (send === void 0) { send = true; }
        if (this.bagSession.gold < this.getLvUpGold()) {
            return false;
        }
        if (this.canLvUp() == false) {
            return false;
        }
        if (send) {
            App_1.default.sendEvent(MyEvent_1.default.TIAN_FU_UPDATE);
        }
        return true;
    };
    return TianFuSession;
}(Session_1.default));
exports.default = TianFuSession;
},{"../../game/App":5,"../../game/Session":20,"../MyEvent":21,"../MyGameInit":22,"../config/SysConfig":23,"./BagSession":66}],77:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Session_1 = require("../../game/Session");
var BagSession_1 = require("./BagSession");
var App_1 = require("../../game/App");
var MyEvent_1 = require("../MyEvent");
var GameEvent_1 = require("../../game/GameEvent");
var MyGameInit_1 = require("../MyGameInit");
var TimeGoldSession = /** @class */ (function (_super) {
    __extends(TimeGoldSession, _super);
    function TimeGoldSession() {
        var _this = _super.call(this) || this;
        _this.bagSession = null;
        _this.battleSession = null;
        _this.dataSession = null;
        _this.newerSession = null;
        _this.tianFuSession = null;
        /**
         * 当前存储的金币数
         */
        _this.gold = 0;
        _this.reward_min = 0; //已经发金币到第几分钟
        _this.endTime = 0;
        _this.startTime = 0;
        App_1.default.onEvent(MyEvent_1.default.NEWER_INIT, _this, _this.initFun);
        App_1.default.onEvent(MyEvent_1.default.DATA_FROM_SERVER, _this, _this.dataServerFun);
        App_1.default.onEvent(GameEvent_1.default.ENTER_SCENE, _this, _this.enterSceneFun);
        return _this;
    }
    TimeGoldSession.prototype.enterSceneFun = function (url) {
        if (this.newerSession.isNew) {
            App_1.default.getInstance().eventManager.off(GameEvent_1.default.ENTER_SCENE, this, this.enterSceneFun);
            return;
        }
        if (url == MyGameInit_1.default.MainScene) {
            App_1.default.getInstance().eventManager.off(GameEvent_1.default.ENTER_SCENE, this, this.enterSceneFun);
            Laya.timer.once(100, this, this.timeFun);
        }
    };
    TimeGoldSession.prototype.timeFun = function () {
        App_1.default.getInstance().openDialogManager.openOnyByOne(MyGameInit_1.default.TimeGoldDialog);
    };
    /**
     * 初始化数据
     */
    TimeGoldSession.prototype.initFun = function () {
        this.startNewDay();
        this.goldTimeStart();
    };
    TimeGoldSession.prototype.loopFun = function () {
        var ctime = Math.min(Laya.Browser.now(), this.endTime);
        var now_min_time = this.getMinByTime(ctime);
        if (this.reward_min != now_min_time) {
            this.addGoldOnce();
            this.reward_min = now_min_time;
        }
    };
    /**
     * 游戏开始 开始计算钱
     */
    TimeGoldSession.prototype.dataServerFun = function () {
        this.startTime = this.endTime - TimeGoldSession.ONE_DAY;
        var nowMin = 0;
        if (this.endTime < Laya.Browser.now()) {
            nowMin = this.getMinByTime(this.endTime);
        }
        else {
            nowMin = this.getMinByTime(Laya.Browser.now());
        }
        var rgold = (nowMin - this.reward_min) * this.getOneGold();
        this.reward_min = nowMin;
        this.setGold(this.gold + rgold);
        this.goldTimeStart();
    };
    TimeGoldSession.prototype.goldTimeStart = function () {
        Laya.timer.frameLoop(1, this, this.loopFun);
    };
    /**
     * 得到所有金币
     */
    TimeGoldSession.prototype.rewardGold = function (useAd) {
        var agold = this.gold;
        if (useAd) {
            agold = this.gold * 3;
        }
        this.bagSession.changeGold(agold, BagSession_1.GOLD_TYPE.TIME_GOLD);
        this.setGold(0);
        if (this.endTime <= Laya.Browser.now()) {
            this.startNewDay();
        }
        this.dataSession.saveData();
    };
    TimeGoldSession.prototype.startNewDay = function () {
        this.endTime = Laya.Browser.now() + TimeGoldSession.ONE_DAY;
        this.startTime = this.endTime - TimeGoldSession.ONE_DAY;
        this.reward_min = 0;
    };
    /**
     * 精确当前时间 是一天中的第几分钟
     */
    TimeGoldSession.prototype.getMinByTime = function (time) {
        var t = time - this.startTime;
        return Math.floor(t / (60 * 1000));
    };
    TimeGoldSession.prototype.getNowTime = function () {
        if (this.endTime < Laya.Browser.now()) {
            return [0, 0, 0, 0];
        }
        // let now_min_time = this.getMinByTime( Laya.Browser.now() );
        // if( this.reward_min != now_min_time ){
        //     this.addGoldOnce();
        //     this.reward_min = now_min_time;
        // }
        var t = this.endTime - Laya.Browser.now();
        var arr = this.getLeft(t, 3600 * 1000);
        var hour = arr[0];
        arr = this.getLeft(arr[1], 60 * 1000);
        var min = arr[0];
        arr = this.getLeft(arr[1], 1000);
        var second = arr[0];
        arr = this.getLeft(arr[1], 1);
        var ms = arr[0];
        return [hour, min, second, ms];
    };
    /**
     * 时间到 加一次金币
     */
    TimeGoldSession.prototype.addGoldOnce = function () {
        this.setGold(this.gold + this.getOneGold());
        this.reward_min = this.getMinByTime(Laya.Browser.now());
        this.dataSession.saveData();
    };
    TimeGoldSession.prototype.getOneGold = function () {
        var max = this.battleSession.getMaxStageNumber();
        var addGold = Math.ceil(max / 2 + 1);
        addGold = addGold * (100 + this.tianFuSession.offLineGold) / 100;
        addGold = parseInt(addGold + "");
        return addGold;
    };
    TimeGoldSession.prototype.setGold = function (value) {
        this.gold = value;
        App_1.default.sendEvent(MyEvent_1.default.TIME_GOLD_UPDATE);
    };
    TimeGoldSession.prototype.getLeft = function (t, v) {
        var a = parseInt((t / v) + "");
        var b = t - a * v;
        return [a, b];
    };
    TimeGoldSession.ONE_DAY = 24 * 60 * 60 * 1000;
    return TimeGoldSession;
}(Session_1.default));
exports.default = TimeGoldSession;
},{"../../game/App":5,"../../game/GameEvent":9,"../../game/Session":20,"../MyEvent":21,"../MyGameInit":22,"./BagSession":66}],78:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Session_1 = require("../../game/Session");
var TreasureSession = /** @class */ (function (_super) {
    __extends(TreasureSession, _super);
    function TreasureSession() {
        var _this = _super.call(this) || this;
        _this.dataSession = null;
        _this.time = 0;
        Laya.timer.callLater(_this, _this.nextFun);
        return _this;
    }
    TreasureSession.prototype.nextFun = function () {
        this.dataSession.regAtt(this);
    };
    TreasureSession.prototype.getData = function () {
        return this.time + "";
    };
    TreasureSession.prototype.setData = function (value) {
        if (value == null) {
        }
        else {
            this.time = parseInt(value);
        }
    };
    TreasureSession.prototype.openBox = function () {
        this.time = Laya.Browser.now() + 3 * 60 * 60 * 1000;
    };
    TreasureSession.prototype.canOpen = function () {
        return this.time < Laya.Browser.now();
    };
    return TreasureSession;
}(Session_1.default));
exports.default = TreasureSession;
},{"../../game/Session":20}],79:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 子弹脚本，实现子弹飞行逻辑及对象池回收机制
 */
var Bullet = /** @class */ (function (_super) {
    __extends(Bullet, _super);
    function Bullet() {
        return _super.call(this) || this;
    }
    Bullet.prototype.onEnable = function () {
        //设置初始速度
        var rig = this.owner.getComponent(Laya.RigidBody);
        rig.setVelocity({ x: 0, y: -10 });
    };
    Bullet.prototype.onTriggerEnter = function (other, self, contact) {
        //如果被碰到，则移除子弹
        this.owner.removeSelf();
    };
    Bullet.prototype.onUpdate = function () {
        //如果子弹超出屏幕，则移除子弹
        if (this.owner.y < -10) {
            this.owner.removeSelf();
        }
    };
    Bullet.prototype.onDisable = function () {
        //子弹被移除时，回收子弹到对象池，方便下次复用，减少对象创建开销
        Laya.Pool.recover("bullet", this.owner);
    };
    return Bullet;
}(Laya.Script));
exports.default = Bullet;
},{}],80:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameUI_1 = require("./GameUI");
/**
 * 掉落盒子脚本，实现盒子碰撞及回收流程
 */
var DropBox = /** @class */ (function (_super) {
    __extends(DropBox, _super);
    function DropBox() {
        var _this = _super.call(this) || this;
        /**盒子等级 */
        _this.level = 1;
        return _this;
    }
    DropBox.prototype.onEnable = function () {
        /**获得组件引用，避免每次获取组件带来不必要的查询开销 */
        this._rig = this.owner.getComponent(Laya.RigidBody);
        this.level = Math.round(Math.random() * 5) + 1;
        this._text = this.owner.getChildByName("levelTxt");
        this._text.text = this.level + "";
    };
    DropBox.prototype.onUpdate = function () {
        //让持续盒子旋转
        this.owner.rotation++;
    };
    DropBox.prototype.onTriggerEnter = function (other, self, contact) {
        var owner = this.owner;
        if (other.label === "buttle") {
            //碰撞到子弹后，增加积分，播放声音特效
            if (this.level > 1) {
                this.level--;
                this._text.changeText(this.level + "");
                owner.getComponent(Laya.RigidBody).setVelocity({ x: 0, y: -10 });
                Laya.SoundManager.playSound("sound/hit.wav");
            }
            else {
                if (owner.parent) {
                    var effect = Laya.Pool.getItemByCreateFun("effect", this.createEffect, this);
                    effect.pos(owner.x, owner.y);
                    owner.parent.addChild(effect);
                    effect.play(0, true);
                    owner.removeSelf();
                    Laya.SoundManager.playSound("sound/destroy.wav");
                }
            }
            GameUI_1.default.instance.addScore(1);
        }
        else if (other.label === "ground") {
            //只要有一个盒子碰到地板，则停止游戏
            owner.removeSelf();
            GameUI_1.default.instance.stopGame();
        }
    };
    /**使用对象池创建爆炸动画 */
    DropBox.prototype.createEffect = function () {
        var ani = new Laya.Animation();
        ani.loadAnimation("test/TestAni.ani");
        ani.on(Laya.Event.COMPLETE, null, recover);
        function recover() {
            ani.removeSelf();
            Laya.Pool.recover("effect", ani);
        }
        return ani;
    };
    DropBox.prototype.onDisable = function () {
        //盒子被移除时，回收盒子到对象池，方便下次复用，减少对象创建开销。
        Laya.Pool.recover("dropBox", this.owner);
    };
    return DropBox;
}(Laya.Script));
exports.default = DropBox;
},{"./GameUI":82}],81:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 游戏控制脚本。定义了几个dropBox，bullet，createBoxInterval等变量，能够在IDE显示及设置该变量
 * 更多类型定义，请参考官方文档
 */
var GameControl = /** @class */ (function (_super) {
    __extends(GameControl, _super);
    function GameControl() {
        var _this = _super.call(this) || this;
        /** @prop {name:createBoxInterval,tips:"间隔多少毫秒创建一个下跌的容器",type:int,default:1000}*/
        _this.createBoxInterval = 1000;
        /**开始时间*/
        _this._time = 0;
        /**是否已经开始游戏 */
        _this._started = false;
        return _this;
    }
    GameControl.prototype.onEnable = function () {
        this._time = Date.now();
        this._gameBox = this.owner.getChildByName("gameBox");
    };
    GameControl.prototype.onUpdate = function () {
        //每间隔一段时间创建一个盒子
        var now = Date.now();
        if (now - this._time > this.createBoxInterval && this._started) {
            this._time = now;
            this.createBox();
        }
    };
    GameControl.prototype.createBox = function () {
        //使用对象池创建盒子
        var box = Laya.Pool.getItemByCreateFun("dropBox", this.dropBox.create, this.dropBox);
        box.pos(Math.random() * (Laya.stage.width - 100), -100);
        this._gameBox.addChild(box);
    };
    GameControl.prototype.onStageClick = function (e) {
        //停止事件冒泡，提高性能，当然也可以不要
        e.stopPropagation();
        //舞台被点击后，使用对象池创建子弹
        var flyer = Laya.Pool.getItemByCreateFun("bullet", this.bullet.create, this.bullet);
        flyer.pos(Laya.stage.mouseX, Laya.stage.mouseY);
        this._gameBox.addChild(flyer);
    };
    /**开始游戏，通过激活本脚本方式开始游戏*/
    GameControl.prototype.startGame = function () {
        if (!this._started) {
            this._started = true;
            this.enabled = true;
        }
    };
    /**结束游戏，通过非激活本脚本停止游戏 */
    GameControl.prototype.stopGame = function () {
        this._started = false;
        this.enabled = false;
        this.createBoxInterval = 1000;
        this._gameBox.removeChildren();
    };
    return GameControl;
}(Laya.Script));
exports.default = GameControl;
},{}],82:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("./../ui/layaMaxUI");
var GameControl_1 = require("./GameControl");
/**
 * 本示例采用非脚本的方式实现，而使用继承页面基类，实现页面逻辑。在IDE里面设置场景的Runtime属性即可和场景进行关联
 * 相比脚本方式，继承式页面类，可以直接使用页面定义的属性（通过IDE内var属性定义），比如this.tipLbll，this.scoreLbl，具有代码提示效果
 * 建议：如果是页面级的逻辑，需要频繁访问页面内多个元素，使用继承式写法，如果是独立小模块，功能单一，建议用脚本方式实现，比如子弹脚本。
 */
var GameUI = /** @class */ (function (_super) {
    __extends(GameUI, _super);
    function GameUI() {
        var _this = _super.call(this) || this;
        GameUI.instance = _this;
        //关闭多点触控，否则就无敌了
        Laya.MouseManager.multiTouchEnabled = false;
        return _this;
    }
    GameUI.prototype.onEnable = function () {
        this._control = this.getComponent(GameControl_1.default);
        //点击提示文字，开始游戏
        this.tipLbll.on(Laya.Event.CLICK, this, this.onTipClick);
    };
    GameUI.prototype.onTipClick = function (e) {
        this.tipLbll.visible = false;
        this._score = 0;
        this.scoreLbl.text = "";
        this._control.startGame();
    };
    /**增加分数 */
    GameUI.prototype.addScore = function (value) {
        if (value === void 0) { value = 1; }
        this._score += value;
        this.scoreLbl.changeText("分数：" + this._score);
        //随着分数越高，难度增大
        if (this._control.createBoxInterval > 600 && this._score % 20 == 0)
            this._control.createBoxInterval -= 20;
    };
    /**停止游戏 */
    GameUI.prototype.stopGame = function () {
        this.tipLbll.visible = true;
        this.tipLbll.text = "游戏结束了，点击屏幕重新开始";
        this._control.stopGame();
    };
    return GameUI;
}(layaMaxUI_1.ui.test.TestSceneUI));
exports.default = GameUI;
},{"./../ui/layaMaxUI":83,"./GameControl":81}],83:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui) {
    var GameUI0UI = /** @class */ (function (_super) {
        __extends(GameUI0UI, _super);
        function GameUI0UI() {
            return _super.call(this) || this;
        }
        GameUI0UI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.createView(GameUI0UI.uiView);
        };
        GameUI0UI.uiView = { "type": "View", "props": { "width": 750, "height": 1334 }, "compId": 2, "child": [{ "type": "Sprite", "props": { "y": 0, "x": 0, "texture": "loading/fei.jpg" }, "compId": 3 }], "loadList": ["loading/fei.jpg"], "loadList3D": [] };
        return GameUI0UI;
    }(Laya.View));
    ui.GameUI0UI = GameUI0UI;
    REG("ui.GameUI0UI", GameUI0UI);
})(ui = exports.ui || (exports.ui = {}));
(function (ui) {
    var scene;
    (function (scene) {
        var AdBtnViewUI = /** @class */ (function (_super) {
            __extends(AdBtnViewUI, _super);
            function AdBtnViewUI() {
                return _super.call(this) || this;
            }
            AdBtnViewUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(AdBtnViewUI.uiView);
            };
            AdBtnViewUI.uiView = { "type": "View", "props": { "width": 420, "isModal": true, "height": 150 }, "compId": 2, "child": [{ "type": "Button", "props": { "y": 72, "x": 211, "width": 363, "var": "AdBtn", "stateNum": 1, "skin": "sence/btn_zi.png", "sizeGrid": "18,19,20,18", "height": 94, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 13, "child": [{ "type": "Box", "props": { "y": 12.5, "x": 40.5, "var": "adbox" }, "compId": 36, "child": [{ "type": "Sprite", "props": { "texture": "sence/action.png" }, "compId": 20 }, { "type": "Sprite", "props": { "x": 86, "texture": "sence/mianfeishengji.png" }, "compId": 23 }] }, { "type": "Box", "props": { "y": 12.5, "x": 56, "width": 221, "var": "sharebox", "height": 65 }, "compId": 37, "child": [{ "type": "Sprite", "props": { "y": 2, "x": 25, "texture": "sence/fenxiangbiao.png" }, "compId": 34 }, { "type": "Sprite", "props": { "y": 0, "x": 124, "texture": "sence/fenxiangzi.png" }, "compId": 35 }] }] }], "animations": [{ "nodes": [{ "target": 13, "keyframes": { "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 13, "key": "scaleY", "index": 0 }, { "value": 1.2, "tweenMethod": "linearNone", "tween": true, "target": 13, "key": "scaleY", "index": 6 }, { "value": 0.9, "tweenMethod": "linearNone", "tween": true, "target": 13, "key": "scaleY", "index": 9 }, { "value": 1.1, "tweenMethod": "linearNone", "tween": true, "target": 13, "key": "scaleY", "index": 12 }, { "value": 0.9, "tweenMethod": "linearNone", "tween": true, "target": 13, "key": "scaleY", "index": 14 }, { "value": 1.1, "tweenMethod": "linearNone", "tween": true, "target": 13, "key": "scaleY", "index": 16 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 13, "key": "scaleY", "index": 17 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 13, "label": null, "key": "scaleY", "index": 45 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 13, "key": "scaleX", "index": 0 }, { "value": 1.2, "tweenMethod": "linearNone", "tween": true, "target": 13, "key": "scaleX", "index": 6 }, { "value": 0.9, "tweenMethod": "linearNone", "tween": true, "target": 13, "key": "scaleX", "index": 9 }, { "value": 1.1, "tweenMethod": "linearNone", "tween": true, "target": 13, "key": "scaleX", "index": 12 }, { "value": 0.9, "tweenMethod": "linearNone", "tween": true, "target": 13, "key": "scaleX", "index": 14 }, { "value": 1.1, "tweenMethod": "linearNone", "tween": true, "target": 13, "key": "scaleX", "index": 16 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 13, "key": "scaleX", "index": 17 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 13, "label": null, "key": "scaleX", "index": 45 }] } }], "name": "ani1", "id": 1, "frameRate": 24, "action": 0 }], "loadList": ["sence/btn_zi.png", "sence/action.png", "sence/mianfeishengji.png", "sence/fenxiangbiao.png", "sence/fenxiangzi.png"], "loadList3D": [] };
            return AdBtnViewUI;
        }(Laya.View));
        scene.AdBtnViewUI = AdBtnViewUI;
        REG("ui.scene.AdBtnViewUI", AdBtnViewUI);
        var AddHpDisplayUI = /** @class */ (function (_super) {
            __extends(AddHpDisplayUI, _super);
            function AddHpDisplayUI() {
                return _super.call(this) || this;
            }
            AddHpDisplayUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(AddHpDisplayUI.uiView);
            };
            AddHpDisplayUI.uiView = { "type": "View", "props": { "y": 0, "x": 0, "width": 162, "height": 256 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 79, "x": 1.5, "skin": "battlescene/jiexue.png" }, "compId": 3 }, { "type": "Box", "props": { "y": 3, "x": 73, "width": 16, "var": "hitBox", "height": 254 }, "compId": 5 }, { "type": "Image", "props": { "y": 28, "x": 81, "skin": "battlescene/Ljiexue.png", "blendMode": "lighter", "anchorY": 0.5, "anchorX": 0.5 }, "compId": 6 }], "animations": [{ "nodes": [{ "target": 6, "keyframes": { "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleY", "index": 0 }, { "value": 1.2, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleY", "index": 12 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "label": null, "key": "scaleY", "index": 24 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 0 }, { "value": 1.2, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 12 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "label": null, "key": "scaleX", "index": 24 }] } }], "name": "ani1", "id": 1, "frameRate": 24, "action": 0 }], "loadList": ["battlescene/jiexue.png", "battlescene/Ljiexue.png"], "loadList3D": [] };
            return AddHpDisplayUI;
        }(Laya.View));
        scene.AddHpDisplayUI = AddHpDisplayUI;
        REG("ui.scene.AddHpDisplayUI", AddHpDisplayUI);
        var AdMergeDialogUI = /** @class */ (function (_super) {
            __extends(AdMergeDialogUI, _super);
            function AdMergeDialogUI() {
                return _super.call(this) || this;
            }
            AdMergeDialogUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(AdMergeDialogUI.uiView);
            };
            AdMergeDialogUI.uiView = { "type": "Dialog", "props": { "width": 750, "isModal": true, "height": 1200 }, "compId": 2, "child": [{ "type": "Box", "props": { "y": -264, "x": -249, "scaleY": 0.85, "scaleX": 0.85 }, "compId": 33, "child": [{ "type": "LightView", "props": { "y": 742, "x": 742, "var": "light", "scaleY": 2, "scaleX": 2, "anchorY": 0.5, "anchorX": 0.5, "runtime": "ui.scene.LightViewUI" }, "compId": 4 }, { "type": "Image", "props": { "y": 359, "x": 394, "width": 682, "skin": "sence/kuangBG.png", "sizeGrid": "81,70,76,69", "height": 1024 }, "compId": 6 }, { "type": "Image", "props": { "y": 434, "x": 415.5, "width": 643, "skin": "sence/chuangkoubai.png", "sizeGrid": "20,23,19,22", "height": 913 }, "compId": 7 }, { "type": "Image", "props": { "y": 1070, "x": 412, "width": 642, "skin": "sence/baoxiangBG.png", "sizeGrid": "28,18,26,20", "height": 277, "alpha": 0.3 }, "compId": 10 }, { "type": "Sprite", "props": { "y": 350, "x": 522, "texture": "sence/biaotifu.png" }, "compId": 21 }, { "type": "Sprite", "props": { "y": 359, "x": 622, "texture": "sence/huodewuqi.png" }, "compId": 22 }, { "type": "Button", "props": { "y": 1228, "x": 643, "width": 174, "var": "cancelBtn", "stateNum": 1, "skin": "sence/btn_hong.png", "sizeGrid": "23,16,24,17", "name": "close", "height": 94 }, "compId": 24, "child": [{ "type": "Sprite", "props": { "y": 17.5, "x": 31.5, "texture": "sence/quxiaoda.png" }, "compId": 25 }] }, { "type": "Sprite", "props": { "y": 445, "x": 551, "texture": "sence/fazhen.png" }, "compId": 26 }, { "type": "Sprite", "props": { "y": 905, "x": 644, "texture": "sence/jiantouzi.png" }, "compId": 27 }, { "type": "Text", "props": { "y": 737, "x": 638, "width": 189, "var": "gongTxt", "text": "攻击力:1000", "height": 31, "fontSize": 32, "color": "#48280f", "bold": true, "runtime": "laya.display.Text" }, "compId": 28 }, { "type": "BagListCell", "props": { "y": 579, "x": 662, "var": "c1", "runtime": "ui.scene.BagListCellUI" }, "compId": 29 }, { "type": "BagListCell", "props": { "y": 905, "x": 448, "var": "c2", "runtime": "ui.scene.BagListCellUI" }, "compId": 30 }, { "type": "BagListCell", "props": { "y": 905, "x": 895, "var": "c3", "runtime": "ui.scene.BagListCellUI" }, "compId": 31 }, { "type": "AdBtnView", "props": { "y": 1078, "x": 513, "var": "v1", "runtime": "ui.scene.AdBtnViewUI" }, "compId": 32 }] }], "loadList": ["sence/kuangBG.png", "sence/chuangkoubai.png", "sence/baoxiangBG.png", "sence/biaotifu.png", "sence/huodewuqi.png", "sence/btn_hong.png", "sence/quxiaoda.png", "sence/fazhen.png", "sence/jiantouzi.png"], "loadList3D": [] };
            return AdMergeDialogUI;
        }(Laya.Dialog));
        scene.AdMergeDialogUI = AdMergeDialogUI;
        REG("ui.scene.AdMergeDialogUI", AdMergeDialogUI);
        var Attack2UI = /** @class */ (function (_super) {
            __extends(Attack2UI, _super);
            function Attack2UI() {
                return _super.call(this) || this;
            }
            Attack2UI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(Attack2UI.uiView);
            };
            Attack2UI.uiView = { "type": "View", "props": { "width": 200, "height": 500 }, "compId": 2, "child": [{ "type": "hongquan", "props": { "y": 449, "x": 0, "var": "redView", "runtime": "ui.scene.hongquanUI" }, "compId": 3 }, { "type": "Clip", "props": { "y": 448, "x": 97, "visible": false, "var": "clipZha", "skin": "monsterAni/20034/clip_huoqiuzha.png", "scaleY": 3, "scaleX": 3, "clipY": 3, "clipX": 5, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 4 }, { "type": "Clip", "props": { "y": 543, "x": 0, "var": "clip_luo", "skin": "monsterAni/20034/clip_huoqiu.png", "scaleY": 2, "scaleX": 2, "rotation": -90, "clipY": 3, "clipX": 3 }, "compId": 5, "child": [{ "type": "Box", "props": { "y": 31, "x": 48, "width": 32, "var": "hitBox", "height": 35 }, "compId": 11 }] }], "loadList": ["monsterAni/20034/clip_huoqiuzha.png", "monsterAni/20034/clip_huoqiu.png"], "loadList3D": [] };
            return Attack2UI;
        }(Laya.View));
        scene.Attack2UI = Attack2UI;
        REG("ui.scene.Attack2UI", Attack2UI);
        var BagListCellUI = /** @class */ (function (_super) {
            __extends(BagListCellUI, _super);
            function BagListCellUI() {
                return _super.call(this) || this;
            }
            BagListCellUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(BagListCellUI.uiView);
            };
            BagListCellUI.uiView = { "type": "View", "props": { "width": 150, "height": 150 }, "compId": 2, "child": [{ "type": "Box", "props": { "y": 75, "x": 75, "width": 150, "var": "box", "height": 150, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 13, "child": [{ "type": "hechengxuanzhong", "props": { "var": "canHeEffectView", "centerY": 0, "centerX": 0, "runtime": "ui.scene.hechengxuanzhongUI" }, "compId": 9 }, { "type": "Image", "props": { "var": "bgImg", "skin": "sence/zhuangbeikong.png", "centerY": 0, "centerX": 0 }, "compId": 6 }, { "type": "Image", "props": { "width": 110, "var": "logoImg", "height": 110, "centerY": 0, "centerX": 0 }, "compId": 8 }, { "type": "Image", "props": { "var": "selectImg", "skin": "sence/xuanzhong1.png", "centerY": 0, "centerX": 0 }, "compId": 4 }, { "type": "Image", "props": { "var": "useImg", "skin": "sence/shiyongzhong.png", "centerY": 0, "centerX": 0 }, "compId": 5 }, { "type": "Image", "props": { "y": 93, "x": 97, "var": "bg2Img", "skin": "sence/dengji.png" }, "compId": 3, "child": [{ "type": "FontClip", "props": { "y": 13.5, "x": -17, "width": 90, "var": "fc", "value": "99", "spaceX": -3, "skin": "sence/clip_shuzi.png", "sheet": "01234 56789", "scaleY": 0.8, "scaleX": 0.8, "height": 27, "align": "center" }, "compId": 14 }] }] }], "loadList": ["sence/zhuangbeikong.png", "sence/xuanzhong1.png", "sence/shiyongzhong.png", "sence/dengji.png", "sence/clip_shuzi.png"], "loadList3D": [] };
            return BagListCellUI;
        }(Laya.View));
        scene.BagListCellUI = BagListCellUI;
        REG("ui.scene.BagListCellUI", BagListCellUI);
        var BattleResUI = /** @class */ (function (_super) {
            __extends(BattleResUI, _super);
            function BattleResUI() {
                return _super.call(this) || this;
            }
            BattleResUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(BattleResUI.uiView);
            };
            BattleResUI.uiView = { "type": "View", "props": { "width": 100, "height": 100 }, "compId": 2, "child": [{ "type": "FontClip", "props": { "y": 100, "x": -103, "width": 0, "var": "f2", "value": "123x%", "skin": "battlescene/hurt1.png", "sheet": "0123 4567 89+- x1%=", "height": 0 }, "compId": 7 }, { "type": "FontClip", "props": { "y": -54, "x": -60, "var": "f1", "value": "1234%", "skin": "battlescene/hurt2.png", "sheet": "0123 4567 89+- x1=%" }, "compId": 8 }], "loadList": ["battlescene/hurt1.png", "battlescene/hurt2.png"], "loadList3D": [] };
            return BattleResUI;
        }(Laya.View));
        scene.BattleResUI = BattleResUI;
        REG("ui.scene.BattleResUI", BattleResUI);
        var BattleSceneUI = /** @class */ (function (_super) {
            __extends(BattleSceneUI, _super);
            function BattleSceneUI() {
                return _super.call(this) || this;
            }
            BattleSceneUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(BattleSceneUI.uiView);
            };
            BattleSceneUI.uiView = { "type": "View", "props": { "y": 0, "x": 0, "width": 750, "height": 1334 }, "compId": 2, "child": [{ "type": "Box", "props": { "var": "fightbox", "top": 0, "right": 0, "left": 0, "bottom": 0 }, "compId": 4, "child": [{ "type": "Sprite", "props": { "y": 0, "x": 0, "var": "battleSp" }, "compId": 109 }] }, { "type": "Box", "props": { "y": 972, "var": "blood", "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 29, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "var": "bloodDi", "skin": "battlescene/xuetiaodi.png" }, "compId": 16 }, { "type": "Image", "props": { "y": 0, "x": 0, "var": "bloodWhite", "skin": "battlescene/xuetiaochunbai.png" }, "compId": 99 }, { "type": "Image", "props": { "y": 0, "x": 0, "var": "bloodImg", "skin": "battlescene/xuetiaoding.png" }, "compId": 17 }, { "type": "Image", "props": { "y": 0, "x": 0, "skin": "battlescene/xuetiaodingbai.png" }, "compId": 84 }] }, { "type": "Sprite", "props": { "y": 27, "x": 380, "texture": "sence/qiandi.png" }, "compId": 46, "child": [{ "type": "FontClip", "props": { "y": 13.5, "x": 26, "width": 126, "var": "diamondFc", "value": "999999", "spaceX": -4, "skin": "sence/clip_shuzi.png", "sheet": "01234 56789", "height": 28, "align": "center" }, "compId": 47 }, { "type": "Sprite", "props": { "y": -10, "x": -25, "texture": "sence/dan.png" }, "compId": 80 }] }, { "type": "Button", "props": { "y": 190, "x": 84, "var": "setBtn", "stateNum": 1, "skin": "sence/zhandoushezhi.png", "scaleY": 1.3, "scaleX": 1.3, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 38 }, { "type": "Sprite", "props": { "y": 27, "x": 178, "var": "goldBox", "texture": "sence/qiandi.png" }, "compId": 41, "child": [{ "type": "FontClip", "props": { "y": 13.5, "x": 26, "width": 126, "var": "goldFc", "value": "999999", "spaceX": -4, "skin": "sence/clip_shuzi.png", "sheet": "01234 56789", "height": 28, "align": "center" }, "compId": 45 }, { "type": "Image", "props": { "y": 26, "x": -3, "var": "goldImg", "skin": "sence/jinbi.png", "anchorY": 0.5, "anchorX": 0.5 }, "compId": 79 }] }, { "type": "TimeLogo", "props": { "y": 123, "x": 613, "var": "gold", "runtime": "ui.scene.TimeLogoUI" }, "compId": 86 }, { "type": "Box", "props": { "y": 1017, "x": 86, "cacheAs": "bitmap" }, "compId": 98, "child": [{ "type": "Image", "props": { "var": "e0", "skin": "sence/kuang0.png" }, "compId": 10, "child": [{ "type": "Image", "props": { "skin": "icons/300004.png", "centerY": 0, "centerX": 0 }, "compId": 63 }] }, { "type": "Image", "props": { "y": 130, "x": -86, "skin": "battlescene/shuxianglan.png", "centerX": 0 }, "compId": 14, "child": [{ "type": "Text", "props": { "y": 95, "x": 11, "width": 105, "var": "l0", "valign": "middle", "text": "2000", "height": 56, "fontSize": 32, "color": "#ff5252", "align": "center", "runtime": "laya.display.Text" }, "compId": 70 }, { "type": "Text", "props": { "y": 95, "x": 121, "width": 105, "var": "l1", "valign": "middle", "text": "2000", "height": 56, "fontSize": 32, "color": "#ffde44", "align": "center", "runtime": "laya.display.Text" }, "compId": 75 }, { "type": "Text", "props": { "y": 95, "x": 239, "width": 105, "var": "l2", "valign": "middle", "text": "2000", "height": 56, "fontSize": 32, "color": "#8eceff", "align": "center", "runtime": "laya.display.Text" }, "compId": 76 }, { "type": "Text", "props": { "y": 95, "x": 346, "width": 105, "var": "l3", "valign": "middle", "text": "2000", "height": 56, "fontSize": 32, "color": "#c974ff", "align": "center", "runtime": "laya.display.Text" }, "compId": 77 }, { "type": "Text", "props": { "y": 95, "x": 452, "width": 105, "var": "l4", "valign": "middle", "text": "2000", "height": 56, "fontSize": 32, "color": "#9efa3a", "align": "center", "runtime": "laya.display.Text" }, "compId": 78 }] }, { "type": "Image", "props": { "x": 147, "var": "e1", "skin": "sence/kuang0.png" }, "compId": 64, "child": [{ "type": "Image", "props": { "skin": "icons/300004.png", "centerY": 0, "centerX": 0 }, "compId": 65 }] }, { "type": "Image", "props": { "x": 295, "var": "e2", "skin": "sence/kuang0.png" }, "compId": 66, "child": [{ "type": "Image", "props": { "skin": "icons/300004.png", "centerY": 0, "centerX": 0 }, "compId": 67 }] }, { "type": "Image", "props": { "x": 442, "var": "e3", "skin": "sence/kuang0.png" }, "compId": 68, "child": [{ "type": "Image", "props": { "skin": "icons/300004.png", "centerY": 0, "centerX": 0 }, "compId": 69 }] }] }, { "type": "Clip", "props": { "y": 624, "x": 28, "var": "guaJiClip", "skin": "battlescene/btn_guaji.png", "scaleY": 1.1, "scaleX": 1.1, "label": "label", "clipY": 2, "clipX": 1 }, "compId": 100 }, { "type": "Sprite", "props": { "y": 528, "x": 623.5, "visible": false, "var": "rightHand", "texture": "girl/xiangyou.png" }, "compId": 104 }, { "type": "Image", "props": { "x": 507.5, "visible": false, "var": "tiaoguo", "skin": "newhand/tiaoguo.png", "bottom": 412 }, "compId": 105 }, { "type": "Button", "props": { "y": 537, "x": -211, "width": 86, "visible": false, "var": "zhuanBtn", "stateNum": 1, "skin": "sence/zhuanpan.png", "height": 103 }, "compId": 106 }, { "type": "Box", "props": { "y": 537, "x": 93.5, "width": 133, "var": "btnBox", "height": 147, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 111, "child": [{ "type": "Button", "props": { "y": 69.75, "x": 61.5, "width": 82, "var": "roleBtn", "stateNum": 1, "skin": "sence/btn_juese.png", "scaleY": 1.5, "scaleX": 1.5, "height": 93, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 37, "child": [{ "type": "hongtan", "props": { "y": 8, "x": 41, "name": "red", "runtime": "ui.scene.hongtanUI" }, "compId": 94 }] }] }], "loadList": ["battlescene/xuetiaodi.png", "battlescene/xuetiaochunbai.png", "battlescene/xuetiaoding.png", "battlescene/xuetiaodingbai.png", "sence/qiandi.png", "sence/clip_shuzi.png", "sence/dan.png", "sence/zhandoushezhi.png", "sence/jinbi.png", "sence/kuang0.png", "icons/300004.png", "battlescene/shuxianglan.png", "battlescene/btn_guaji.png", "girl/xiangyou.png", "newhand/tiaoguo.png", "sence/zhuanpan.png", "sence/btn_juese.png"], "loadList3D": [] };
            return BattleSceneUI;
        }(Laya.View));
        scene.BattleSceneUI = BattleSceneUI;
        REG("ui.scene.BattleSceneUI", BattleSceneUI);
        var Boss1ViewUI = /** @class */ (function (_super) {
            __extends(Boss1ViewUI, _super);
            function Boss1ViewUI() {
                return _super.call(this) || this;
            }
            Boss1ViewUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(Boss1ViewUI.uiView);
            };
            Boss1ViewUI.uiView = { "type": "View", "props": { "width": 500, "height": 500 }, "compId": 2, "child": [{ "type": "Animation", "props": { "y": 500, "x": 246, "var": "bossAni", "source": "scene/monsterAni/20034.ani" }, "compId": 3 }, { "type": "Box", "props": { "y": 168, "x": 89, "width": 300, "var": "hitBox", "height": 300 }, "compId": 4 }, { "type": "MonsterBloodView", "props": { "y": 18, "x": 136.5, "var": "blood", "scaleY": 2, "runtime": "ui.scene.MonsterBloodViewUI" }, "compId": 5 }, { "type": "Sprite", "props": { "y": -32, "x": -155.5, "visible": false, "var": "talk", "texture": "girl/waitme.png" }, "compId": 7 }], "loadList": ["scene/monsterAni/20034.ani", "girl/waitme.png"], "loadList3D": [] };
            return Boss1ViewUI;
        }(Laya.View));
        scene.Boss1ViewUI = Boss1ViewUI;
        REG("ui.scene.Boss1ViewUI", Boss1ViewUI);
        var Boss2Atk1UI = /** @class */ (function (_super) {
            __extends(Boss2Atk1UI, _super);
            function Boss2Atk1UI() {
                return _super.call(this) || this;
            }
            Boss2Atk1UI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(Boss2Atk1UI.uiView);
            };
            Boss2Atk1UI.uiView = { "type": "View", "props": { "width": 500, "height": 500 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 310.5, "x": 250, "var": "dan", "skin": "monsterAni/20068/luo_001.png", "scaleY": 3, "scaleX": 3, "anchorY": 1, "anchorX": 0.5 }, "compId": 3, "child": [{ "type": "Box", "props": { "y": 217, "x": 48, "width": 152, "var": "hitbox", "height": 113 }, "compId": 9 }] }, { "type": "hongquan", "props": { "y": 450, "x": 150, "var": "redView", "runtime": "ui.scene.hongquanUI" }, "compId": 4 }, { "type": "Clip", "props": { "y": 486, "x": 250, "visible": false, "var": "clipZha", "skin": "monsterAni/20034/clip_huoqiuzha.png", "scaleY": 3, "scaleX": 3, "clipY": 3, "clipX": 5, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 6 }], "loadList": ["monsterAni/20068/luo_001.png", "monsterAni/20034/clip_huoqiuzha.png"], "loadList3D": [] };
            return Boss2Atk1UI;
        }(Laya.View));
        scene.Boss2Atk1UI = Boss2Atk1UI;
        REG("ui.scene.Boss2Atk1UI", Boss2Atk1UI);
        var Boss2Atk2UI = /** @class */ (function (_super) {
            __extends(Boss2Atk2UI, _super);
            function Boss2Atk2UI() {
                return _super.call(this) || this;
            }
            Boss2Atk2UI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(Boss2Atk2UI.uiView);
            };
            Boss2Atk2UI.uiView = { "type": "View", "props": { "width": 350, "height": 500 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 472, "x": 44, "var": "yinying", "skin": "monsterAni/20068/yinying.png", "scaleY": 2, "scaleX": 2 }, "compId": 5 }, { "type": "Image", "props": { "y": 326, "x": 175, "var": "img", "skin": "monsterAni/20068/zhuandao.png", "scaleY": 3, "scaleX": 3, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 3 }, { "type": "Box", "props": { "y": 206, "x": 55, "width": 242, "var": "hitbox", "height": 243 }, "compId": 4 }, { "type": "Clip", "props": { "y": 327.5, "x": 174, "visible": false, "var": "clipZha", "skin": "monsterAni/20034/clip_huoqiuzha.png", "scaleY": 3, "scaleX": 3, "clipY": 3, "clipX": 5, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 7 }], "loadList": ["monsterAni/20068/yinying.png", "monsterAni/20068/zhuandao.png", "monsterAni/20034/clip_huoqiuzha.png"], "loadList3D": [] };
            return Boss2Atk2UI;
        }(Laya.View));
        scene.Boss2Atk2UI = Boss2Atk2UI;
        REG("ui.scene.Boss2Atk2UI", Boss2Atk2UI);
        var Boss2DaoUI = /** @class */ (function (_super) {
            __extends(Boss2DaoUI, _super);
            function Boss2DaoUI() {
                return _super.call(this) || this;
            }
            Boss2DaoUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(Boss2DaoUI.uiView);
            };
            Boss2DaoUI.uiView = { "type": "View", "props": { "width": 300, "height": 400 }, "compId": 2, "child": [{ "type": "Animation", "props": { "y": 400, "x": 150, "var": "ani", "source": "scene/monsterAni/20068_1.ani" }, "compId": 3 }, { "type": "Box", "props": { "y": 69, "x": 126, "width": 60, "var": "hitBox", "height": 331 }, "compId": 4 }, { "type": "MonsterBloodView", "props": { "y": 55, "x": 103, "var": "blood", "scaleY": 1, "scaleX": 0.5, "runtime": "ui.scene.MonsterBloodViewUI" }, "compId": 7 }], "loadList": ["scene/monsterAni/20068_1.ani"], "loadList3D": [] };
            return Boss2DaoUI;
        }(Laya.View));
        scene.Boss2DaoUI = Boss2DaoUI;
        REG("ui.scene.Boss2DaoUI", Boss2DaoUI);
        var Boss2ViewUI = /** @class */ (function (_super) {
            __extends(Boss2ViewUI, _super);
            function Boss2ViewUI() {
                return _super.call(this) || this;
            }
            Boss2ViewUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(Boss2ViewUI.uiView);
            };
            Boss2ViewUI.uiView = { "type": "View", "props": { "width": 500, "height": 500 }, "compId": 2, "child": [{ "type": "MonsterBloodView", "props": { "y": 51, "x": 147, "var": "blood", "scaleY": 2, "runtime": "ui.scene.MonsterBloodViewUI" }, "compId": 3 }, { "type": "Box", "props": { "y": 169, "x": 120, "width": 279, "var": "hitBox", "height": 331 }, "compId": 4 }, { "type": "Animation", "props": { "y": 500, "x": 250, "var": "bossAni", "source": "scene/monsterAni/20068.ani" }, "compId": 6 }], "loadList": ["scene/monsterAni/20068.ani"], "loadList3D": [] };
            return Boss2ViewUI;
        }(Laya.View));
        scene.Boss2ViewUI = Boss2ViewUI;
        REG("ui.scene.Boss2ViewUI", Boss2ViewUI);
        var BossFireBallUI = /** @class */ (function (_super) {
            __extends(BossFireBallUI, _super);
            function BossFireBallUI() {
                return _super.call(this) || this;
            }
            BossFireBallUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(BossFireBallUI.uiView);
            };
            BossFireBallUI.uiView = { "type": "View", "props": { "width": 230, "height": 102 }, "compId": 2, "child": [{ "type": "Clip", "props": { "y": -22, "x": 0, "visible": false, "var": "clipZha", "skin": "monsterAni/20034/clip_huoqiuzha.png", "scaleY": 3, "scaleX": 3, "clipY": 3, "clipX": 5, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 4 }, { "type": "Clip", "props": { "y": -124, "x": -128, "var": "fireClip", "skin": "monsterAni/20034/clip_huoqiu.png", "scaleY": 2, "scaleX": 2, "clipY": 3, "clipX": 3 }, "compId": 3 }, { "type": "Box", "props": { "y": -51, "x": -13, "width": 105, "var": "hitBox", "height": 59 }, "compId": 5 }], "loadList": ["monsterAni/20034/clip_huoqiuzha.png", "monsterAni/20034/clip_huoqiu.png"], "loadList3D": [] };
            return BossFireBallUI;
        }(Laya.View));
        scene.BossFireBallUI = BossFireBallUI;
        REG("ui.scene.BossFireBallUI", BossFireBallUI);
        var BossFireBoomUI = /** @class */ (function (_super) {
            __extends(BossFireBoomUI, _super);
            function BossFireBoomUI() {
                return _super.call(this) || this;
            }
            BossFireBoomUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(BossFireBoomUI.uiView);
            };
            BossFireBoomUI.uiView = { "type": "View", "props": { "width": 100, "height": 100 }, "compId": 2, "child": [{ "type": "Clip", "props": { "y": 0, "x": 0, "skin": "monsterAni/20034/clip_huoqiuzha.png", "scaleY": 2, "scaleX": 2, "clipY": 3, "clipX": 5, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 3 }], "loadList": ["monsterAni/20034/clip_huoqiuzha.png"], "loadList3D": [] };
            return BossFireBoomUI;
        }(Laya.View));
        scene.BossFireBoomUI = BossFireBoomUI;
        REG("ui.scene.BossFireBoomUI", BossFireBoomUI);
        var BossStageViewUI = /** @class */ (function (_super) {
            __extends(BossStageViewUI, _super);
            function BossStageViewUI() {
                return _super.call(this) || this;
            }
            BossStageViewUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(BossStageViewUI.uiView);
            };
            BossStageViewUI.uiView = { "type": "View", "props": { "width": 200, "height": 200 }, "compId": 2, "child": [{ "type": "Box", "props": { "y": -29, "x": 33, "width": 201, "var": "box", "height": 284 }, "compId": 8, "child": [{ "type": "Button", "props": { "y": 163, "x": 66, "width": 132, "var": "s12", "stateNum": 1, "skin": "resselectstage/daguan.png", "height": 129, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 3 }, { "type": "Sprite", "props": { "y": 66, "x": 36, "texture": "resselectstage/boss.png", "scaleY": 0.8, "scaleX": 0.8 }, "compId": 7 }, { "type": "sanjiao", "props": { "y": 38, "x": 67, "visible": false, "var": "red", "runtime": "ui.scene.sanjiaoUI" }, "compId": 9 }] }], "loadList": ["resselectstage/daguan.png", "resselectstage/boss.png"], "loadList3D": [] };
            return BossStageViewUI;
        }(Laya.View));
        scene.BossStageViewUI = BossStageViewUI;
        REG("ui.scene.BossStageViewUI", BossStageViewUI);
        var BufferLayerUI = /** @class */ (function (_super) {
            __extends(BufferLayerUI, _super);
            function BufferLayerUI() {
                return _super.call(this) || this;
            }
            BufferLayerUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(BufferLayerUI.uiView);
            };
            BufferLayerUI.uiView = { "type": "View", "props": { "width": 200, "height": 200 }, "compId": 2, "child": [{ "type": "Animation", "props": { "y": 78, "x": 90, "visible": false, "var": "att", "source": "scene/texiao/jiagongji.ani", "scaleY": 1.5, "scaleX": 1.5 }, "compId": 3 }, { "type": "Animation", "props": { "y": 111, "x": 107, "visible": false, "var": "def", "source": "scene/texiao/jiafangyu.ani", "scaleY": 2, "scaleX": 2 }, "compId": 4 }, { "type": "Animation", "props": { "y": 46, "x": 90, "visible": false, "var": "addhp", "source": "scene/texiao/jiaxue.ani", "scaleY": 2, "scaleX": 2 }, "compId": 5 }, { "type": "Animation", "props": { "y": 53, "x": 101, "visible": false, "var": "speed", "source": "scene/texiao/jiasudu.ani", "scaleY": 2, "scaleX": 2 }, "compId": 6 }, { "type": "Animation", "props": { "y": 78, "x": 101, "visible": false, "var": "crit", "source": "scene/texiao/jiabaoji.ani", "scaleY": 2, "scaleX": 2 }, "compId": 7 }], "loadList": ["scene/texiao/jiagongji.ani", "scene/texiao/jiafangyu.ani", "scene/texiao/jiaxue.ani", "scene/texiao/jiasudu.ani", "scene/texiao/jiabaoji.ani"], "loadList3D": [] };
            return BufferLayerUI;
        }(Laya.View));
        scene.BufferLayerUI = BufferLayerUI;
        REG("ui.scene.BufferLayerUI", BufferLayerUI);
        var cheng6UI = /** @class */ (function (_super) {
            __extends(cheng6UI, _super);
            function cheng6UI() {
                return _super.call(this) || this;
            }
            cheng6UI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(cheng6UI.uiView);
            };
            cheng6UI.uiView = { "type": "View", "props": { "width": 160, "height": 160 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 80, "x": 80, "skin": "sence/liubei.png", "anchorY": 0.5, "anchorX": 0.5 }, "compId": 3 }], "animations": [{ "nodes": [{ "target": 3, "keyframes": { "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 20 }, { "value": 1.25, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 35 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 39 }, { "value": 1.15, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 43 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 46 }, { "value": 1.1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 48 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 51 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 20 }, { "value": 1.25, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 35 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 39 }, { "value": 1.15, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 43 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 46 }, { "value": 1.1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 48 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 51 }] } }], "name": "ani1", "id": 1, "frameRate": 60, "action": 2 }], "loadList": ["sence/liubei.png"], "loadList3D": [] };
            return cheng6UI;
        }(Laya.View));
        scene.cheng6UI = cheng6UI;
        REG("ui.scene.cheng6UI", cheng6UI);
        var chengsanUI = /** @class */ (function (_super) {
            __extends(chengsanUI, _super);
            function chengsanUI() {
                return _super.call(this) || this;
            }
            chengsanUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(chengsanUI.uiView);
            };
            chengsanUI.uiView = { "type": "View", "props": { "width": 160, "height": 160 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 80, "x": 80, "skin": "sence/sanbei.png", "anchorY": 0.5, "anchorX": 0.5 }, "compId": 3 }], "animations": [{ "nodes": [{ "target": 3, "keyframes": { "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 20 }, { "value": 1.25, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 35 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 39 }, { "value": 1.15, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 43 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 46 }, { "value": 1.1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 48 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 51 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 20 }, { "value": 1.25, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 35 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 39 }, { "value": 1.15, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 43 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 46 }, { "value": 1.1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 48 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 51 }] } }], "name": "ani1", "id": 1, "frameRate": 60, "action": 0 }], "loadList": ["sence/sanbei.png"], "loadList3D": [] };
            return chengsanUI;
        }(Laya.View));
        scene.chengsanUI = chengsanUI;
        REG("ui.scene.chengsanUI", chengsanUI);
        var chengshiUI = /** @class */ (function (_super) {
            __extends(chengshiUI, _super);
            function chengshiUI() {
                return _super.call(this) || this;
            }
            chengshiUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(chengshiUI.uiView);
            };
            chengshiUI.uiView = { "type": "View", "props": { "width": 160, "height": 160 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 80, "x": 80, "skin": "sence/shibei.png", "anchorY": 0.5, "anchorX": 0.5 }, "compId": 3 }], "animations": [{ "nodes": [{ "target": 3, "keyframes": { "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 20 }, { "value": 1.25, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 35 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 39 }, { "value": 1.15, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 43 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 46 }, { "value": 1.1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 48 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 51 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 20 }, { "value": 1.25, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 35 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 39 }, { "value": 1.15, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 43 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 46 }, { "value": 1.1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 48 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 51 }] } }], "name": "ani1", "id": 1, "frameRate": 60, "action": 0 }], "loadList": ["sence/shibei.png"], "loadList3D": [] };
            return chengshiUI;
        }(Laya.View));
        scene.chengshiUI = chengshiUI;
        REG("ui.scene.chengshiUI", chengshiUI);
        var dabaoxiangUI = /** @class */ (function (_super) {
            __extends(dabaoxiangUI, _super);
            function dabaoxiangUI() {
                return _super.call(this) || this;
            }
            dabaoxiangUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(dabaoxiangUI.uiView);
            };
            dabaoxiangUI.uiView = { "type": "View", "props": { "width": 350, "height": 350 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 175, "x": 175, "skin": "dabaoxiang/dabao.png", "anchorY": 0.5, "anchorX": 0.5 }, "compId": 3 }], "animations": [{ "nodes": [{ "target": 3, "keyframes": { "skin": [{ "value": "dabaoxiang/dabao.png", "tweenMethod": "linearNone", "tween": false, "target": 3, "key": "skin", "index": 0 }], "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "scaleY", "index": 40 }, { "value": 1.2, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 42 }, { "value": 1.2, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 56 }, { "value": 1.2, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "scaleY", "index": 67 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 70 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "scaleX", "index": 40 }, { "value": 1.2, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 42 }, { "value": 1.2, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 56 }, { "value": 1.2, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "scaleX", "index": 67 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 70 }], "rotation": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "rotation", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "rotation", "index": 40 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "rotation", "index": 42 }, { "value": -7, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "rotation", "index": 44 }, { "value": 12, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "rotation", "index": 46 }, { "value": -12, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "rotation", "index": 48 }, { "value": 13, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "rotation", "index": 50 }, { "value": -12, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "rotation", "index": 52 }, { "value": 14, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "rotation", "index": 54 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "rotation", "index": 56 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "rotation", "index": 67 }] } }], "name": "ani1", "id": 1, "frameRate": 60, "action": 0 }], "loadList": ["dabaoxiang/dabao.png"], "loadList3D": [] };
            return dabaoxiangUI;
        }(Laya.View));
        scene.dabaoxiangUI = dabaoxiangUI;
        REG("ui.scene.dabaoxiangUI", dabaoxiangUI);
        var daguaishouUI = /** @class */ (function (_super) {
            __extends(daguaishouUI, _super);
            function daguaishouUI() {
                return _super.call(this) || this;
            }
            daguaishouUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(daguaishouUI.uiView);
            };
            daguaishouUI.uiView = { "type": "View", "props": { "width": 750, "height": 500 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 68, "x": 0, "skin": "battlescene/laixiBG1.png" }, "compId": 3 }, { "type": "Image", "props": { "y": 96, "x": 33, "skin": "battlescene/laixiBG2.png" }, "compId": 4 }, { "type": "Image", "props": { "y": 253, "x": -9, "skin": "battlescene/daguaishou.png", "anchorY": 1, "anchorX": 1 }, "compId": 5 }, { "type": "Image", "props": { "y": 228.5, "x": 762, "skin": "battlescene/laixi.png", "anchorY": 1, "anchorX": 0 }, "compId": 6 }], "animations": [{ "nodes": [{ "target": 4, "keyframes": { "y": [{ "value": 92, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "y", "index": 0 }, { "value": 86, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "y", "index": 2 }, { "value": 86, "tweenMethod": "linearNone", "tween": true, "target": 4, "label": null, "key": "y", "index": 43 }, { "value": 86, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "y", "index": 47 }], "x": [{ "value": 750, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "x", "index": 0 }, { "value": 33, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "x", "index": 2 }, { "value": 33, "tweenMethod": "linearNone", "tween": true, "target": 4, "label": null, "key": "x", "index": 43 }, { "value": 751, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "x", "index": 47 }] } }, { "target": 3, "keyframes": { "y": [{ "value": 58, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 0 }], "x": [{ "value": -750, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "x", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "x", "index": 2 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "x", "index": 43 }, { "value": -750, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "x", "index": 47 }] } }, { "target": 5, "keyframes": { "y": [{ "value": 253, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 0 }, { "value": 253, "tweenMethod": "linearNone", "tween": true, "target": 5, "label": null, "key": "y", "index": 4 }, { "value": 241, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 7 }, { "value": 240.58408215661103, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 45 }, { "value": 233, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 48 }], "x": [{ "value": -9, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 0 }, { "value": -9, "tweenMethod": "linearNone", "tween": true, "target": 5, "label": null, "key": "x", "index": 4 }, { "value": 460, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 7 }, { "value": 524, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 10 }, { "value": 508.5263157894737, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 16 }, { "value": 508.5263157894737, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 45 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 48 }], "rotation": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "rotation", "index": 0 }, { "value": 17, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "rotation", "index": 4 }, { "value": 17, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "rotation", "index": 7 }, { "value": 17, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "rotation", "index": 10 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "rotation", "index": 12 }, { "value": 4, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "rotation", "index": 14 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "rotation", "index": 16 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 5, "label": null, "key": "rotation", "index": 45 }] } }, { "target": 6, "keyframes": { "y": [{ "value": 228.5, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "y", "index": 0 }, { "value": 228.5, "tweenMethod": "linearNone", "tween": true, "target": 6, "label": null, "key": "y", "index": 4 }, { "value": 227, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "y", "index": 6 }, { "value": 227.9042236763831, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "y", "index": 45 }, { "value": 230.70731707317074, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "y", "index": 48 }], "x": [{ "value": 762, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "x", "index": 0 }, { "value": 762, "tweenMethod": "linearNone", "tween": true, "target": 6, "label": null, "key": "x", "index": 4 }, { "value": 494, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "x", "index": 6 }, { "value": 508, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "x", "index": 11 }, { "value": 494.6111111111111, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "x", "index": 16 }, { "value": 494.6111111111111, "tweenMethod": "linearNone", "tween": true, "target": 6, "label": null, "key": "x", "index": 45 }, { "value": 786, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "x", "index": 48 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "label": null, "key": "scaleX", "index": 4 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 6 }, { "value": 0.2, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 8 }, { "value": 1.2, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 11 }, { "value": 0.9, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 13 }, { "value": 1.1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 15 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 16 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "label": null, "key": "scaleX", "index": 45 }] } }], "name": "ani1", "id": 1, "frameRate": 24, "action": 0 }], "loadList": ["battlescene/laixiBG1.png", "battlescene/laixiBG2.png", "battlescene/daguaishou.png", "battlescene/laixi.png"], "loadList3D": [] };
            return daguaishouUI;
        }(Laya.View));
        scene.daguaishouUI = daguaishouUI;
        REG("ui.scene.daguaishouUI", daguaishouUI);
        var DropBuffUI = /** @class */ (function (_super) {
            __extends(DropBuffUI, _super);
            function DropBuffUI() {
                return _super.call(this) || this;
            }
            DropBuffUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(DropBuffUI.uiView);
            };
            DropBuffUI.uiView = { "type": "View", "props": { "width": 220, "height": 200 }, "compId": 2, "child": [{ "type": "jiagong", "props": { "y": -21, "x": 0, "visible": false, "var": "gong", "runtime": "ui.scene.jiagongUI" }, "compId": 3 }, { "type": "jiabaoji", "props": { "y": -21, "x": 0, "visible": false, "var": "baoji", "runtime": "ui.scene.jiabaojiUI" }, "compId": 4 }, { "type": "jiafangyu", "props": { "y": -20, "x": 0, "visible": false, "var": "fangyu", "runtime": "ui.scene.jiafangyuUI" }, "compId": 5 }, { "type": "jiasudu", "props": { "y": -21, "x": 0, "visible": false, "var": "sudu", "runtime": "ui.scene.jiasuduUI" }, "compId": 6 }, { "type": "Box", "props": { "y": 0, "width": 10, "var": "hitBox", "height": 200, "centerX": 0 }, "compId": 7 }, { "type": "Image", "props": { "y": 157, "x": 110, "var": "img", "skin": "battlescene/gongjishi.png", "anchorY": 0.5, "anchorX": 0.5 }, "compId": 8 }], "loadList": ["battlescene/gongjishi.png"], "loadList3D": [] };
            return DropBuffUI;
        }(Laya.View));
        scene.DropBuffUI = DropBuffUI;
        REG("ui.scene.DropBuffUI", DropBuffUI);
        var DropItemUI = /** @class */ (function (_super) {
            __extends(DropItemUI, _super);
            function DropItemUI() {
                return _super.call(this) || this;
            }
            DropItemUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(DropItemUI.uiView);
            };
            DropItemUI.uiView = { "type": "View", "props": { "width": 100, "height": 80 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 80, "x": 50, "width": 74, "var": "di", "skin": "battlescene/ying.png", "height": 15, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 4 }, { "type": "Image", "props": { "y": 49, "x": 57, "var": "weapon", "skin": "icons/200022.png", "scaleY": 0.7, "scaleX": 0.7, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 3 }, { "type": "Image", "props": { "y": 61, "x": 49, "width": 123, "var": "head", "skin": "icons/300001.png", "scaleY": 0.7, "scaleX": 0.7, "height": 123, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 8 }, { "type": "Image", "props": { "y": 48, "x": 50, "width": 123, "var": "body", "skin": "icons/400022.png", "scaleY": 0.7, "scaleX": 0.7, "height": 123, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 9 }, { "type": "Image", "props": { "y": 49, "x": 54, "width": 123, "var": "horse", "skin": "icons/500022.png", "scaleY": 0.7, "scaleX": 0.7, "height": 123, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 11 }, { "type": "Image", "props": { "y": 39, "x": 32, "var": "egg", "skin": "sence/dan.png", "scaleY": 0.7, "scaleX": 0.7 }, "compId": 13 }, { "type": "Box", "props": { "y": 0, "x": 47, "width": 7, "var": "hitbox", "height": 80 }, "compId": 5 }], "loadList": ["battlescene/ying.png", "icons/200022.png", "icons/300001.png", "icons/400022.png", "icons/500022.png", "sence/dan.png"], "loadList3D": [] };
            return DropItemUI;
        }(Laya.View));
        scene.DropItemUI = DropItemUI;
        REG("ui.scene.DropItemUI", DropItemUI);
        var ErrorTipsUI = /** @class */ (function (_super) {
            __extends(ErrorTipsUI, _super);
            function ErrorTipsUI() {
                return _super.call(this) || this;
            }
            ErrorTipsUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(ErrorTipsUI.uiView);
            };
            ErrorTipsUI.uiView = { "type": "View", "props": { "y": 0, "x": 0, "width": 350, "height": 70 }, "compId": 2, "child": [{ "type": "Text", "props": { "y": 8, "x": 15, "width": 325, "var": "txt", "valign": "middle", "text": "金币不够", "height": 55, "fontSize": 30, "color": "#ffffff", "align": "center", "runtime": "laya.display.Text" }, "compId": 3 }, { "type": "Rect", "props": { "y": 0, "x": 0, "width": 350, "lineWidth": 1, "height": 70, "fillColor": "#000000" }, "compId": 4 }], "loadList": [], "loadList3D": [] };
            return ErrorTipsUI;
        }(Laya.View));
        scene.ErrorTipsUI = ErrorTipsUI;
        REG("ui.scene.ErrorTipsUI", ErrorTipsUI);
        var feibaoxiangUI = /** @class */ (function (_super) {
            __extends(feibaoxiangUI, _super);
            function feibaoxiangUI() {
                return _super.call(this) || this;
            }
            feibaoxiangUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(feibaoxiangUI.uiView);
            };
            feibaoxiangUI.uiView = { "type": "View", "props": { "width": 750, "height": 1334 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 333, "x": 404, "skin": "battlescene/youchi.png", "scaleY": 1, "rotation": 18, "anchorY": 0.8, "anchorX": 0, "alpha": 0.6 }, "compId": 5 }, { "type": "Image", "props": { "y": 348, "x": 367, "var": "box", "skin": "battlescene/feibaoxiang.png", "rotation": 15, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 3 }, { "type": "Image", "props": { "y": 331, "x": 336, "skin": "battlescene/zuochi.png", "scaleY": 1, "rotation": 18, "anchorY": 0.8, "anchorX": 1, "alpha": 0.6 }, "compId": 4 }], "animations": [{ "nodes": [{ "target": 4, "keyframes": { "y": [{ "value": 330, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "y", "index": 0 }, { "value": 372, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "y", "index": 20 }, { "value": 330, "tweenMethod": "linearNone", "tween": true, "target": 4, "label": null, "key": "y", "index": 40 }], "x": [{ "value": 336, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "x", "index": 0 }, { "value": 332, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "x", "index": 20 }, { "value": 336, "tweenMethod": "linearNone", "tween": true, "target": 4, "label": null, "key": "x", "index": 40 }], "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleY", "index": 0 }, { "value": -1, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleY", "index": 20 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 4, "label": null, "key": "scaleY", "index": 40 }], "rotation": [{ "value": 18, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "rotation", "index": 0 }, { "value": -41, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "rotation", "index": 20 }, { "value": 18, "tweenMethod": "linearNone", "tween": true, "target": 4, "label": null, "key": "rotation", "index": 40 }] } }, { "target": 3, "keyframes": { "y": [{ "value": 347, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 0 }, { "value": 391, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 20 }, { "value": 347, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "y", "index": 40 }], "x": [{ "value": 367, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "x", "index": 0 }, { "value": 363, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "x", "index": 20 }, { "value": 367, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "x", "index": 40 }] } }, { "target": 5, "keyframes": { "y": [{ "value": 334, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 0 }, { "value": 380, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 20 }, { "value": 334, "tweenMethod": "linearNone", "tween": true, "target": 5, "label": null, "key": "y", "index": 40 }], "x": [{ "value": 404, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 0 }, { "value": 400, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 20 }, { "value": 404, "tweenMethod": "linearNone", "tween": true, "target": 5, "label": null, "key": "x", "index": 40 }], "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "scaleY", "index": 0 }, { "value": -1, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "scaleY", "index": 20 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 5, "label": null, "key": "scaleY", "index": 40 }], "rotation": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "rotation", "index": 0 }, { "value": 32, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "rotation", "index": 20 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 5, "label": null, "key": "rotation", "index": 40 }] } }], "name": "ani1", "id": 1, "frameRate": 60, "action": 0 }], "loadList": ["battlescene/youchi.png", "battlescene/feibaoxiang.png", "battlescene/zuochi.png"], "loadList3D": [] };
            return feibaoxiangUI;
        }(Laya.View));
        scene.feibaoxiangUI = feibaoxiangUI;
        REG("ui.scene.feibaoxiangUI", feibaoxiangUI);
        var FlyBoxUI = /** @class */ (function (_super) {
            __extends(FlyBoxUI, _super);
            function FlyBoxUI() {
                return _super.call(this) || this;
            }
            FlyBoxUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(FlyBoxUI.uiView);
            };
            FlyBoxUI.uiView = { "type": "Dialog", "props": { "width": 750, "isModal": true, "height": 1200 }, "compId": 2, "child": [{ "type": "Box", "props": { "y": 15, "x": -260, "scaleY": 0.85, "scaleX": 0.85 }, "compId": 45, "child": [{ "type": "LightView", "props": { "y": 546, "x": 735.5, "var": "light", "scaleY": 2, "scaleX": 2, "anchorY": 0.5, "anchorX": 0.5, "runtime": "ui.scene.LightViewUI" }, "compId": 42 }, { "type": "Box", "props": { "y": 91, "x": 398, "width": 687, "height": 877 }, "compId": 36, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 682, "skin": "sence/kuangBG.png", "sizeGrid": "81,70,76,69", "height": 893 }, "compId": 5 }, { "type": "Image", "props": { "y": 95, "width": 643, "skin": "sence/chuangkoubai.png", "sizeGrid": "20,23,19,22", "height": 695, "centerX": -3 }, "compId": 27 }, { "type": "Image", "props": { "y": 201, "x": 123, "skin": "sence/jinbidai.png" }, "compId": 28 }, { "type": "Sprite", "props": { "y": 228, "x": 328, "texture": "flybox/hailiangjinbi.png" }, "compId": 29 }, { "type": "Sprite", "props": { "y": 431, "x": 330, "texture": "flybox/jipin.png" }, "compId": 30 }, { "type": "Sprite", "props": { "y": 401, "x": 276, "width": 146, "texture": "flybox/ZDguan.png", "scaleX": -1, "height": 143 }, "compId": 31 }, { "type": "Image", "props": { "y": 606, "x": 19, "width": 643, "skin": "sence/baoxiangBG.png", "sizeGrid": "28,18,26,20", "height": 184, "alpha": 0.3 }, "compId": 37 }, { "type": "Button", "props": { "y": 695, "x": 340.5, "width": 439, "var": "AdLingBtn", "stateNum": 1, "skin": "sence/btn_zi.png", "sizeGrid": "18,19,20,18", "height": 94, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 32, "child": [{ "type": "Sprite", "props": { "y": 14, "x": 59, "texture": "sence/action.png" }, "compId": 34 }, { "type": "Sprite", "props": { "y": 14, "x": 143, "texture": "flybox/mianling.png" }, "compId": 35 }] }, { "type": "Image", "props": { "y": -10, "x": 82, "width": 520, "skin": "sence/paihangbangdi.png", "sizeGrid": "0,171,0,173", "height": 117 }, "compId": 40 }, { "type": "Sprite", "props": { "y": 4, "x": 271, "texture": "flybox/xingyunbaoxiang.png" }, "compId": 41 }] }, { "type": "Button", "props": { "y": 888, "x": 435, "width": 80, "var": "closeBtn", "stateNum": 1, "skin": "sence/btn_guanbi.png", "name": "close", "height": 80 }, "compId": 44 }] }], "loadList": ["sence/kuangBG.png", "sence/chuangkoubai.png", "sence/jinbidai.png", "flybox/hailiangjinbi.png", "flybox/jipin.png", "flybox/ZDguan.png", "sence/baoxiangBG.png", "sence/btn_zi.png", "sence/action.png", "flybox/mianling.png", "sence/paihangbangdi.png", "flybox/xingyunbaoxiang.png", "sence/btn_guanbi.png"], "loadList3D": [] };
            return FlyBoxUI;
        }(Laya.Dialog));
        scene.FlyBoxUI = FlyBoxUI;
        REG("ui.scene.FlyBoxUI", FlyBoxUI);
        var GetGoldDialogUI = /** @class */ (function (_super) {
            __extends(GetGoldDialogUI, _super);
            function GetGoldDialogUI() {
                return _super.call(this) || this;
            }
            GetGoldDialogUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(GetGoldDialogUI.uiView);
            };
            GetGoldDialogUI.uiView = { "type": "Dialog", "props": { "width": 700, "isModal": true, "height": 1000 }, "compId": 2, "child": [{ "type": "LightView", "props": { "y": 336, "x": 346, "var": "light", "anchorY": 0.5, "anchorX": 0.5, "runtime": "ui.scene.LightViewUI" }, "compId": 20 }, { "type": "Image", "props": { "y": 333, "var": "logo", "skin": "sence/jinbidai.png", "centerX": 0, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 5 }, { "type": "FontClip", "props": { "y": 410, "x": 217, "width": 133, "var": "goldFc", "value": "99999", "spaceX": -4, "skin": "sence/clip_shuzi.png", "sheet": "01234 56789", "scaleY": 2, "scaleX": 2, "height": 24, "align": "center" }, "compId": 6 }, { "type": "Button", "props": { "y": 559, "x": 350, "width": 229, "var": "btn", "stateNum": 1, "skin": "sence/btn_lv.png", "sizeGrid": "18,19,20,18", "name": "close", "height": 56, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 7, "child": [{ "type": "Sprite", "props": { "y": 14, "x": 85.5, "texture": "sence/queding.png" }, "compId": 10 }] }, { "type": "Sprite", "props": { "y": 105, "x": 149.5, "texture": "sence/biaotifu.png" }, "compId": 11, "child": [{ "type": "Image", "props": { "y": 8, "skin": "sence/gongxihuode.png", "centerX": -1 }, "compId": 12 }] }, { "type": "Image", "props": { "y": 483, "x": 357.5, "var": "equipTxtImg", "skin": "sence/jingying.png", "anchorY": 0.5, "anchorX": 0.5 }, "compId": 14 }], "loadList": ["sence/jinbidai.png", "sence/clip_shuzi.png", "sence/btn_lv.png", "sence/queding.png", "sence/biaotifu.png", "sence/gongxihuode.png", "sence/jingying.png"], "loadList3D": [] };
            return GetGoldDialogUI;
        }(Laya.Dialog));
        scene.GetGoldDialogUI = GetGoldDialogUI;
        REG("ui.scene.GetGoldDialogUI", GetGoldDialogUI);
        var GetItemDialogUI = /** @class */ (function (_super) {
            __extends(GetItemDialogUI, _super);
            function GetItemDialogUI() {
                return _super.call(this) || this;
            }
            GetItemDialogUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(GetItemDialogUI.uiView);
            };
            GetItemDialogUI.uiView = { "type": "Dialog", "props": { "width": 750, "isModal": true, "height": 1300 }, "compId": 2, "child": [{ "type": "Sprite", "props": { "y": 0, "x": 174, "texture": "sence/biaotifu.png" }, "compId": 3, "child": [{ "type": "Image", "props": { "y": 8, "skin": "sence/gongxihuode.png", "centerX": -1 }, "compId": 4 }] }, { "type": "Button", "props": { "y": 1244, "x": 375, "width": 229, "var": "btn", "stateNum": 1, "skin": "sence/btn_lv.png", "sizeGrid": "18,19,20,18", "name": "close", "height": 65, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 5, "child": [{ "type": "Sprite", "props": { "y": 14, "x": 85.5, "texture": "sence/queding.png" }, "compId": 6 }] }, { "type": "Box", "props": { "y": 96, "x": 0, "width": 750, "var": "box", "height": 1096 }, "compId": 30 }], "loadList": ["sence/biaotifu.png", "sence/gongxihuode.png", "sence/btn_lv.png", "sence/queding.png"], "loadList3D": [] };
            return GetItemDialogUI;
        }(Laya.Dialog));
        scene.GetItemDialogUI = GetItemDialogUI;
        REG("ui.scene.GetItemDialogUI", GetItemDialogUI);
        var GetItemViewUI = /** @class */ (function (_super) {
            __extends(GetItemViewUI, _super);
            function GetItemViewUI() {
                return _super.call(this) || this;
            }
            GetItemViewUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(GetItemViewUI.uiView);
            };
            GetItemViewUI.uiView = { "type": "View", "props": { "width": 700, "height": 700 }, "compId": 2, "child": [{ "type": "LightView", "props": { "y": 346, "x": 356, "var": "light", "blendMode": "lighter", "anchorY": 0.5, "anchorX": 0.5, "runtime": "ui.scene.LightViewUI" }, "compId": 7 }, { "type": "Image", "props": { "y": 346, "x": 360, "var": "logo", "skin": "sence/jinbidai.png", "anchorY": 0.5, "anchorX": 0.5 }, "compId": 8 }, { "type": "FontClip", "props": { "y": 446, "x": 234, "width": 133, "var": "goldFc", "value": "99999", "spaceX": -4, "skin": "sence/clip_shuzi.png", "sheet": "01234 56789", "scaleY": 2, "scaleX": 2, "height": 24, "align": "center" }, "compId": 9 }, { "type": "Image", "props": { "y": 493, "x": 367, "var": "equipTxtImg", "skin": "sence/jingying.png", "anchorY": 0.5, "anchorX": 0.5 }, "compId": 11 }], "loadList": ["sence/jinbidai.png", "sence/clip_shuzi.png", "sence/jingying.png"], "loadList3D": [] };
            return GetItemViewUI;
        }(Laya.View));
        scene.GetItemViewUI = GetItemViewUI;
        REG("ui.scene.GetItemViewUI", GetItemViewUI);
        var GrilViewUI = /** @class */ (function (_super) {
            __extends(GrilViewUI, _super);
            function GrilViewUI() {
                return _super.call(this) || this;
            }
            GrilViewUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(GrilViewUI.uiView);
            };
            GrilViewUI.uiView = { "type": "View", "props": { "width": 750, "height": 1334 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 1136, "x": 0, "width": 750, "var": "talkbg", "skin": "girl/heia.jpg", "sizeGrid": "1,1,1,1", "height": 198, "alpha": 0.9 }, "compId": 7, "child": [{ "type": "Text", "props": { "y": 42.5, "x": 221, "wordWrap": true, "width": 420, "var": "txt", "text": "你还在磨蹭什么？魔龙开始侵袭！ 赶紧去增援！", "height": 113, "fontSize": 30, "color": "#ffffff", "runtime": "laya.display.Text" }, "compId": 17 }] }, { "type": "Image", "props": { "var": "girl", "skin": "girl/yindaoyuan.png", "left": 0, "bottom": 0 }, "compId": 3, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "var": "nu", "skin": "girl/yindaoyuan1.png" }, "compId": 4 }, { "type": "Image", "props": { "y": 0, "x": 0, "var": "xiao", "skin": "girl/yindaoyuan2.png" }, "compId": 5 }, { "type": "Image", "props": { "y": 0, "x": 0, "var": "daxiao", "skin": "girl/yindaoyuan3.png" }, "compId": 6 }] }, { "type": "Box", "props": { "width": 750, "var": "box1", "top": 0, "left": 0, "bottom": 0 }, "compId": 12, "child": [{ "type": "Image", "props": { "width": 375, "var": "rightImg", "top": 0, "right": 0, "bottom": 0, "alpha": 0.8 }, "compId": 10 }, { "type": "Image", "props": { "y": 531, "x": 599, "skin": "girl/xiangyou.png" }, "compId": 9 }, { "type": "Image", "props": { "width": 375, "var": "leftImg", "top": -1, "left": 0, "bottom": 0, "alpha": 0.2 }, "compId": 11 }, { "type": "Image", "props": { "y": 532, "x": 46, "skin": "girl/xiangzuo.png" }, "compId": 8 }, { "type": "Sprite", "props": { "y": 647, "x": 562.5, "texture": "girl/xiangyouzou.png" }, "compId": 22 }, { "type": "Sprite", "props": { "y": 647, "x": 43, "texture": "girl/xiangzuozou.png" }, "compId": 23 }] }], "loadList": ["girl/heia.jpg", "girl/yindaoyuan.png", "girl/yindaoyuan1.png", "girl/yindaoyuan2.png", "girl/yindaoyuan3.png", "girl/xiangyou.png", "girl/xiangzuo.png", "girl/xiangyouzou.png", "girl/xiangzuozou.png"], "loadList3D": [] };
            return GrilViewUI;
        }(Laya.View));
        scene.GrilViewUI = GrilViewUI;
        REG("ui.scene.GrilViewUI", GrilViewUI);
        var hechengUI = /** @class */ (function (_super) {
            __extends(hechengUI, _super);
            function hechengUI() {
                return _super.call(this) || this;
            }
            hechengUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(hechengUI.uiView);
            };
            hechengUI.uiView = { "type": "View", "props": { "y": 120, "x": 102, "width": 205, "height": 240, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 60, "x": 40.5, "var": "kuang", "skin": "sence/kuang1.png" }, "compId": 4 }, { "type": "Image", "props": { "y": 120, "x": 102, "var": "he3", "skin": "icons/200004.png", "anchorY": 0.5, "anchorX": 0.5, "alpha": 0 }, "compId": 9 }, { "type": "Image", "props": { "y": 121, "x": 102, "var": "he2", "skin": "icons/200004.png", "scaleY": 1.6, "scaleX": 1.6, "anchorY": 0.5, "anchorX": 0.5, "alpha": 0 }, "compId": 7 }, { "type": "Image", "props": { "y": 121, "x": 102, "var": "he1", "skin": "icons/200005.png", "scaleY": 1, "scaleX": 1, "anchorY": 0.5, "anchorX": 0.5, "alpha": 1 }, "compId": 5 }, { "type": "Image", "props": { "y": 122, "x": 102, "var": "bian", "skin": "icons/200005.png", "scaleY": 1, "scaleX": 1, "anchorY": 0.5, "anchorX": 0.5, "alpha": 1 }, "compId": 12 }, { "type": "Clip", "props": { "y": 2, "x": 0, "width": 206, "var": "hechengguang", "skin": "sence/clip_he.png", "height": 206, "clipY": 4, "clipX": 4, "blendMode": "lighter", "autoPlay": true }, "compId": 10 }], "animations": [{ "nodes": [{ "target": 5, "keyframes": { "y": [{ "value": 121, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 0 }, { "value": 121, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 7 }, { "value": 121, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 13 }, { "value": 121, "tweenMethod": "linearNone", "tween": true, "target": 5, "label": null, "key": "y", "index": 17 }], "x": [{ "value": 102, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 0 }, { "value": 252, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 7 }, { "value": 266, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 13 }, { "value": 102, "tweenMethod": "linearNone", "tween": true, "target": 5, "label": null, "key": "x", "index": 17 }], "skin": [{ "value": "icons/200004.png", "tweenMethod": "linearNone", "tween": false, "target": 5, "key": "skin", "index": 0 }, { "value": "icons/200004.png", "tweenMethod": "linearNone", "tween": false, "target": 5, "label": null, "key": "skin", "index": 17 }, { "value": "icons/200005.png", "tweenMethod": "linearNone", "tween": false, "target": 5, "key": "skin", "index": 22 }], "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "scaleY", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 5, "label": null, "key": "scaleY", "index": 17 }, { "value": 1.6, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "scaleY", "index": 21 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "scaleY", "index": 24 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "scaleX", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 5, "label": null, "key": "scaleX", "index": 17 }, { "value": 1.6, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "scaleX", "index": 21 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "scaleX", "index": 24 }], "alpha": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "alpha", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 5, "label": null, "key": "alpha", "index": 17 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "alpha", "index": 23 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "alpha", "index": 24 }] } }, { "target": 7, "keyframes": { "y": [{ "value": 121, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "y", "index": 0 }, { "value": 121.5, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "y", "index": 7 }, { "value": 121.5, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "y", "index": 13 }, { "value": 121, "tweenMethod": "linearNone", "tween": true, "target": 7, "label": null, "key": "y", "index": 17 }], "x": [{ "value": 102, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "x", "index": 0 }, { "value": -49, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "x", "index": 7 }, { "value": -61.5, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "x", "index": 13 }, { "value": 102, "tweenMethod": "linearNone", "tween": true, "target": 7, "label": null, "key": "x", "index": 17 }], "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "scaleY", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 7, "label": null, "key": "scaleY", "index": 17 }, { "value": 1.6, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "scaleY", "index": 21 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "scaleX", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 7, "label": null, "key": "scaleX", "index": 17 }, { "value": 1.6, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "scaleX", "index": 21 }], "alpha": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "alpha", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 7, "label": null, "key": "alpha", "index": 17 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "alpha", "index": 22 }] } }, { "target": 9, "keyframes": { "alpha": [{ "value": 0.3, "tweenMethod": "linearNone", "tween": true, "target": 9, "key": "alpha", "index": 0 }, { "value": 0.3, "tweenMethod": "linearNone", "tween": true, "target": 9, "key": "alpha", "index": 22 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 9, "key": "alpha", "index": 23 }] } }, { "target": 12, "keyframes": { "alpha": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 12, "key": "alpha", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 12, "key": "alpha", "index": 23 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 12, "key": "alpha", "index": 24 }] } }], "name": "ani1", "id": 1, "frameRate": 60, "action": 0 }], "loadList": ["sence/kuang1.png", "icons/200004.png", "icons/200005.png", "sence/clip_he.png"], "loadList3D": [] };
            return hechengUI;
        }(Laya.View));
        scene.hechengUI = hechengUI;
        REG("ui.scene.hechengUI", hechengUI);
        var hechengxuanzhongUI = /** @class */ (function (_super) {
            __extends(hechengxuanzhongUI, _super);
            function hechengxuanzhongUI() {
                return _super.call(this) || this;
            }
            hechengxuanzhongUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(hechengxuanzhongUI.uiView);
            };
            hechengxuanzhongUI.uiView = { "type": "View", "props": { "y": 90, "x": 90, "width": 180, "scaleY": 1, "scaleX": 1, "height": 180, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 90, "x": 90, "skin": "sence/xuanzhong1.png", "scaleY": 1.08, "scaleX": 1.08, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 4 }], "animations": [{ "nodes": [{ "target": 2, "keyframes": { "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "scaleY", "index": 0 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "scaleX", "index": 0 }] } }, { "target": 4, "keyframes": { "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleY", "index": 0 }, { "value": 1.1, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleY", "index": 15 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleY", "index": 30 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleX", "index": 0 }, { "value": 1.1, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleX", "index": 15 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleX", "index": 30 }] } }], "name": "ani1", "id": 1, "frameRate": 60, "action": 0 }], "loadList": ["sence/xuanzhong1.png"], "loadList3D": [] };
            return hechengxuanzhongUI;
        }(Laya.View));
        scene.hechengxuanzhongUI = hechengxuanzhongUI;
        REG("ui.scene.hechengxuanzhongUI", hechengxuanzhongUI);
        var HitEffectViewUI = /** @class */ (function (_super) {
            __extends(HitEffectViewUI, _super);
            function HitEffectViewUI() {
                return _super.call(this) || this;
            }
            HitEffectViewUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(HitEffectViewUI.uiView);
            };
            HitEffectViewUI.uiView = { "type": "View", "props": { "y": 136, "x": 136, "width": 272, "height": 273, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 2, "child": [{ "type": "Animation", "props": { "y": 136.5, "x": 136, "source": "scene/texiao/gongji.ani", "scaleY": 2, "scaleX": 2 }, "compId": 4 }], "loadList": ["scene/texiao/gongji.ani"], "loadList3D": [] };
            return HitEffectViewUI;
        }(Laya.View));
        scene.HitEffectViewUI = HitEffectViewUI;
        REG("ui.scene.HitEffectViewUI", HitEffectViewUI);
        var hongquanUI = /** @class */ (function (_super) {
            __extends(hongquanUI, _super);
            function hongquanUI() {
                return _super.call(this) || this;
            }
            hongquanUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(hongquanUI.uiView);
            };
            hongquanUI.uiView = { "type": "View", "props": { "width": 200, "height": 100 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 50, "x": 100, "skin": "monsterAni/20034/hongdian.png", "anchorY": 0.5, "anchorX": 0.5 }, "compId": 3 }], "animations": [{ "nodes": [{ "target": 3, "keyframes": { "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 0 }, { "value": 0.8, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 5 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "scaleY", "index": 10 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 0 }, { "value": 0.8, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 5 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "scaleX", "index": 10 }], "alpha": [{ "value": 0.8, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "alpha", "index": 0 }, { "value": 0.5, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "alpha", "index": 5 }, { "value": 0.8, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "alpha", "index": 10 }] } }], "name": "ani1", "id": 1, "frameRate": 24, "action": 0 }], "loadList": ["monsterAni/20034/hongdian.png"], "loadList3D": [] };
            return hongquanUI;
        }(Laya.View));
        scene.hongquanUI = hongquanUI;
        REG("ui.scene.hongquanUI", hongquanUI);
        var hongtanUI = /** @class */ (function (_super) {
            __extends(hongtanUI, _super);
            function hongtanUI() {
                return _super.call(this) || this;
            }
            hongtanUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(hongtanUI.uiView);
            };
            hongtanUI.uiView = { "type": "View", "props": { "width": 50, "height": 100 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 82, "x": 25, "skin": "sence/hongtan.png", "anchorY": 1, "anchorX": 0.5 }, "compId": 3 }], "animations": [{ "nodes": [{ "target": 3, "keyframes": { "y": [{ "value": 100, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "y", "index": 0 }, { "value": 100, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 19 }], "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "scaleY", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 19 }, { "value": 1.2, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 24 }, { "value": 0.9, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 28 }, { "value": 1.1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 32 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 35 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "scaleX", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 19 }, { "value": 1.2, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 24 }, { "value": 0.9, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 28 }, { "value": 1.1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 32 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 35 }] } }], "name": "ani1", "id": 1, "frameRate": 24, "action": 0 }], "loadList": ["sence/hongtan.png"], "loadList3D": [] };
            return hongtanUI;
        }(Laya.View));
        scene.hongtanUI = hongtanUI;
        REG("ui.scene.hongtanUI", hongtanUI);
        var jiabaojiUI = /** @class */ (function (_super) {
            __extends(jiabaojiUI, _super);
            function jiabaojiUI() {
                return _super.call(this) || this;
            }
            jiabaojiUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(jiabaojiUI.uiView);
            };
            jiabaojiUI.uiView = { "type": "View", "props": { "width": 220, "height": 270 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 220, "x": 110, "skin": "battlescene/ying.png", "anchorY": 0.5, "anchorX": 0.5 }, "compId": 6 }, { "type": "Image", "props": { "y": 104, "x": 40, "skin": "battlescene/fazhenbaoji.png" }, "compId": 3 }, { "type": "Box", "props": { "y": 99, "x": 40 }, "compId": 7, "child": [{ "type": "Image", "props": { "y": 2, "x": -1, "skin": "battlescene/baojishi.png" }, "compId": 4 }, { "type": "Image", "props": { "y": 2, "x": -1, "skin": "battlescene/baojiguang.png", "blendMode": "lighter" }, "compId": 5 }] }], "animations": [{ "nodes": [{ "target": 7, "keyframes": { "y": [{ "value": 99, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "y", "index": 0 }, { "value": 92, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "y", "index": 25 }, { "value": 99, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "y", "index": 50 }] } }, { "target": 6, "keyframes": { "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleY", "index": 0 }, { "value": 0.7, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleY", "index": 25 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleY", "index": 50 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 0 }, { "value": 0.7, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 25 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 50 }] } }], "name": "ani1", "id": 1, "frameRate": 60, "action": 0 }], "loadList": ["battlescene/ying.png", "battlescene/fazhenbaoji.png", "battlescene/baojishi.png", "battlescene/baojiguang.png"], "loadList3D": [] };
            return jiabaojiUI;
        }(Laya.View));
        scene.jiabaojiUI = jiabaojiUI;
        REG("ui.scene.jiabaojiUI", jiabaojiUI);
        var jiafangyuUI = /** @class */ (function (_super) {
            __extends(jiafangyuUI, _super);
            function jiafangyuUI() {
                return _super.call(this) || this;
            }
            jiafangyuUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(jiafangyuUI.uiView);
            };
            jiafangyuUI.uiView = { "type": "View", "props": { "width": 220, "height": 270 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 220, "x": 110, "skin": "battlescene/ying.png", "anchorY": 0.5, "anchorX": 0.5 }, "compId": 6 }, { "type": "Image", "props": { "y": 104, "x": 40, "skin": "battlescene/fazhenfangyu.png" }, "compId": 3 }, { "type": "Box", "props": { "y": 99, "x": 40 }, "compId": 7, "child": [{ "type": "Image", "props": { "y": 18, "x": 0, "skin": "battlescene/fangyushi.png" }, "compId": 4 }, { "type": "Image", "props": { "y": 18, "x": 0, "skin": "battlescene/fangyuguang.png", "blendMode": "lighter" }, "compId": 5 }] }], "animations": [{ "nodes": [{ "target": 7, "keyframes": { "y": [{ "value": 99, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "y", "index": 0 }, { "value": 92, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "y", "index": 25 }, { "value": 99, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "y", "index": 50 }] } }, { "target": 6, "keyframes": { "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleY", "index": 0 }, { "value": 0.7, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleY", "index": 25 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleY", "index": 50 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 0 }, { "value": 0.7, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 25 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 50 }] } }], "name": "ani1", "id": 1, "frameRate": 60, "action": 0 }], "loadList": ["battlescene/ying.png", "battlescene/fazhenfangyu.png", "battlescene/fangyushi.png", "battlescene/fangyuguang.png"], "loadList3D": [] };
            return jiafangyuUI;
        }(Laya.View));
        scene.jiafangyuUI = jiafangyuUI;
        REG("ui.scene.jiafangyuUI", jiafangyuUI);
        var jiagongUI = /** @class */ (function (_super) {
            __extends(jiagongUI, _super);
            function jiagongUI() {
                return _super.call(this) || this;
            }
            jiagongUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(jiagongUI.uiView);
            };
            jiagongUI.uiView = { "type": "View", "props": { "width": 220, "height": 270 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 220, "x": 110, "skin": "battlescene/ying.png", "anchorY": 0.5, "anchorX": 0.5 }, "compId": 6 }, { "type": "Image", "props": { "y": 110, "x": 40, "skin": "battlescene/fazhen.png" }, "compId": 3 }, { "type": "Box", "props": { "y": 99, "x": 40 }, "compId": 7, "child": [{ "type": "Image", "props": { "skin": "battlescene/gongjishi.png" }, "compId": 4 }, { "type": "Image", "props": { "skin": "battlescene/gongjiguang.png", "blendMode": "lighter" }, "compId": 5 }] }], "animations": [{ "nodes": [{ "target": 7, "keyframes": { "y": [{ "value": 99, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "y", "index": 0 }, { "value": 92, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "y", "index": 25 }, { "value": 99, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "y", "index": 50 }] } }, { "target": 6, "keyframes": { "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleY", "index": 0 }, { "value": 0.7, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleY", "index": 25 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleY", "index": 50 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 0 }, { "value": 0.7, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 25 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 50 }] } }], "name": "ani1", "id": 1, "frameRate": 60, "action": 0 }], "loadList": ["battlescene/ying.png", "battlescene/fazhen.png", "battlescene/gongjishi.png", "battlescene/gongjiguang.png"], "loadList3D": [] };
            return jiagongUI;
        }(Laya.View));
        scene.jiagongUI = jiagongUI;
        REG("ui.scene.jiagongUI", jiagongUI);
        var jiasuduUI = /** @class */ (function (_super) {
            __extends(jiasuduUI, _super);
            function jiasuduUI() {
                return _super.call(this) || this;
            }
            jiasuduUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(jiasuduUI.uiView);
            };
            jiasuduUI.uiView = { "type": "View", "props": { "width": 220, "height": 270 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 220, "x": 110, "skin": "battlescene/ying.png", "anchorY": 0.5, "anchorX": 0.5 }, "compId": 6 }, { "type": "Image", "props": { "y": 104, "x": 40, "skin": "battlescene/fazhenminjie.png" }, "compId": 3 }, { "type": "Box", "props": { "y": 99, "x": 40 }, "compId": 7, "child": [{ "type": "Image", "props": { "y": 8, "x": -1, "skin": "battlescene/sudushi.png" }, "compId": 4 }, { "type": "Image", "props": { "y": 8, "x": -1, "skin": "battlescene/suduguang.png", "blendMode": "lighter" }, "compId": 5 }] }], "animations": [{ "nodes": [{ "target": 7, "keyframes": { "y": [{ "value": 99, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "y", "index": 0 }, { "value": 92, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "y", "index": 25 }, { "value": 99, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "y", "index": 50 }] } }, { "target": 6, "keyframes": { "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleY", "index": 0 }, { "value": 0.7, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleY", "index": 25 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleY", "index": 50 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 0 }, { "value": 0.7, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 25 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 50 }] } }], "name": "ani1", "id": 1, "frameRate": 60, "action": 0 }], "loadList": ["battlescene/ying.png", "battlescene/fazhenminjie.png", "battlescene/sudushi.png", "battlescene/suduguang.png"], "loadList3D": [] };
            return jiasuduUI;
        }(Laya.View));
        scene.jiasuduUI = jiasuduUI;
        REG("ui.scene.jiasuduUI", jiasuduUI);
        var KillBossDialogUI = /** @class */ (function (_super) {
            __extends(KillBossDialogUI, _super);
            function KillBossDialogUI() {
                return _super.call(this) || this;
            }
            KillBossDialogUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(KillBossDialogUI.uiView);
            };
            KillBossDialogUI.uiView = { "type": "Dialog", "props": { "width": 750, "isModal": true, "height": 1000 }, "compId": 2, "child": [{ "type": "LightView", "props": { "y": 570, "x": 367, "var": "light", "anchorY": 0.5, "anchorX": 0.5, "runtime": "ui.scene.LightViewUI" }, "compId": 9 }, { "type": "NBbaoxiang", "props": { "y": 0, "x": 0, "var": "baoxiang", "runtime": "ui.scene.NBbaoxiangUI" }, "compId": 6 }, { "type": "Image", "props": { "y": 15, "x": 63, "width": 624, "skin": "sence/paihangbangdi.png", "sizeGrid": "0,165,0,175", "height": 117 }, "compId": 7 }, { "type": "Sprite", "props": { "y": 29.5, "x": 292, "texture": "sence/bossjisha.png" }, "compId": 3 }], "loadList": ["sence/paihangbangdi.png", "sence/bossjisha.png"], "loadList3D": [] };
            return KillBossDialogUI;
        }(Laya.Dialog));
        scene.KillBossDialogUI = KillBossDialogUI;
        REG("ui.scene.KillBossDialogUI", KillBossDialogUI);
        var LightViewUI = /** @class */ (function (_super) {
            __extends(LightViewUI, _super);
            function LightViewUI() {
                return _super.call(this) || this;
            }
            LightViewUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(LightViewUI.uiView);
            };
            LightViewUI.uiView = { "type": "View", "props": { "width": 742, "height": 742 }, "compId": 2, "child": [{ "type": "Sprite", "props": { "y": 0, "x": 0, "texture": "shengli/guangzhuan1.png" }, "compId": 3 }, { "type": "Sprite", "props": { "y": 0, "x": 742, "texture": "shengli/guangzhuan1.png", "scaleX": -1 }, "compId": 4 }, { "type": "Sprite", "props": { "y": 742, "x": 0, "texture": "shengli/guangzhuan1.png", "scaleY": -1 }, "compId": 5 }, { "type": "Sprite", "props": { "y": 742, "x": 742, "texture": "shengli/guangzhuan1.png", "scaleY": -1, "scaleX": -1 }, "compId": 7 }], "loadList": ["shengli/guangzhuan1.png"], "loadList3D": [] };
            return LightViewUI;
        }(Laya.View));
        scene.LightViewUI = LightViewUI;
        REG("ui.scene.LightViewUI", LightViewUI);
        var loadingUI = /** @class */ (function (_super) {
            __extends(loadingUI, _super);
            function loadingUI() {
                return _super.call(this) || this;
            }
            loadingUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(loadingUI.uiView);
            };
            loadingUI.uiView = { "type": "View", "props": { "width": 750, "height": 1334 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 1138, "x": 0, "skin": "loading/shan.png" }, "compId": 4 }, { "type": "Clip", "props": { "y": 1302, "x": -51, "var": "c1", "skin": "loading/clip_mapao.png", "scaleY": 0.5, "scaleX": 0.5, "interval": 100, "clipY": 2, "clipX": 3, "autoPlay": true, "anchorY": 1, "anchorX": 0.5 }, "compId": 5, "child": [{ "type": "Clip", "props": { "y": 189, "x": 73, "var": "c2", "skin": "loading/clip_huoxing.png", "interval": 100, "clipY": 2, "clipX": 3, "autoPlay": true, "anchorY": 1, "anchorX": 1 }, "compId": 13 }] }, { "type": "Image", "props": { "y": 1211.5, "x": 91, "skin": "loading/feiguai.png", "rotation": -6, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 7 }, { "type": "Image", "props": { "y": 1247, "x": 200, "skin": "loading/feiguai.png", "rotation": 29, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 8 }, { "type": "Image", "props": { "y": 1213.5, "x": 329, "skin": "loading/feiguai.png", "rotation": -42, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 9 }, { "type": "Image", "props": { "y": 1167, "x": 438, "skin": "loading/feiguai.png", "rotation": 0, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 10 }, { "type": "Image", "props": { "y": 1230, "x": 559, "skin": "loading/feiguai.png", "rotation": 35, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 11 }, { "type": "Image", "props": { "y": 1227, "x": 677, "skin": "loading/feiguai.png", "rotation": 0, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 12 }], "animations": [{ "nodes": [{ "target": 5, "keyframes": { "y": [{ "value": 1302, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 0 }, { "value": 1241, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 10 }, { "value": 1247, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 17 }, { "value": 1268.5, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 20 }, { "value": 1302, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 26 }, { "value": 1269.5, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 30 }, { "value": 1196.5, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 39 }, { "value": 1204.7727272727273, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 45 }, { "value": 1257.5, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 50 }, { "value": 1299, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 55 }, { "value": 1250.5, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 60 }, { "value": 1313, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 70 }], "x": [{ "value": -51, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 0 }, { "value": 72, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 10 }, { "value": 153, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 17 }, { "value": 189, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 20 }, { "value": 262, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 26 }, { "value": 550, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 50 }, { "value": 601, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 55 }, { "value": 669, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 60 }, { "value": 801, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 70 }], "rotation": [{ "value": -29, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "rotation", "index": 0 }, { "value": -13, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "rotation", "index": 10 }, { "value": 25, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "rotation", "index": 17 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "rotation", "index": 26 }, { "value": -41, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "rotation", "index": 30 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "rotation", "index": 39 }, { "value": 26, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "rotation", "index": 45 }, { "value": 58, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "rotation", "index": 50 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "rotation", "index": 55 }, { "value": -32, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "rotation", "index": 57 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "rotation", "index": 60 }, { "value": 35, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "rotation", "index": 63 }] } }, { "target": 7, "keyframes": { "y": [{ "value": 1211.5, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "y", "index": 0 }, { "value": 1211.5, "tweenMethod": "linearNone", "tween": true, "target": 7, "label": null, "key": "y", "index": 10 }, { "value": 871, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "y", "index": 21 }, { "value": 902, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "y", "index": 32 }], "x": [{ "value": 91, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "x", "index": 0 }, { "value": 91, "tweenMethod": "linearNone", "tween": true, "target": 7, "label": null, "key": "x", "index": 10 }, { "value": 629, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "x", "index": 21 }, { "value": 930, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "x", "index": 32 }], "rotation": [{ "value": -6, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "rotation", "index": 0 }, { "value": -6, "tweenMethod": "linearNone", "tween": true, "target": 7, "label": null, "key": "rotation", "index": 10 }, { "value": 360, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "rotation", "index": 32 }], "alpha": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "alpha", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "alpha", "index": 21 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "alpha", "index": 32 }] } }, { "target": 8, "keyframes": { "y": [{ "value": 1247, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "y", "index": 0 }, { "value": 1247, "tweenMethod": "linearNone", "tween": true, "target": 8, "label": null, "key": "y", "index": 18 }, { "value": 797, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "y", "index": 28 }, { "value": 726, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "y", "index": 40 }], "x": [{ "value": 200, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "x", "index": 0 }, { "value": 200, "tweenMethod": "linearNone", "tween": true, "target": 8, "label": null, "key": "x", "index": 18 }, { "value": 535, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "x", "index": 28 }, { "value": 930, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "x", "index": 40 }], "rotation": [{ "value": 29, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "rotation", "index": 0 }, { "value": 29, "tweenMethod": "linearNone", "tween": true, "target": 8, "label": null, "key": "rotation", "index": 18 }, { "value": 389, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "rotation", "index": 40 }], "alpha": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "alpha", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "alpha", "index": 28 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "alpha", "index": 40 }] } }, { "target": 9, "keyframes": { "y": [{ "value": 1213.5, "tweenMethod": "linearNone", "tween": true, "target": 9, "key": "y", "index": 0 }, { "value": 1213.5, "tweenMethod": "linearNone", "tween": true, "target": 9, "label": null, "key": "y", "index": 32 }, { "value": 804, "tweenMethod": "linearNone", "tween": true, "target": 9, "key": "y", "index": 40 }, { "value": 947, "tweenMethod": "linearNone", "tween": true, "target": 9, "key": "y", "index": 49 }], "x": [{ "value": 329, "tweenMethod": "linearNone", "tween": true, "target": 9, "key": "x", "index": 0 }, { "value": 329, "tweenMethod": "linearNone", "tween": true, "target": 9, "label": null, "key": "x", "index": 32 }, { "value": 823, "tweenMethod": "linearNone", "tween": true, "target": 9, "key": "x", "index": 40 }, { "value": 930, "tweenMethod": "linearNone", "tween": true, "target": 9, "key": "x", "index": 49 }], "rotation": [{ "value": -42, "tweenMethod": "linearNone", "tween": true, "target": 9, "key": "rotation", "index": 0 }, { "value": -42, "tweenMethod": "linearNone", "tween": true, "target": 9, "label": null, "key": "rotation", "index": 32 }, { "value": 360, "tweenMethod": "linearNone", "tween": true, "target": 9, "key": "rotation", "index": 49 }] } }, { "target": 10, "keyframes": { "y": [{ "value": 1167, "tweenMethod": "linearNone", "tween": true, "target": 10, "key": "y", "index": 0 }, { "value": 1167, "tweenMethod": "linearNone", "tween": true, "target": 10, "label": null, "key": "y", "index": 38 }, { "value": 806, "tweenMethod": "linearNone", "tween": true, "target": 10, "key": "y", "index": 49 }], "x": [{ "value": 438, "tweenMethod": "linearNone", "tween": true, "target": 10, "key": "x", "index": 0 }, { "value": 438, "tweenMethod": "linearNone", "tween": true, "target": 10, "label": null, "key": "x", "index": 38 }, { "value": 882, "tweenMethod": "linearNone", "tween": true, "target": 10, "key": "x", "index": 49 }], "rotation": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 10, "key": "rotation", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 10, "label": null, "key": "rotation", "index": 38 }, { "value": 360, "tweenMethod": "linearNone", "tween": true, "target": 10, "key": "rotation", "index": 49 }] } }, { "target": 11, "keyframes": { "y": [{ "value": 1230, "tweenMethod": "linearNone", "tween": true, "target": 11, "key": "y", "index": 0 }, { "value": 1230, "tweenMethod": "linearNone", "tween": true, "target": 11, "label": null, "key": "y", "index": 47 }, { "value": 1002, "tweenMethod": "linearNone", "tween": true, "target": 11, "key": "y", "index": 59 }], "x": [{ "value": 559, "tweenMethod": "linearNone", "tween": true, "target": 11, "key": "x", "index": 0 }, { "value": 559, "tweenMethod": "linearNone", "tween": true, "target": 11, "label": null, "key": "x", "index": 47 }, { "value": 988, "tweenMethod": "linearNone", "tween": true, "target": 11, "key": "x", "index": 59 }], "rotation": [{ "value": 35, "tweenMethod": "linearNone", "tween": true, "target": 11, "key": "rotation", "index": 0 }, { "value": 35, "tweenMethod": "linearNone", "tween": true, "target": 11, "label": null, "key": "rotation", "index": 47 }, { "value": 400, "tweenMethod": "linearNone", "tween": true, "target": 11, "key": "rotation", "index": 59 }] } }, { "target": 12, "keyframes": { "y": [{ "value": 1227, "tweenMethod": "linearNone", "tween": true, "target": 12, "key": "y", "index": 0 }, { "value": 1227, "tweenMethod": "linearNone", "tween": true, "target": 12, "label": null, "key": "y", "index": 59 }, { "value": 1057, "tweenMethod": "linearNone", "tween": true, "target": 12, "key": "y", "index": 69 }], "x": [{ "value": 677, "tweenMethod": "linearNone", "tween": true, "target": 12, "key": "x", "index": 0 }, { "value": 677, "tweenMethod": "linearNone", "tween": true, "target": 12, "label": null, "key": "x", "index": 59 }, { "value": 1101, "tweenMethod": "linearNone", "tween": true, "target": 12, "key": "x", "index": 69 }], "rotation": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 12, "key": "rotation", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 12, "label": null, "key": "rotation", "index": 59 }, { "value": 360, "tweenMethod": "linearNone", "tween": true, "target": 12, "key": "rotation", "index": 69 }] } }], "name": "ani1", "id": 1, "frameRate": 24, "action": 0 }], "loadList": ["loading/shan.png", "loading/clip_mapao.png", "loading/clip_huoxing.png", "loading/feiguai.png"], "loadList3D": [] };
            return loadingUI;
        }(Laya.View));
        scene.loadingUI = loadingUI;
        REG("ui.scene.loadingUI", loadingUI);
        var Loading2UI = /** @class */ (function (_super) {
            __extends(Loading2UI, _super);
            function Loading2UI() {
                return _super.call(this) || this;
            }
            Loading2UI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(Loading2UI.uiView);
            };
            Loading2UI.uiView = { "type": "View", "props": { "width": 750, "height": 1334 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "var": "bg", "skin": "loading/fei.jpg" }, "compId": 4 }, { "type": "Image", "props": { "width": 750, "skin": "loading/shan.png", "sizeGrid": "190,0,0,0", "height": 340, "bottom": 0 }, "compId": 14 }, { "type": "Image", "props": { "y": 10, "x": 10, "skin": "loading/loadzi.png", "centerX": 0, "bottom": 67 }, "compId": 7 }, { "type": "Image", "props": { "y": 567, "x": 375, "width": 138, "var": "zhuan", "skin": "loading/zhuan.png", "scaleY": 1.3, "scaleX": 1.3, "height": 138, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 10 }, { "type": "Text", "props": { "y": 705, "x": 324, "text": "加载中", "strokeColor": "#000000", "stroke": 4, "fontSize": 40, "color": "#ffffff", "runtime": "laya.display.Text" }, "compId": 13 }, { "type": "Text", "props": { "y": 547, "x": 312, "width": 127, "var": "jindu", "text": "99%", "strokeColor": "#000000", "stroke": 4, "height": 40, "fontSize": 40, "color": "#ffffff", "align": "center", "runtime": "laya.display.Text" }, "compId": 18 }, { "type": "Text", "props": { "y": 99, "x": 122, "wordWrap": true, "width": 525, "valign": "middle", "text": "冲锋吧!勇士", "strokeColor": "#000000", "stroke": 15, "height": 312, "fontSize": 150, "color": "#f9f6f6", "bold": true, "align": "center", "runtime": "laya.display.Text" }, "compId": 19 }], "loadList": ["loading/fei.jpg", "loading/shan.png", "loading/loadzi.png", "loading/zhuan.png"], "loadList3D": [] };
            return Loading2UI;
        }(Laya.View));
        scene.Loading2UI = Loading2UI;
        REG("ui.scene.Loading2UI", Loading2UI);
        var LoadViewUI = /** @class */ (function (_super) {
            __extends(LoadViewUI, _super);
            function LoadViewUI() {
                return _super.call(this) || this;
            }
            LoadViewUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(LoadViewUI.uiView);
            };
            LoadViewUI.uiView = { "type": "View", "props": { "width": 138, "height": 138 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 69, "x": 69, "var": "img", "skin": "sence/jiazai.png", "anchorY": 0.5, "anchorX": 0.5 }, "compId": 3 }], "loadList": ["sence/jiazai.png"], "loadList3D": [] };
            return LoadViewUI;
        }(Laya.View));
        scene.LoadViewUI = LoadViewUI;
        REG("ui.scene.LoadViewUI", LoadViewUI);
        var MainSceneUI = /** @class */ (function (_super) {
            __extends(MainSceneUI, _super);
            function MainSceneUI() {
                return _super.call(this) || this;
            }
            MainSceneUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(MainSceneUI.uiView);
            };
            MainSceneUI.uiView = { "type": "View", "props": { "width": 750, "height": 1800 }, "compId": 2, "child": [{ "type": "Image", "props": { "skin": "mainscene/daBG.jpg", "centerY": 0, "centerX": 0 }, "compId": 13, "child": [{ "type": "Image", "props": { "y": 1126, "x": 376, "width": 218, "var": "zhuanImg", "skin": "mainscene/chuansongmen.png", "height": 218, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 93 }, { "type": "Button", "props": { "y": 773.5, "x": 386, "width": 304, "var": "stage2", "stateNum": 1, "skin": "mainscene/fuben3.png", "height": 244 }, "compId": 74, "child": [{ "type": "MainScene_1", "props": { "y": 0, "x": -0.9499999999999886, "var": "Stage2Mv", "runtime": "ui.scene.MainScene_1UI" }, "compId": 101 }, { "type": "Image", "props": { "y": 46.5, "x": 52, "width": 200, "skin": "sence/fuben1biao.png", "sizeGrid": "0,20,0,28", "height": 47 }, "compId": 83, "child": [{ "type": "Sprite", "props": { "y": 5, "x": 46.5, "texture": "sence/diwanglingmu.png" }, "compId": 84 }] }, { "type": "Poly", "props": { "y": 27, "x": 0, "renderType": "hit", "points": "15,154,69,-7,262,14,300,160,210,210", "lineWidth": 1, "lineColor": "#ff0000", "fillColor": "#00ffff" }, "compId": 97 }] }, { "type": "Button", "props": { "y": 950, "x": 229, "var": "stage1", "stateNum": 1, "skin": "mainscene/fuben1.png" }, "compId": 75, "child": [{ "type": "Poly", "props": { "y": 18, "x": 124, "renderType": "hit", "points": "-68,4,32,-18,118,10,158,51,171,85,165,220,-101,221,-117,85,-102,47", "lineWidth": 1, "lineColor": "#ff0000", "fillColor": "#00ffff" }, "compId": 85 }, { "type": "Image", "props": { "y": 52, "x": 54.5, "width": 200, "skin": "sence/fuben1biao.png", "sizeGrid": "0,20,0,28", "height": 47 }, "compId": 98, "child": [{ "type": "Sprite", "props": { "y": 5, "x": 37.5, "texture": "sence/youansenlin.png" }, "compId": 99 }] }] }, { "type": "Button", "props": { "y": 520, "x": 498, "stateNum": 1, "skin": "mainscene/fuben4.png", "disabled": true }, "compId": 76, "child": [{ "type": "Poly", "props": { "y": 41, "x": 18, "renderType": "hit", "points": "-3,29,106,-37,146,19,118,183,17,179", "lineWidth": 1, "lineColor": "#ff0000", "fillColor": "#00ffff" }, "compId": 86 }, { "type": "Image", "props": { "y": 41, "x": -3.75, "width": 200, "skin": "sence/fuben1biao.png", "sizeGrid": "0,20,0,28", "height": 47 }, "compId": 87, "child": [{ "type": "Sprite", "props": { "y": 4, "x": 42, "texture": "sence/tanlandongku.png" }, "compId": 88 }] }] }, { "type": "Button", "props": { "y": 451, "x": 76, "stateNum": 1, "skin": "mainscene/fuben5.png", "disabled": true }, "compId": 77, "child": [{ "type": "Poly", "props": { "y": 24, "x": 3.5, "renderType": "unHit", "points": "-6,27,43,-25,157,59,133,195,28,196", "lineWidth": 1, "lineColor": "#ff0000", "fillColor": "#00ffff" }, "compId": 89 }] }, { "type": "Button", "props": { "y": 566.5, "x": 269, "width": 229, "stateNum": 1, "skin": "mainscene/fuben6.png", "height": 180, "disabled": true }, "compId": 78, "child": [{ "type": "Poly", "props": { "y": 21.75, "x": 33, "renderType": "hit", "points": "-1,9,101,10,134,110,-27,106", "lineWidth": 1, "lineColor": "#ff0000", "fillColor": "#00ffff" }, "compId": 90 }, { "type": "Image", "props": { "y": 35, "x": 5.25, "width": 200, "skin": "sence/fuben1biao.png", "sizeGrid": "0,20,0,28", "height": 47 }, "compId": 91, "child": [{ "type": "Sprite", "props": { "y": 4, "x": 42, "texture": "sence/meiyingleyuan.png" }, "compId": 92 }] }] }, { "type": "Button", "props": { "y": 696, "x": 88, "width": 244, "var": "stage3", "stateNum": 1, "skin": "mainscene/fuben2.png", "height": 287 }, "compId": 73, "child": [{ "type": "Poly", "props": { "y": 57.5, "x": 13.25, "renderType": "hit", "points": "-9,29,141,-69,203,162,37,223,-14,122", "lineWidth": 1, "lineColor": "#ff0000", "fillColor": "#00ffff" }, "compId": 79 }, { "type": "Image", "props": { "y": 34, "x": 0, "width": 200, "skin": "sence/fuben1biao.png", "sizeGrid": "0,20,0,28", "height": 47 }, "compId": 80, "child": [{ "type": "Sprite", "props": { "y": 9, "x": 37.5, "texture": "sence/haidaochengbao.png" }, "compId": 81 }] }, { "type": "new", "props": { "y": 38, "x": 213, "visible": false, "name": "newView", "runtime": "ui.scene.newUI" }, "compId": 113 }, { "type": "Stage3Ani", "props": { "y": 24.5, "x": 21.5, "var": "stage3Ani", "runtime": "ui.scene.Stage3AniUI" }, "compId": 121 }] }] }, { "type": "Image", "props": { "y": 451, "width": 102, "var": "rightBox", "skin": "sence/guanjikuang.png", "sizeGrid": "31,22,26,20", "right": 14, "height": 202 }, "compId": 48, "child": [{ "type": "Button", "props": { "y": 19, "x": 22.5, "var": "shareBtn", "stateNum": 1, "skin": "sence/btn_fenxiang.png" }, "compId": 49 }, { "type": "Button", "props": { "y": 221, "x": 23.5, "visible": false, "var": "signBtn", "stateNum": 1, "skin": "sence/btn_qiandao.png" }, "compId": 51 }, { "type": "Button", "props": { "y": 227, "x": 18, "visible": false, "var": "rankBtn", "stateNum": 1, "skin": "sence/btn_paihang.png" }, "compId": 52 }, { "type": "Button", "props": { "y": 117.5, "x": 23.5, "var": "settingBtn", "stateNum": 1, "skin": "sence/btn_shezhi.png" }, "compId": 54 }] }, { "type": "TimeLogo", "props": { "y": 180, "var": "timeLogo", "right": 25, "runtime": "ui.scene.TimeLogoUI" }, "compId": 70 }, { "type": "Box", "props": { "x": 0, "width": 750, "var": "bottomBox", "height": 200, "bottom": 160 }, "compId": 71, "child": [{ "type": "Button", "props": { "y": 27, "x": 38, "var": "roleBtn", "stateNum": 1, "skin": "sence/btn_juese.png" }, "compId": 16, "child": [{ "type": "RedPointView", "props": { "y": -31, "x": 86, "name": "red", "runtime": "ui.scene.RedPointViewUI" }, "compId": 109 }] }, { "type": "Button", "props": { "y": 45, "x": 224, "var": "Tbtn", "stateNum": 1, "skin": "sence/btn_baoxiang.png" }, "compId": 34 }, { "type": "Button", "props": { "y": 37, "x": 400, "var": "taskBtn", "stateNum": 1, "skin": "sence/btn_renwu.png" }, "compId": 103, "child": [{ "type": "RedPointView", "props": { "y": -40, "x": 96, "name": "red", "runtime": "ui.scene.RedPointViewUI" }, "compId": 110 }, { "type": "new", "props": { "y": 10, "x": 29, "var": "newView", "scaleY": 0.8, "scaleX": 0.8, "runtime": "ui.scene.newUI" }, "compId": 112 }] }, { "type": "Button", "props": { "y": 42, "x": 582, "var": "tianFuBtn", "stateNum": 1, "skin": "sence/tianfu.png" }, "compId": 104, "child": [{ "type": "RedPointView", "props": { "y": -50, "x": 94, "name": "red", "runtime": "ui.scene.RedPointViewUI" }, "compId": 119 }, { "type": "new", "props": { "y": 1, "x": 27, "var": "new2", "scaleY": 0.8, "scaleX": 0.8, "runtime": "ui.scene.newUI" }, "compId": 120 }] }] }, { "type": "Box", "props": { "x": 63.5, "var": "topBox", "top": 90 }, "compId": 72, "child": [{ "type": "Sprite", "props": { "y": 10, "x": 232.5, "texture": "sence/qiandi.png" }, "compId": 41, "child": [{ "type": "FontClip", "props": { "y": 13.5, "x": 26, "width": 126, "var": "eggFc", "value": "999999", "spaceX": -4, "skin": "sence/clip_shuzi.png", "sheet": "01234 56789", "height": 28, "align": "center" }, "compId": 43 }, { "type": "Sprite", "props": { "y": -10, "x": -25, "texture": "sence/dan.png" }, "compId": 44 }] }, { "type": "Sprite", "props": { "y": 10, "x": 31.5, "texture": "sence/qiandi.png" }, "compId": 42, "child": [{ "type": "FontClip", "props": { "zOrder": 100, "y": 13.5, "x": 26, "width": 126, "var": "goldFc", "value": "999999", "spaceX": -4, "skin": "sence/clip_shuzi.png", "sheet": "01234 56789", "height": 28, "align": "center" }, "compId": 45 }, { "type": "Sprite", "props": { "y": -1, "x": -31.5, "texture": "sence/jinbi.png" }, "compId": 46 }] }] }, { "type": "Button", "props": { "y": 317, "x": -318, "var": "zhuanBtn", "stateNum": 1, "skin": "sence/zhuanpan.png" }, "compId": 116, "child": [{ "type": "RedPointView", "props": { "y": -35, "x": 78, "name": "red", "runtime": "ui.scene.RedPointViewUI" }, "compId": 117 }, { "type": "new", "props": { "y": 9, "x": 26.5, "scaleY": 0.8, "scaleX": 0.8, "runtime": "ui.scene.newUI" }, "compId": 118 }] }], "loadList": ["mainscene/daBG.jpg", "mainscene/chuansongmen.png", "mainscene/fuben3.png", "sence/fuben1biao.png", "sence/diwanglingmu.png", "mainscene/fuben1.png", "sence/youansenlin.png", "mainscene/fuben4.png", "sence/tanlandongku.png", "mainscene/fuben5.png", "mainscene/fuben6.png", "sence/meiyingleyuan.png", "mainscene/fuben2.png", "sence/haidaochengbao.png", "sence/guanjikuang.png", "sence/btn_fenxiang.png", "sence/btn_qiandao.png", "sence/btn_paihang.png", "sence/btn_shezhi.png", "sence/btn_juese.png", "sence/btn_baoxiang.png", "sence/btn_renwu.png", "sence/tianfu.png", "sence/qiandi.png", "sence/clip_shuzi.png", "sence/dan.png", "sence/jinbi.png", "sence/zhuanpan.png"], "loadList3D": [] };
            return MainSceneUI;
        }(Laya.View));
        scene.MainSceneUI = MainSceneUI;
        REG("ui.scene.MainSceneUI", MainSceneUI);
        var MainScene_1UI = /** @class */ (function (_super) {
            __extends(MainScene_1UI, _super);
            function MainScene_1UI() {
                return _super.call(this) || this;
            }
            MainScene_1UI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(MainScene_1UI.uiView);
            };
            MainScene_1UI.uiView = { "type": "View", "props": {}, "compId": 2, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "var": "guang", "skin": "mainscene/fuben3_1.png", "scaleY": 1.2, "scaleX": 1.2, "blendMode": "lighter" }, "compId": 10 }, { "type": "Box", "props": { "y": 110, "x": 50, "var": "huo1", "scaleY": 1.2, "scaleX": 1.2 }, "compId": 8, "child": [{ "type": "Sprite", "props": { "y": 55, "x": 9, "width": 34, "texture": "mainscene/huopenpen.png", "rotation": 0, "height": 26 }, "compId": 5 }, { "type": "Clip", "props": { "width": 64, "var": "yan1", "skin": "mainscene/clip_huoyan.png", "scaleY": 0.8, "scaleX": 0.8, "height": 88, "clipY": 2, "clipX": 4 }, "compId": 4 }] }, { "type": "Box", "props": { "y": 130, "x": 107, "var": "huo2", "scaleY": 1.2, "scaleX": 1.2 }, "compId": 9, "child": [{ "type": "Sprite", "props": { "y": 55, "x": 9, "texture": "mainscene/huopenpen.png" }, "compId": 6 }, { "type": "Clip", "props": { "width": 64, "var": "yan2", "skin": "mainscene/clip_huoyan.png", "scaleY": 0.8, "scaleX": 0.8, "height": 88, "clipY": 2, "clipX": 4 }, "compId": 7 }] }], "animations": [{ "nodes": [{ "target": 10, "keyframes": { "alpha": [{ "value": 0.6, "tweenMethod": "linearNone", "tween": true, "target": 10, "key": "alpha", "index": 0 }, { "value": 0.1, "tweenMethod": "linearNone", "tween": true, "target": 10, "key": "alpha", "index": 7 }, { "value": 0.6, "tweenMethod": "linearNone", "tween": true, "target": 10, "key": "alpha", "index": 14 }, { "value": 0.2, "tweenMethod": "linearNone", "tween": true, "target": 10, "key": "alpha", "index": 23 }, { "value": 0.6, "tweenMethod": "linearNone", "tween": true, "target": 10, "key": "alpha", "index": 30 }] } }, { "target": 7, "keyframes": { "interval": [{ "value": 100, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "interval", "index": 0 }], "autoPlay": [{ "value": true, "tweenMethod": "linearNone", "tween": false, "target": 7, "key": "autoPlay", "index": 0 }] } }, { "target": 4, "keyframes": { "interval": [{ "value": 100, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "interval", "index": 0 }], "autoPlay": [{ "value": true, "tweenMethod": "linearNone", "tween": false, "target": 4, "key": "autoPlay", "index": 0 }] } }], "name": "ani1", "id": 1, "frameRate": 24, "action": 0 }], "loadList": ["mainscene/fuben3_1.png", "mainscene/huopenpen.png", "mainscene/clip_huoyan.png"], "loadList3D": [] };
            return MainScene_1UI;
        }(Laya.View));
        scene.MainScene_1UI = MainScene_1UI;
        REG("ui.scene.MainScene_1UI", MainScene_1UI);
        var maozhuangbeiUI = /** @class */ (function (_super) {
            __extends(maozhuangbeiUI, _super);
            function maozhuangbeiUI() {
                return _super.call(this) || this;
            }
            maozhuangbeiUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(maozhuangbeiUI.uiView);
            };
            maozhuangbeiUI.uiView = { "type": "View", "props": { "width": 750, "height": 1334 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 479, "x": 305, "var": "di", "skin": "sence/iconhei.png", "alpha": 1 }, "compId": 3, "child": [{ "type": "Image", "props": { "y": -1, "x": -2, "var": "kuang", "skin": "sence/kuang0.png" }, "compId": 4 }, { "type": "Image", "props": { "y": -1, "x": -1, "var": "ic", "skin": "icons/200001.png" }, "compId": 5 }] }, { "type": "Clip", "props": { "y": 370, "x": 187, "visible": true, "var": "clip", "skin": "sence/hechengzha.png", "scaleY": 2, "scaleX": 2, "clipY": 2, "clipX": 4, "autoPlay": true }, "compId": 6 }], "animations": [{ "nodes": [{ "target": 3, "keyframes": { "y": [{ "value": 699, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 0 }, { "value": 479, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 57 }], "x": [{ "value": 304, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "x", "index": 0 }, { "value": 305, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "x", "index": 57 }], "alpha": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "alpha", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "alpha", "index": 6 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "alpha", "index": 57 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "alpha", "index": 80 }] } }, { "target": 6, "keyframes": { "y": [{ "value": 433, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "y", "index": 0 }, { "value": 370, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "y", "index": 57 }], "x": [{ "value": 186, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "x", "index": 0 }, { "value": 187, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "x", "index": 57 }], "visible": [{ "value": false, "tweenMethod": "linearNone", "tween": false, "target": 6, "key": "visible", "index": 0 }, { "value": true, "tweenMethod": "linearNone", "tween": false, "target": 6, "key": "visible", "index": 57 }], "autoPlay": [{ "value": false, "tweenMethod": "linearNone", "tween": false, "target": 6, "key": "autoPlay", "index": 0 }, { "value": false, "tweenMethod": "linearNone", "tween": false, "target": 6, "key": "autoPlay", "index": 57 }] } }], "name": "ani1", "id": 1, "frameRate": 60, "action": 0 }], "loadList": ["sence/iconhei.png", "sence/kuang0.png", "icons/200001.png", "sence/hechengzha.png"], "loadList3D": [] };
            return maozhuangbeiUI;
        }(Laya.View));
        scene.maozhuangbeiUI = maozhuangbeiUI;
        REG("ui.scene.maozhuangbeiUI", maozhuangbeiUI);
        var MergeFailEffectViewUI = /** @class */ (function (_super) {
            __extends(MergeFailEffectViewUI, _super);
            function MergeFailEffectViewUI() {
                return _super.call(this) || this;
            }
            MergeFailEffectViewUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(MergeFailEffectViewUI.uiView);
            };
            MergeFailEffectViewUI.uiView = { "type": "View", "props": { "y": 170, "x": 178, "width": 357, "height": 341, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 2, "child": [{ "type": "Clip", "props": { "y": 0, "x": 0, "var": "clip", "skin": "sence/hechengzha.png", "scaleY": 2, "scaleX": 2, "interval": 50, "clipY": 2, "clipX": 4 }, "compId": 4 }], "loadList": ["sence/hechengzha.png"], "loadList3D": [] };
            return MergeFailEffectViewUI;
        }(Laya.View));
        scene.MergeFailEffectViewUI = MergeFailEffectViewUI;
        REG("ui.scene.MergeFailEffectViewUI", MergeFailEffectViewUI);
        var MergeShareDialogUI = /** @class */ (function (_super) {
            __extends(MergeShareDialogUI, _super);
            function MergeShareDialogUI() {
                return _super.call(this) || this;
            }
            MergeShareDialogUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(MergeShareDialogUI.uiView);
            };
            MergeShareDialogUI.uiView = { "type": "Dialog", "props": { "width": 682, "isModal": true, "height": 1200 }, "compId": 2, "child": [{ "type": "Box", "props": { "y": 61, "x": 31, "scaleY": 0.85, "scaleX": 0.85 }, "compId": 28, "child": [{ "type": "Image", "props": { "y": 13, "x": 23.5, "width": 682, "skin": "sence/kuangBG.png", "sizeGrid": "81,70,76,69", "height": 947 }, "compId": 5 }, { "type": "Image", "props": { "y": 84, "x": 43.5, "width": 643, "skin": "sence/chuangkoubai.png", "sizeGrid": "20,23,19,22", "height": 827 }, "compId": 6 }, { "type": "LightView", "props": { "y": 383, "x": 370.5, "var": "light", "scaleY": 1, "scaleX": 1, "blendMode": "lighter", "anchorY": 0.5, "anchorX": 0.5, "runtime": "ui.scene.LightViewUI" }, "compId": 3 }, { "type": "Image", "props": { "y": 633, "x": 43.5, "width": 642, "skin": "sence/baoxiangBG.png", "sizeGrid": "28,18,26,20", "height": 278, "alpha": 0.3 }, "compId": 7 }, { "type": "Image", "props": { "y": 0, "x": 165.5, "skin": "sence/biaotifu.png" }, "compId": 9 }, { "type": "Sprite", "props": { "y": 10, "x": 263.5, "texture": "sence/huodewuqi.png" }, "compId": 10 }, { "type": "Button", "props": { "y": 792, "x": 279.5, "width": 174, "var": "cancelBtn", "stateNum": 1, "skin": "sence/btn_hong.png", "sizeGrid": "23,16,24,17", "name": "close", "height": 94 }, "compId": 11, "child": [{ "type": "Sprite", "props": { "y": 17.5, "x": 31.5, "texture": "sence/quxiaoda.png" }, "compId": 20 }] }, { "type": "Sprite", "props": { "y": 137, "x": 181.5, "texture": "sence/fazhen.png" }, "compId": 12 }, { "type": "Text", "props": { "y": 433, "x": 269.5, "width": 206, "var": "gongTxt", "text": "攻击力:1000", "height": 31, "fontSize": 32, "color": "#48280f", "bold": true, "align": "center", "runtime": "laya.display.Text" }, "compId": 14 }, { "type": "BagListCell", "props": { "y": 271, "x": 291.5, "var": "c1", "runtime": "ui.scene.BagListCellUI" }, "compId": 15 }, { "type": "AdBtnView", "props": { "y": 649, "x": 156.5, "var": "v1", "runtime": "ui.scene.AdBtnViewUI" }, "compId": 27 }] }], "loadList": ["sence/kuangBG.png", "sence/chuangkoubai.png", "sence/baoxiangBG.png", "sence/biaotifu.png", "sence/huodewuqi.png", "sence/btn_hong.png", "sence/quxiaoda.png", "sence/fazhen.png"], "loadList3D": [] };
            return MergeShareDialogUI;
        }(Laya.Dialog));
        scene.MergeShareDialogUI = MergeShareDialogUI;
        REG("ui.scene.MergeShareDialogUI", MergeShareDialogUI);
        var MonsterBloodViewUI = /** @class */ (function (_super) {
            __extends(MonsterBloodViewUI, _super);
            function MonsterBloodViewUI() {
                return _super.call(this) || this;
            }
            MonsterBloodViewUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(MonsterBloodViewUI.uiView);
            };
            MonsterBloodViewUI.uiView = { "type": "View", "props": { "width": 227, "height": 14 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "var": "di", "skin": "battlescene/guaitiaoxia.png" }, "compId": 3 }, { "type": "Image", "props": { "y": 0, "x": 0, "var": "bloodImg", "skin": "battlescene/guaitiaoshang.png" }, "compId": 4 }], "loadList": ["battlescene/guaitiaoxia.png", "battlescene/guaitiaoshang.png"], "loadList3D": [] };
            return MonsterBloodViewUI;
        }(Laya.View));
        scene.MonsterBloodViewUI = MonsterBloodViewUI;
        REG("ui.scene.MonsterBloodViewUI", MonsterBloodViewUI);
        var MonsterViewUI = /** @class */ (function (_super) {
            __extends(MonsterViewUI, _super);
            function MonsterViewUI() {
                return _super.call(this) || this;
            }
            MonsterViewUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(MonsterViewUI.uiView);
            };
            MonsterViewUI.uiView = { "type": "View", "props": { "width": 100, "height": 200 }, "compId": 2, "child": [{ "type": "Box", "props": { "y": 0, "width": 89, "var": "hitBox", "height": 200, "centerX": 0 }, "compId": 13 }, { "type": "MonsterBloodView", "props": { "y": 13, "x": 50, "var": "blood", "scaleX": 0.5, "anchorY": 0.5, "anchorX": 0.5, "runtime": "ui.scene.MonsterBloodViewUI" }, "compId": 14 }], "loadList": [], "loadList3D": [] };
            return MonsterViewUI;
        }(Laya.View));
        scene.MonsterViewUI = MonsterViewUI;
        REG("ui.scene.MonsterViewUI", MonsterViewUI);
        var NBbaoxiangUI = /** @class */ (function (_super) {
            __extends(NBbaoxiangUI, _super);
            function NBbaoxiangUI() {
                return _super.call(this) || this;
            }
            NBbaoxiangUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(NBbaoxiangUI.uiView);
            };
            NBbaoxiangUI.uiView = { "type": "Dialog", "props": { "width": 750, "isModal": true, "height": 1334 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 815, "x": 374, "skin": "baoxiang/NBguan.png", "anchorY": 1, "anchorX": 0.5 }, "compId": 3 }, { "type": "Image", "props": { "y": 815, "x": 374, "skin": "baoxiang/NBkai.png", "anchorY": 1, "anchorX": 0.5 }, "compId": 4 }, { "type": "Image", "props": { "y": 609, "x": 374, "skin": "baoxiang/baoxiangguang.png", "blendMode": "lighter", "anchorY": 1, "anchorX": 0.5, "alpha": 0.5 }, "compId": 6 }], "animations": [{ "nodes": [{ "target": 4, "keyframes": { "y": [{ "value": 815, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "y", "index": 0 }, { "value": 814, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "y", "index": 9 }], "visible": [{ "value": false, "tweenMethod": "linearNone", "tween": false, "target": 4, "key": "visible", "index": 0 }, { "value": false, "tweenMethod": "linearNone", "tween": false, "target": 4, "key": "visible", "index": 7 }, { "value": true, "tweenMethod": "linearNone", "tween": false, "target": 4, "key": "visible", "index": 9 }, { "value": true, "tweenMethod": "linearNone", "tween": false, "target": 4, "key": "visible", "index": 13 }], "skin": [{ "value": "baoxiang/NBkai.png", "tweenMethod": "linearNone", "tween": false, "target": 4, "key": "skin", "index": 0 }], "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleY", "index": 0 }, { "value": 1.2, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleY", "index": 11 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleY", "index": 13 }], "anchorY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "anchorY", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "anchorY", "index": 9 }] } }, { "target": 3, "keyframes": { "visible": [{ "value": true, "tweenMethod": "linearNone", "tween": false, "target": 3, "key": "visible", "index": 0 }, { "value": false, "tweenMethod": "linearNone", "tween": false, "target": 3, "key": "visible", "index": 9 }], "skin": [{ "value": "baoxiang/NBguan.png", "tweenMethod": "linearNone", "tween": false, "target": 3, "key": "skin", "index": 0 }], "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 0 }, { "value": 0.8, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 7 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 9 }] } }, { "target": 6, "keyframes": { "skin": [{ "value": "baoxiang/baoxiangguang.png", "tweenMethod": "linearNone", "tween": false, "target": 6, "key": "skin", "index": 0 }], "scaleY": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleY", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleY", "index": 9 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleY", "index": 12 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 12 }], "alpha": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "alpha", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "alpha", "index": 9 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "alpha", "index": 12 }, { "value": 0.5, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "alpha", "index": 16 }] } }], "name": "ani1", "id": 1, "frameRate": 60, "action": 0 }], "loadList": ["baoxiang/NBguan.png", "baoxiang/NBkai.png", "baoxiang/baoxiangguang.png"], "loadList3D": [] };
            return NBbaoxiangUI;
        }(Laya.Dialog));
        scene.NBbaoxiangUI = NBbaoxiangUI;
        REG("ui.scene.NBbaoxiangUI", NBbaoxiangUI);
        var newUI = /** @class */ (function (_super) {
            __extends(newUI, _super);
            function newUI() {
                return _super.call(this) || this;
            }
            newUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(newUI.uiView);
            };
            newUI.uiView = { "type": "View", "props": {}, "compId": 2, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "skin": "mainscene/new.png", "anchorY": 0.5, "anchorX": 0.5 }, "compId": 3 }], "animations": [{ "nodes": [{ "target": 3, "keyframes": { "y": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 20 }, { "value": -50, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 25 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 29 }, { "value": -25, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 32 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 35 }, { "value": -10, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 38 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 40 }], "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 20 }, { "value": 1.5, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 25 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 29 }, { "value": 1.2, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 32 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 35 }, { "value": 1.1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 38 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 40 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 20 }, { "value": 1.5, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 25 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 29 }, { "value": 1.2, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 32 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 35 }, { "value": 1.1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 38 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 40 }] } }], "name": "ani1", "id": 1, "frameRate": 24, "action": 0 }], "loadList": ["mainscene/new.png"], "loadList3D": [] };
            return newUI;
        }(Laya.View));
        scene.newUI = newUI;
        REG("ui.scene.newUI", newUI);
        var NewerSceneUI = /** @class */ (function (_super) {
            __extends(NewerSceneUI, _super);
            function NewerSceneUI() {
                return _super.call(this) || this;
            }
            NewerSceneUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(NewerSceneUI.uiView);
            };
            NewerSceneUI.uiView = { "type": "View", "props": { "width": 750, "height": 1334 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "var": "img1", "skin": "newhand/h1.jpg" }, "compId": 7, "child": [{ "type": "Image", "props": { "y": 1042, "x": 116, "skin": "newhand/t1.png" }, "compId": 11 }] }, { "type": "Image", "props": { "y": 0, "x": 0, "var": "img2", "skin": "newhand/h2.jpg" }, "compId": 12, "child": [{ "type": "Sprite", "props": { "y": 1007, "x": 20.5, "texture": "newhand/t2.png" }, "compId": 13 }] }, { "type": "Image", "props": { "x": 515, "var": "tiaoguo", "skin": "newhand/tiaoguo.png", "bottom": 10 }, "compId": 16 }], "loadList": ["newhand/h1.jpg", "newhand/t1.png", "newhand/h2.jpg", "newhand/t2.png", "newhand/tiaoguo.png"], "loadList3D": [] };
            return NewerSceneUI;
        }(Laya.View));
        scene.NewerSceneUI = NewerSceneUI;
        REG("ui.scene.NewerSceneUI", NewerSceneUI);
        var newhand1UI = /** @class */ (function (_super) {
            __extends(newhand1UI, _super);
            function newhand1UI() {
                return _super.call(this) || this;
            }
            newhand1UI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(newhand1UI.uiView);
            };
            newhand1UI.uiView = { "type": "View", "props": { "width": 100, "height": 100 }, "compId": 2, "child": [{ "type": "Clip", "props": { "y": -137, "x": -155, "var": "lightClip", "skin": "newhand/clip_guang.png", "scaleY": 2, "scaleX": 2, "clipY": 2, "clipX": 4, "blendMode": "lighter" }, "compId": 9 }, { "type": "Image", "props": { "y": 43, "x": 12, "skin": "girl/xiaoshou.png", "anchorY": 0.5, "anchorX": 0.5 }, "compId": 3 }], "animations": [{ "nodes": [{ "target": 3, "keyframes": { "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 0 }, { "value": 0.8, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 2 }, { "value": 0.8, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "scaleY", "index": 6 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "scaleY", "index": 8 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 0 }, { "value": 0.8, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 2 }, { "value": 0.8, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "scaleX", "index": 6 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "scaleX", "index": 8 }], "rotation": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "rotation", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "rotation", "index": 8 }] } }], "name": "ani1", "id": 1, "frameRate": 24, "action": 0 }], "loadList": ["newhand/clip_guang.png", "girl/xiaoshou.png"], "loadList3D": [] };
            return newhand1UI;
        }(Laya.View));
        scene.newhand1UI = newhand1UI;
        REG("ui.scene.newhand1UI", newhand1UI);
        var playerUI = /** @class */ (function (_super) {
            __extends(playerUI, _super);
            function playerUI() {
                return _super.call(this) || this;
            }
            playerUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(playerUI.uiView);
            };
            playerUI.uiView = { "type": "View", "props": { "width": 200, "height": 200 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 200, "x": 99, "var": "ying", "skin": "player/all/yinying.png", "scaleY": 1, "scaleX": 1, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 7 }, { "type": "playerAni", "props": { "y": 51, "x": 38, "var": "player", "runtime": "ui.scene.playerAniUI" }, "compId": 6 }], "animations": [{ "nodes": [{ "target": 6, "keyframes": { "y": [{ "value": 51, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "y", "index": 0 }, { "value": 35, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "y", "index": 5 }, { "value": 51, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "y", "index": 10 }] } }, { "target": 7, "keyframes": { "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "scaleY", "index": 0 }, { "value": 0.8, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "scaleY", "index": 5 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "scaleY", "index": 10 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "scaleX", "index": 0 }, { "value": 0.8, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "scaleX", "index": 5 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "scaleX", "index": 10 }] } }], "name": "run", "id": 1, "frameRate": 24, "action": 0 }, { "nodes": [], "name": "wait", "id": 2, "frameRate": 24, "action": 0 }], "loadList": ["player/all/yinying.png"], "loadList3D": [] };
            return playerUI;
        }(Laya.View));
        scene.playerUI = playerUI;
        REG("ui.scene.playerUI", playerUI);
        var playerAniUI = /** @class */ (function (_super) {
            __extends(playerAniUI, _super);
            function playerAniUI() {
                return _super.call(this) || this;
            }
            playerAniUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(playerAniUI.uiView);
            };
            playerAniUI.uiView = { "type": "View", "props": { "width": 200, "height": 164 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 26, "x": -27, "var": "ma", "skin": "player/all/500001.png" }, "compId": 5 }, { "type": "Box", "props": { "y": 129, "x": 72, "width": 119, "var": "ren", "scaleY": 1, "pivotY": 132, "pivotX": 60, "height": 165 }, "compId": 12, "child": [{ "type": "Image", "props": { "y": 12, "x": 33.5, "var": "tou", "skin": "player/all/tou.png" }, "compId": 4 }, { "type": "Image", "props": { "y": -15, "x": 13, "var": "kui", "skin": "player/all/300020.png" }, "compId": 6 }, { "type": "Image", "props": { "y": 150, "x": 38.5, "var": "jia", "skin": "player/all/400016.png", "anchorY": 1, "anchorX": 0.5 }, "compId": 7 }, { "type": "Image", "props": { "y": 79, "x": 73, "var": "wuqi", "skin": "player/all/200019.png", "anchorY": 0.5, "anchorX": 0.5 }, "compId": 3, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "var": "guang", "skin": "player/all/e200019.png", "blendMode": "lighter" }, "compId": 13 }] }, { "type": "Image", "props": { "y": 67, "x": 7.5, "var": "shou", "skin": "player/all/shou.png", "rotation": -9 }, "compId": 8 }] }], "animations": [{ "nodes": [{ "target": 5, "keyframes": { "y": [{ "value": 26, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "y", "index": 0 }], "x": [{ "value": -27, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "x", "index": 0 }] } }], "name": "attack", "id": 1, "frameRate": 24, "action": 0 }, { "nodes": [{ "target": 12, "keyframes": { "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 12, "key": "scaleY", "index": 0 }, { "value": 1.03, "tweenMethod": "linearNone", "tween": true, "target": 12, "key": "scaleY", "index": 20 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 12, "key": "scaleY", "index": 40 }] } }], "name": "wait", "id": 2, "frameRate": 60, "action": 0 }, { "nodes": [{ "target": 12, "keyframes": { "y": [{ "value": 129, "tweenMethod": "linearNone", "tween": true, "target": 12, "key": "y", "index": 0 }, { "value": 74, "tweenMethod": "linearNone", "tween": true, "target": 12, "key": "y", "index": 10 }, { "value": 136, "tweenMethod": "linearNone", "tween": true, "target": 12, "key": "y", "index": 20 }], "x": [{ "value": 72, "tweenMethod": "linearNone", "tween": true, "target": 12, "key": "x", "index": 0 }, { "value": 14.5, "tweenMethod": "linearNone", "tween": true, "target": 12, "key": "x", "index": 10 }, { "value": 10.5, "tweenMethod": "linearNone", "tween": true, "target": 12, "key": "x", "index": 20 }], "rotation": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 12, "key": "rotation", "index": 0 }, { "value": -50, "tweenMethod": "linearNone", "tween": true, "target": 12, "key": "rotation", "index": 10 }, { "value": -84, "tweenMethod": "linearNone", "tween": true, "target": 12, "key": "rotation", "index": 20 }] } }, { "target": 3, "keyframes": { "y": [{ "value": 78, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 0 }, { "value": 165, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 10 }, { "value": 312, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 20 }], "x": [{ "value": 73, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "x", "index": 0 }, { "value": 220, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "x", "index": 10 }, { "value": 71.5, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "x", "index": 20 }], "rotation": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "rotation", "index": 0 }, { "value": 186, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "rotation", "index": 10 }, { "value": 296, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "rotation", "index": 15 }, { "value": 439, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "rotation", "index": 20 }] } }], "name": "dead", "id": 3, "frameRate": 24, "action": 0 }], "loadList": ["player/all/500001.png", "player/all/tou.png", "player/all/300020.png", "player/all/400016.png", "player/all/200019.png", "player/all/e200019.png", "player/all/shou.png"], "loadList3D": [] };
            return playerAniUI;
        }(Laya.View));
        scene.playerAniUI = playerAniUI;
        REG("ui.scene.playerAniUI", playerAniUI);
        var PlayerViewUI = /** @class */ (function (_super) {
            __extends(PlayerViewUI, _super);
            function PlayerViewUI() {
                return _super.call(this) || this;
            }
            PlayerViewUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(PlayerViewUI.uiView);
            };
            PlayerViewUI.uiView = { "type": "View", "props": { "width": 200, "height": 200 }, "compId": 2, "child": [{ "type": "player", "props": { "y": 0, "x": 100, "var": "player", "anchorX": 0.5, "runtime": "ui.scene.playerUI" }, "compId": 3 }, { "type": "Image", "props": { "y": 0, "x": 100, "var": "guaJiSp", "skin": "battlescene/guajizhong.png", "anchorY": 0.5, "anchorX": 0.5 }, "compId": 4 }, { "type": "Box", "props": { "y": 57, "x": 27, "width": 148, "var": "hitbox", "height": 143 }, "compId": 5 }], "loadList": ["battlescene/guajizhong.png"], "loadList3D": [] };
            return PlayerViewUI;
        }(Laya.View));
        scene.PlayerViewUI = PlayerViewUI;
        REG("ui.scene.PlayerViewUI", PlayerViewUI);
        var PTbaoxiangUI = /** @class */ (function (_super) {
            __extends(PTbaoxiangUI, _super);
            function PTbaoxiangUI() {
                return _super.call(this) || this;
            }
            PTbaoxiangUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(PTbaoxiangUI.uiView);
            };
            PTbaoxiangUI.uiView = { "type": "Dialog", "props": { "width": 750, "isModal": true, "height": 1334 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 815, "x": 374, "skin": "baoxiang/PTguan.png", "anchorY": 1, "anchorX": 0.5 }, "compId": 3 }, { "type": "Image", "props": { "y": 815, "x": 374, "skin": "baoxiang/PTkai.png", "anchorY": 1, "anchorX": 0.5 }, "compId": 4 }, { "type": "Image", "props": { "y": 715, "x": 359, "skin": "baoxiang/baoxiangguang.png", "blendMode": "lighter", "anchorY": 1, "anchorX": 0.5, "alpha": 0.5 }, "compId": 6 }], "animations": [{ "nodes": [{ "target": 4, "keyframes": { "y": [{ "value": 815, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "y", "index": 0 }, { "value": 814, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "y", "index": 9 }], "visible": [{ "value": false, "tweenMethod": "linearNone", "tween": false, "target": 4, "key": "visible", "index": 0 }, { "value": false, "tweenMethod": "linearNone", "tween": false, "target": 4, "key": "visible", "index": 7 }, { "value": true, "tweenMethod": "linearNone", "tween": false, "target": 4, "key": "visible", "index": 9 }, { "value": true, "tweenMethod": "linearNone", "tween": false, "target": 4, "key": "visible", "index": 13 }], "skin": [{ "value": "baoxiang/PTkai.png", "tweenMethod": "linearNone", "tween": false, "target": 4, "key": "skin", "index": 0 }], "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleY", "index": 0 }, { "value": 1.2, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleY", "index": 11 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleY", "index": 13 }], "anchorY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "anchorY", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "anchorY", "index": 9 }] } }, { "target": 3, "keyframes": { "visible": [{ "value": true, "tweenMethod": "linearNone", "tween": false, "target": 3, "key": "visible", "index": 0 }, { "value": false, "tweenMethod": "linearNone", "tween": false, "target": 3, "key": "visible", "index": 9 }], "skin": [{ "value": "baoxiang/PTguan.png", "tweenMethod": "linearNone", "tween": false, "target": 3, "key": "skin", "index": 0 }], "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 0 }, { "value": 0.8, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 7 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 9 }] } }, { "target": 6, "keyframes": { "skin": [{ "value": "baoxiang/baoxiangguang.png", "tweenMethod": "linearNone", "tween": false, "target": 6, "key": "skin", "index": 0 }], "scaleY": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleY", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleY", "index": 9 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleY", "index": 12 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 12 }], "alpha": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "alpha", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "alpha", "index": 9 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "alpha", "index": 12 }, { "value": 0.5, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "alpha", "index": 16 }] } }], "name": "ani1", "id": 1, "frameRate": 60, "action": 0 }], "loadList": ["baoxiang/PTguan.png", "baoxiang/PTkai.png", "baoxiang/baoxiangguang.png"], "loadList3D": [] };
            return PTbaoxiangUI;
        }(Laya.Dialog));
        scene.PTbaoxiangUI = PTbaoxiangUI;
        REG("ui.scene.PTbaoxiangUI", PTbaoxiangUI);
        var RankCellUI = /** @class */ (function (_super) {
            __extends(RankCellUI, _super);
            function RankCellUI() {
                return _super.call(this) || this;
            }
            RankCellUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(RankCellUI.uiView);
            };
            RankCellUI.uiView = { "type": "View", "props": { "width": 604, "height": 91 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 604, "var": "bg", "skin": "rank/paiminglv.png", "sizeGrid": "21,40,18,38", "height": 91 }, "compId": 4 }, { "type": "Image", "props": { "y": 4, "x": 6, "width": 592, "var": "di", "skin": "rank/paimingBG.png", "sizeGrid": "18,88,12,88", "height": 83 }, "compId": 3 }, { "type": "FontClip", "props": { "y": 21, "x": 391, "width": 125, "var": "jifen", "value": "11", "skin": "rank/clip_shuzi.png", "sheet": "1234 5678 90-+", "height": 51, "align": "right" }, "compId": 5 }, { "type": "FontClip", "props": { "y": 21, "x": -11, "width": 125, "var": "mingci", "value": "11", "skin": "rank/clip_shuzi.png", "sheet": "1234 5678 90-+", "height": 51, "align": "center" }, "compId": 6 }, { "type": "Image", "props": { "y": 12.5, "x": 20, "var": "title", "skin": "rank/jinpai.png" }, "compId": 7 }, { "type": "Text", "props": { "y": 27, "x": 184, "width": 211, "var": "mingzi", "text": "骑马合成冲", "strokeColor": "#000000", "stroke": 2, "height": 39, "fontSize": 30, "color": "#ffffff", "runtime": "laya.display.Text" }, "compId": 8 }, { "type": "Image", "props": { "y": 20.5, "x": 111, "width": 50, "var": "img", "height": 50 }, "compId": 11 }], "loadList": ["rank/paiminglv.png", "rank/paimingBG.png", "rank/clip_shuzi.png", "rank/jinpai.png"], "loadList3D": [] };
            return RankCellUI;
        }(Laya.View));
        scene.RankCellUI = RankCellUI;
        REG("ui.scene.RankCellUI", RankCellUI);
        var RankDialogUI = /** @class */ (function (_super) {
            __extends(RankDialogUI, _super);
            function RankDialogUI() {
                return _super.call(this) || this;
            }
            RankDialogUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(RankDialogUI.uiView);
            };
            RankDialogUI.uiView = { "type": "Dialog", "props": { "width": 750, "isShowEffect": false, "isModal": true, "height": 1200 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 94, "x": 37, "width": 677, "skin": "sence/kuangBG.png", "sizeGrid": "81,70,76,69", "height": 938 }, "compId": 3 }, { "type": "Image", "props": { "y": 115, "width": 643, "skin": "sence/chuangkoubai.png", "sizeGrid": "20,23,19,22", "height": 818, "centerX": -1 }, "compId": 4 }, { "type": "Image", "props": { "y": 30, "width": 761, "skin": "sence/paihangbangdi.png", "sizeGrid": "0,169,0,178", "height": 117, "centerX": 3 }, "compId": 5, "child": [{ "type": "Image", "props": { "y": 7, "skin": "rank/paihangbangzi.png", "centerX": 0 }, "compId": 6 }] }, { "type": "Button", "props": { "y": 937, "x": 73, "width": 80, "stateNum": 1, "skin": "sence/btn_guanbi.png", "name": "close", "height": 80 }, "compId": 7 }, { "type": "Tab", "props": { "y": 162, "x": 70.5, "var": "tab", "stateNum": 2, "skin": "sence/tab_huang.png", "selectedIndex": 0, "labels": "," }, "compId": 11 }, { "type": "Image", "props": { "y": 209, "x": 66, "width": 618, "skin": "sence/paihangbanBG.png", "sizeGrid": "20,26,22,25", "height": 710 }, "compId": 8 }, { "type": "WXOpenDataViewer", "props": { "y": 213, "x": 70, "width": 610, "var": "wxopen", "iconSign": "wx", "height": 800, "runtime": "laya.ui.WXOpenDataViewer" }, "compId": 9 }, { "type": "Sprite", "props": { "y": 168, "x": 98, "texture": "rank/haoyou.png", "mouseEnabled": false }, "compId": 12 }, { "type": "Sprite", "props": { "y": 169, "x": 217, "texture": "rank/shijie.png", "mouseEnabled": false }, "compId": 13 }, { "type": "List", "props": { "y": 214, "x": 72, "width": 604, "var": "list", "spaceY": 5, "repeatX": 1, "height": 700 }, "compId": 14, "child": [{ "type": "RankCell", "props": { "y": 0, "x": 0, "renderType": "render", "runtime": "ui.scene.RankCellUI" }, "compId": 15 }] }, { "type": "Text", "props": { "y": 953, "x": 434, "width": 249, "var": "myText", "text": "当前排名:未上榜", "height": 40, "fontSize": 30, "color": "#ffffff", "align": "right", "runtime": "laya.display.Text" }, "compId": 16 }], "loadList": ["sence/kuangBG.png", "sence/chuangkoubai.png", "sence/paihangbangdi.png", "rank/paihangbangzi.png", "sence/btn_guanbi.png", "sence/tab_huang.png", "sence/paihangbanBG.png", "rank/haoyou.png", "rank/shijie.png"], "loadList3D": [] };
            return RankDialogUI;
        }(Laya.Dialog));
        scene.RankDialogUI = RankDialogUI;
        REG("ui.scene.RankDialogUI", RankDialogUI);
        var RankInfoDialogUI = /** @class */ (function (_super) {
            __extends(RankInfoDialogUI, _super);
            function RankInfoDialogUI() {
                return _super.call(this) || this;
            }
            RankInfoDialogUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(RankInfoDialogUI.uiView);
            };
            RankInfoDialogUI.uiView = { "type": "Dialog", "props": { "width": 675, "isModal": true, "height": 600 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 675, "skin": "sence/kuangBG.png", "sizeGrid": "81,70,76,69", "height": 600 }, "compId": 9 }, { "type": "Image", "props": { "y": 79, "x": 12, "width": 646, "skin": "sence/chuangkoubai.png", "sizeGrid": "20,23,19,22", "height": 478 }, "compId": 11 }, { "type": "Image", "props": { "y": 90, "x": 21, "width": 630, "skin": "sence/chuangkouzong.png", "sizeGrid": "21,26,24,26", "height": 319 }, "compId": 22 }, { "type": "Box", "props": { "y": 151.5, "x": 190, "scaleY": 1.2, "scaleX": 1.2 }, "compId": 3, "child": [{ "type": "Sprite", "props": { "y": 124, "x": -34, "width": 289, "texture": "sence/taizi.png", "height": 72 }, "compId": 4 }, { "type": "playerAni", "props": { "y": 29, "x": 93, "var": "playerMv", "scaleY": 0.8, "scaleX": 0.8, "runtime": "ui.scene.playerAniUI" }, "compId": 5 }, { "type": "Sprite", "props": { "y": 138, "x": 78.5, "width": 124, "texture": "player/yinying.png", "height": 25 }, "compId": 6 }, { "type": "Sprite", "props": { "y": 143, "x": 13, "width": 62, "texture": "player/yinying.png", "height": 13 }, "compId": 7 }, { "type": "Image", "props": { "y": 91, "x": 10, "var": "petImg", "skin": "icons/600005.png", "scaleY": 0.8, "scaleX": 0.8 }, "compId": 8 }] }, { "type": "Button", "props": { "y": 17, "x": 607, "var": "closeBtn", "stateNum": 1, "skin": "sence/btn_guanbi.png", "name": "close" }, "compId": 10 }, { "type": "Sprite", "props": { "y": -13, "x": 135, "texture": "sence/biaotifu.png" }, "compId": 12, "child": [{ "type": "Sprite", "props": { "y": 8, "x": 167.5, "texture": "sence/biaoti_juese.png" }, "compId": 13 }] }, { "type": "Image", "props": { "y": 425, "x": 62, "var": "e0", "skin": "sence/kuang0.png" }, "compId": 14, "child": [{ "type": "Image", "props": { "skin": "icons/300004.png", "centerY": 0, "centerX": 0 }, "compId": 18 }] }, { "type": "Image", "props": { "y": 425, "x": 202, "var": "e1", "skin": "sence/kuang0.png" }, "compId": 15, "child": [{ "type": "Image", "props": { "skin": "icons/300004.png", "centerY": 0, "centerX": 0 }, "compId": 19 }] }, { "type": "Image", "props": { "y": 425, "x": 342, "var": "e2", "skin": "sence/kuang0.png" }, "compId": 16, "child": [{ "type": "Image", "props": { "skin": "icons/300004.png", "centerY": 0, "centerX": 0 }, "compId": 20 }] }, { "type": "Image", "props": { "y": 425, "x": 482, "var": "e3", "skin": "sence/kuang0.png" }, "compId": 17, "child": [{ "type": "Image", "props": { "skin": "icons/300004.png", "centerY": 0, "centerX": 0 }, "compId": 21 }] }, { "type": "Text", "props": { "y": 108, "x": 152.5, "width": 365, "var": "nameText", "text": "起码合成冲", "height": 41, "fontSize": 40, "color": "#ffffff", "align": "center", "runtime": "laya.display.Text" }, "compId": 23 }], "loadList": ["sence/kuangBG.png", "sence/chuangkoubai.png", "sence/chuangkouzong.png", "sence/taizi.png", "player/yinying.png", "icons/600005.png", "sence/btn_guanbi.png", "sence/biaotifu.png", "sence/biaoti_juese.png", "sence/kuang0.png", "icons/300004.png"], "loadList3D": [] };
            return RankInfoDialogUI;
        }(Laya.Dialog));
        scene.RankInfoDialogUI = RankInfoDialogUI;
        REG("ui.scene.RankInfoDialogUI", RankInfoDialogUI);
        var RedFlashUI = /** @class */ (function (_super) {
            __extends(RedFlashUI, _super);
            function RedFlashUI() {
                return _super.call(this) || this;
            }
            RedFlashUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(RedFlashUI.uiView);
            };
            RedFlashUI.uiView = { "type": "View", "props": { "width": 33, "height": 64 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "skin": "sence/hongtan.png" }, "compId": 3 }], "animations": [{ "nodes": [{ "target": 3, "keyframes": { "visible": [{ "value": true, "tweenMethod": "linearNone", "tween": false, "target": 3, "key": "visible", "index": 0 }, { "value": false, "tweenMethod": "linearNone", "tween": false, "target": 3, "key": "visible", "index": 5 }, { "value": true, "tweenMethod": "linearNone", "tween": false, "target": 3, "key": "visible", "index": 10 }, { "value": false, "tweenMethod": "linearNone", "tween": false, "target": 3, "key": "visible", "index": 15 }, { "value": true, "tweenMethod": "linearNone", "tween": false, "target": 3, "key": "visible", "index": 20 }, { "value": false, "tweenMethod": "linearNone", "tween": false, "target": 3, "key": "visible", "index": 25 }] } }], "name": "ani1", "id": 1, "frameRate": 24, "action": 0 }], "loadList": ["sence/hongtan.png"], "loadList3D": [] };
            return RedFlashUI;
        }(Laya.View));
        scene.RedFlashUI = RedFlashUI;
        REG("ui.scene.RedFlashUI", RedFlashUI);
        var RedPointUI = /** @class */ (function (_super) {
            __extends(RedPointUI, _super);
            function RedPointUI() {
                return _super.call(this) || this;
            }
            RedPointUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(RedPointUI.uiView);
            };
            RedPointUI.uiView = { "type": "View", "props": { "width": 50, "height": 50 }, "compId": 2, "child": [{ "type": "Sprite", "props": { "y": 0, "x": 0, "texture": "sence/hongdian.png" }, "compId": 3 }], "loadList": ["sence/hongdian.png"], "loadList3D": [] };
            return RedPointUI;
        }(Laya.View));
        scene.RedPointUI = RedPointUI;
        REG("ui.scene.RedPointUI", RedPointUI);
        var RedPointViewUI = /** @class */ (function (_super) {
            __extends(RedPointViewUI, _super);
            function RedPointViewUI() {
                return _super.call(this) || this;
            }
            RedPointViewUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(RedPointViewUI.uiView);
            };
            RedPointViewUI.uiView = { "type": "View", "props": { "width": 50, "height": 100 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 59, "x": 25, "skin": "sence/hongdian.png", "anchorY": 0.5, "anchorX": 0.5 }, "compId": 3 }], "animations": [{ "nodes": [{ "target": 3, "keyframes": { "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "scaleY", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 19 }, { "value": 1.2, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 24 }, { "value": 0.9, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 28 }, { "value": 1.1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 32 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 35 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "scaleX", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 19 }, { "value": 1.2, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 24 }, { "value": 0.9, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 28 }, { "value": 1.1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 32 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 35 }] } }], "name": "ani1", "id": 1, "frameRate": 24, "action": 0 }], "loadList": ["sence/hongdian.png"], "loadList3D": [] };
            return RedPointViewUI;
        }(Laya.View));
        scene.RedPointViewUI = RedPointViewUI;
        REG("ui.scene.RedPointViewUI", RedPointViewUI);
        var RoleDialogUI = /** @class */ (function (_super) {
            __extends(RoleDialogUI, _super);
            function RoleDialogUI() {
                return _super.call(this) || this;
            }
            RoleDialogUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(RoleDialogUI.uiView);
            };
            RoleDialogUI.uiView = { "type": "Dialog", "props": { "width": 675, "isModal": true, "height": 1200 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 15, "x": 0, "width": 675, "skin": "sence/kuangBG.png", "sizeGrid": "81,70,76,69", "height": 1152 }, "compId": 4 }, { "type": "Image", "props": { "y": 94, "x": 12, "width": 644, "skin": "sence/chuangkoubai.png", "sizeGrid": "20,23,19,22", "height": 982 }, "compId": 5 }, { "type": "Image", "props": { "y": 107, "x": 24, "width": 619, "skin": "sence/chuangkouzong.png", "sizeGrid": "21,26,24,26", "height": 226 }, "compId": 7 }, { "type": "Image", "props": { "y": 338, "x": 25, "width": 615, "skin": "sence/chuangkouzong2.png", "sizeGrid": "16,22,17,19", "height": 131 }, "compId": 8 }, { "type": "Image", "props": { "y": 342, "x": 30, "width": 123, "var": "selectImg", "skin": "sence/meiyoukuang.png", "height": 123 }, "compId": 9, "child": [{ "type": "Image", "props": { "var": "logoImg", "skin": "icons/200003.png", "centerY": 0, "centerX": 0 }, "compId": 77 }] }, { "type": "Sprite", "props": { "y": 347, "x": 156, "texture": "sence/toukuang.png" }, "compId": 10 }, { "type": "Sprite", "props": { "y": 348, "x": 221, "texture": "sence/toukuang.png" }, "compId": 11 }, { "type": "Sprite", "props": { "y": 347, "x": 285, "texture": "sence/toukuang.png" }, "compId": 12 }, { "type": "Sprite", "props": { "y": 347, "x": 349, "texture": "sence/toukuang.png" }, "compId": 13 }, { "type": "Sprite", "props": { "y": 348, "x": 413, "texture": "sence/toukuang.png" }, "compId": 14 }, { "type": "Button", "props": { "y": 431, "x": 558, "width": 160, "var": "equipBtn", "stateNum": 1, "skin": "sence/btn_lv.png", "sizeGrid": "0,18,0,17", "height": 61, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 16, "child": [{ "type": "Sprite", "props": { "y": 14, "x": 48.5, "var": "zhuanBeiSp", "texture": "sence/btnzhuangbei.png" }, "compId": 25 }, { "type": "Sprite", "props": { "y": 16, "x": 52.5, "var": "chuZhanSp", "texture": "sence/chuzhan.png" }, "compId": 123 }] }, { "type": "Sprite", "props": { "y": 360.5, "x": 423.5, "texture": "sence/shengminda.png" }, "compId": 17 }, { "type": "Sprite", "props": { "y": 354.5, "x": 357.5, "texture": "sence/minjieda.png" }, "compId": 18 }, { "type": "Sprite", "props": { "y": 358, "x": 298, "texture": "sence/fangyuda.png" }, "compId": 19 }, { "type": "Sprite", "props": { "y": 352, "x": 224, "texture": "sence/baojida.png" }, "compId": 20 }, { "type": "Sprite", "props": { "y": 357.5, "x": 168.5, "texture": "sence/gongjida.png" }, "compId": 21 }, { "type": "Button", "props": { "y": 1081, "x": 474, "width": 144, "var": "zhengliBtn", "stateNum": 1, "skin": "sence/btn_huang.png", "sizeGrid": "0,18,0,18", "height": 61 }, "compId": 22, "child": [{ "type": "Sprite", "props": { "y": 12.5, "x": 42, "texture": "sence/btnzhengli.png" }, "compId": 23 }] }, { "type": "Image", "props": { "y": 117, "x": 337, "width": 282, "skin": "sence/chuangkouzong2.png", "sizeGrid": "28,27,23,32", "height": 38 }, "compId": 40 }, { "type": "Image", "props": { "y": 158, "x": 337, "width": 282, "skin": "sence/chuangkouzong2.png", "sizeGrid": "28,27,23,32", "height": 38 }, "compId": 41 }, { "type": "Image", "props": { "y": 200, "x": 337, "width": 282, "skin": "sence/chuangkouzong2.png", "sizeGrid": "28,27,23,32", "height": 38 }, "compId": 42 }, { "type": "Image", "props": { "y": 241, "x": 337, "width": 282, "skin": "sence/chuangkouzong2.png", "sizeGrid": "28,27,23,32", "height": 38 }, "compId": 43 }, { "type": "Image", "props": { "y": 282, "x": 337, "width": 282, "skin": "sence/chuangkouzong2.png", "sizeGrid": "28,27,23,32", "height": 38 }, "compId": 44 }, { "type": "Sprite", "props": { "y": 154, "x": 342.5, "texture": "sence/baoji.png" }, "compId": 26 }, { "type": "Sprite", "props": { "y": 118, "x": 344, "texture": "sence/gongji.png" }, "compId": 27 }, { "type": "Sprite", "props": { "y": 200, "x": 344, "texture": "sence/fangyu.png" }, "compId": 28 }, { "type": "Sprite", "props": { "y": 239, "x": 341, "texture": "sence/minjie.png" }, "compId": 29 }, { "type": "Sprite", "props": { "y": 282, "x": 344, "texture": "sence/shengmin.png" }, "compId": 30 }, { "type": "Text", "props": { "y": 125, "x": 469, "var": "label0", "text": "20000", "fontSize": 22, "color": "#ff5252", "runtime": "laya.display.Text" }, "compId": 49 }, { "type": "Text", "props": { "y": 166, "x": 469, "var": "label1", "text": "20000", "fontSize": 22, "color": "#ffde44", "runtime": "laya.display.Text" }, "compId": 50 }, { "type": "Text", "props": { "y": 207, "x": 469, "var": "label2", "text": "20000", "fontSize": 22, "color": "#8eceff", "runtime": "laya.display.Text" }, "compId": 51 }, { "type": "Text", "props": { "y": 248, "x": 469, "var": "label3", "text": "20000", "fontSize": 22, "color": "#c974ff", "runtime": "laya.display.Text" }, "compId": 52 }, { "type": "Text", "props": { "y": 288, "x": 469, "var": "label4", "text": "20000", "fontSize": 22, "color": "#9efa3a", "runtime": "laya.display.Text" }, "compId": 53 }, { "type": "Text", "props": { "y": 412, "x": 156, "width": 62, "var": "l1", "valign": "middle", "text": "2000", "height": 38, "fontSize": 22, "color": "#ff5252", "align": "center", "runtime": "laya.display.Text" }, "compId": 54 }, { "type": "Text", "props": { "y": 414, "x": 225, "width": 49, "var": "l2", "valign": "middle", "text": "2000", "height": 33, "fontSize": 22, "color": "#ffde44", "align": "center", "runtime": "laya.display.Text" }, "compId": 55 }, { "type": "Text", "props": { "y": 413, "x": 284, "width": 62, "var": "l3", "valign": "middle", "text": "2000", "height": 35, "fontSize": 22, "color": "#8eceff", "align": "center", "runtime": "laya.display.Text" }, "compId": 56 }, { "type": "Text", "props": { "y": 411, "x": 349, "width": 63, "var": "l4", "valign": "middle", "text": "2000", "height": 40, "fontSize": 22, "color": "#c974ff", "align": "center", "runtime": "laya.display.Text" }, "compId": 57 }, { "type": "Text", "props": { "y": 415, "x": 413, "width": 59, "var": "l5", "valign": "middle", "text": "2000", "height": 32, "fontSize": 22, "color": "#9efa3a", "align": "center", "runtime": "laya.display.Text" }, "compId": 58 }, { "type": "Box", "props": { "var": "heibox", "top": 0, "right": 0, "left": 0, "bottom": 0, "bgColor": "#000000", "alpha": 0.7 }, "compId": 86 }, { "type": "Box", "props": { "y": 343, "x": 34, "var": "sellBox", "mouseThrough": true }, "compId": 81, "child": [{ "type": "Button", "props": { "y": 29, "x": 523, "width": 160, "var": "sellBtn", "stateNum": 1, "skin": "sence/btn_hong.png", "sizeGrid": "0,18,0,17", "height": 60, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 15, "child": [{ "type": "Image", "props": { "var": "btnLabelImg", "skin": "sence/btnfanmai.png", "centerY": -1, "centerX": -1 }, "compId": 24 }, { "type": "Box", "props": { "y": 13, "x": 11, "var": "sellpricebox" }, "compId": 95, "child": [{ "type": "FontClip", "props": { "y": 4, "x": 61, "var": "priceFc", "value": "99998", "spaceX": -5, "skin": "sence/clip_shuzi.png", "sheet": "01234 56789", "align": "left" }, "compId": 93 }, { "type": "Image", "props": { "y": 0, "x": 0, "var": "chushouImage", "skin": "sence/chushou.png" }, "compId": 94 }] }] }, { "type": "Image", "props": { "y": 181, "x": -10.5, "width": 617, "skin": "sence/chuangkoumiaobian.png", "sizeGrid": "22,28,16,24", "height": 546 }, "compId": 87 }, { "type": "Tab", "props": { "y": 134, "var": "tab", "stateNum": 2, "skin": "sence/tab_huang.png", "selectedIndex": 0, "labels": ",,,," }, "compId": 60 }, { "type": "Sprite", "props": { "y": 141, "x": 36, "texture": "sence/tabwuqi.png" }, "compId": 64 }, { "type": "Sprite", "props": { "y": 143, "x": 150, "texture": "sence/tabtoukui.png" }, "compId": 65 }, { "type": "Sprite", "props": { "y": 143, "x": 275.5, "texture": "sence/tabkuijia.png" }, "compId": 66 }, { "type": "Sprite", "props": { "y": 141, "x": 388, "texture": "sence/tabzuoqi.png" }, "compId": 67 }, { "type": "List", "props": { "y": 186, "x": -1, "width": 587, "var": "list", "spaceY": -20, "selectEnable": true, "repeatY": 4, "repeatX": 4, "height": 545 }, "compId": 70, "child": [{ "type": "BagListCell", "props": { "y": 0, "x": 0, "renderType": "render", "runtime": "ui.scene.BagListCellUI" }, "compId": 76 }] }, { "type": "hongtan", "props": { "y": 99, "x": 82, "var": "v0", "runtime": "ui.scene.hongtanUI" }, "compId": 110 }, { "type": "hongtan", "props": { "y": 98, "x": 202, "var": "v1", "runtime": "ui.scene.hongtanUI" }, "compId": 111 }, { "type": "hongtan", "props": { "y": 99, "x": 324, "var": "v2", "runtime": "ui.scene.hongtanUI" }, "compId": 112 }, { "type": "hongtan", "props": { "y": 99, "x": 446, "var": "v3", "runtime": "ui.scene.hongtanUI" }, "compId": 113 }, { "type": "hongtan", "props": { "y": 99, "x": 556, "var": "v4", "runtime": "ui.scene.hongtanUI" }, "compId": 115 }, { "type": "Sprite", "props": { "y": 143, "x": 506, "texture": "sence/tabchongwu.png" }, "compId": 127 }] }, { "type": "Text", "props": { "y": 1101.5, "x": 120.97802734375, "var": "gailvlabel", "text": "下一级合成成功率：50%", "fontSize": 26, "color": "#b7af9e", "runtime": "laya.display.Text" }, "compId": 97 }, { "type": "Box", "props": { "y": 90, "x": 48, "scaleY": 1.2, "scaleX": 1.2 }, "compId": 101, "child": [{ "type": "Sprite", "props": { "y": 109, "x": 3, "width": 209, "texture": "sence/taizi.png", "height": 87 }, "compId": 48 }, { "type": "playerAni", "props": { "y": 24, "x": 92, "var": "playerMv", "scaleY": 0.8, "scaleX": 0.8, "runtime": "ui.scene.playerAniUI" }, "compId": 100 }, { "type": "Sprite", "props": { "y": 133, "x": 77.5, "width": 124, "texture": "player/yinying.png", "height": 25 }, "compId": 124 }, { "type": "Sprite", "props": { "y": 141, "x": 14, "width": 62, "texture": "player/yinying.png", "height": 13 }, "compId": 126 }, { "type": "Image", "props": { "y": 89, "x": 13, "var": "petImg", "skin": "player/pet/600001.png", "scaleY": 0.8, "scaleX": 0.8 }, "compId": 125 }] }, { "type": "Text", "props": { "y": 125, "x": 542, "var": "al0", "text": "(+100)", "fontSize": 22, "color": "#ff5252", "runtime": "laya.display.Text" }, "compId": 102 }, { "type": "Text", "props": { "y": 163, "x": 542, "var": "al1", "text": "(+100)", "fontSize": 22, "color": "#ff5252", "runtime": "laya.display.Text" }, "compId": 103 }, { "type": "Text", "props": { "y": 207, "x": 542, "var": "al2", "text": "(+100)", "fontSize": 22, "color": "#ff5252", "runtime": "laya.display.Text" }, "compId": 104 }, { "type": "Text", "props": { "y": 247, "x": 542, "var": "al3", "text": "(+100)", "fontSize": 22, "color": "#ff5252", "runtime": "laya.display.Text" }, "compId": 105 }, { "type": "Text", "props": { "y": 287, "x": 542, "var": "al4", "text": "(+100)", "fontSize": 22, "color": "#ff5252", "runtime": "laya.display.Text" }, "compId": 106 }, { "type": "Sprite", "props": { "y": -11, "x": 133, "texture": "sence/biaotifu.png" }, "compId": 107, "child": [{ "type": "Sprite", "props": { "y": 8, "x": 167.5, "texture": "sence/biaoti_juese.png" }, "compId": 108 }] }, { "type": "Box", "props": { "y": 347, "x": 30, "width": 127, "var": "eggBox", "height": 114 }, "compId": 122, "child": [{ "type": "Button", "props": { "y": 83, "x": 61, "width": 122, "var": "effBtn", "stateNum": 1, "skin": "sence/btn_zi.png", "sizeGrid": "0,18,0,17", "height": 57, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 116, "child": [{ "type": "Sprite", "props": { "y": 11, "x": 55, "texture": "sence/zadan.png" }, "compId": 117 }, { "type": "Sprite", "props": { "y": 5, "x": 11, "width": 38, "texture": "sence/action.png", "height": 43 }, "compId": 118 }] }, { "type": "FontClip", "props": { "y": 13, "x": 41, "width": 80, "var": "goldFc", "value": "123", "spaceX": -4, "skin": "sence/clip_shuzi.png", "sheet": "01234 56789", "scaleY": 1, "scaleX": 1, "height": 24, "align": "center" }, "compId": 119 }, { "type": "Sprite", "props": { "y": 35, "x": 5, "width": 45, "texture": "player/yinying.png", "height": 9 }, "compId": 121 }, { "type": "Sprite", "props": { "x": 10, "width": 34, "texture": "sence/dan.png", "height": 41 }, "compId": 120 }] }, { "type": "Button", "props": { "y": 1079, "x": 30.97802734375, "width": 80, "var": "closeBtn", "stateNum": 1, "skin": "sence/btn_guanbi.png", "name": "close", "height": 80 }, "compId": 130 }], "loadList": ["sence/kuangBG.png", "sence/chuangkoubai.png", "sence/chuangkouzong.png", "sence/chuangkouzong2.png", "sence/meiyoukuang.png", "icons/200003.png", "sence/toukuang.png", "sence/btn_lv.png", "sence/btnzhuangbei.png", "sence/chuzhan.png", "sence/shengminda.png", "sence/minjieda.png", "sence/fangyuda.png", "sence/baojida.png", "sence/gongjida.png", "sence/btn_huang.png", "sence/btnzhengli.png", "sence/baoji.png", "sence/gongji.png", "sence/fangyu.png", "sence/minjie.png", "sence/shengmin.png", "sence/btn_hong.png", "sence/btnfanmai.png", "sence/clip_shuzi.png", "sence/chushou.png", "sence/chuangkoumiaobian.png", "sence/tab_huang.png", "sence/tabwuqi.png", "sence/tabtoukui.png", "sence/tabkuijia.png", "sence/tabzuoqi.png", "sence/tabchongwu.png", "sence/taizi.png", "player/yinying.png", "player/pet/600001.png", "sence/biaotifu.png", "sence/biaoti_juese.png", "sence/btn_zi.png", "sence/zadan.png", "sence/action.png", "sence/dan.png", "sence/btn_guanbi.png"], "loadList3D": [] };
            return RoleDialogUI;
        }(Laya.Dialog));
        scene.RoleDialogUI = RoleDialogUI;
        REG("ui.scene.RoleDialogUI", RoleDialogUI);
        var sanjiaoUI = /** @class */ (function (_super) {
            __extends(sanjiaoUI, _super);
            function sanjiaoUI() {
                return _super.call(this) || this;
            }
            sanjiaoUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(sanjiaoUI.uiView);
            };
            sanjiaoUI.uiView = { "type": "View", "props": {}, "compId": 2, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "skin": "resselectstage/sanjiao.png", "anchorY": 0.5, "anchorX": 0.5 }, "compId": 3 }], "animations": [{ "nodes": [{ "target": 3, "keyframes": { "y": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 0 }, { "value": -30, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 15 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 30 }] } }], "name": "ani1", "id": 1, "frameRate": 24, "action": 0 }], "loadList": ["resselectstage/sanjiao.png"], "loadList3D": [] };
            return sanjiaoUI;
        }(Laya.View));
        scene.sanjiaoUI = sanjiaoUI;
        REG("ui.scene.sanjiaoUI", sanjiaoUI);
        var SelectStage2UI = /** @class */ (function (_super) {
            __extends(SelectStage2UI, _super);
            function SelectStage2UI() {
                return _super.call(this) || this;
            }
            SelectStage2UI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(SelectStage2UI.uiView);
            };
            SelectStage2UI.uiView = { "type": "Dialog", "props": { "width": 680, "isModal": true, "height": 1200 }, "compId": 2, "child": [{ "type": "Box", "props": { "y": -17, "x": 52, "scaleY": 0.85, "scaleX": 0.85 }, "compId": 75, "child": [{ "type": "Image", "props": { "y": 12, "width": 680, "skin": "resselectstage/kuangBG.png", "sizeGrid": "72,59,70,63", "height": 1165 }, "compId": 3 }, { "type": "Image", "props": { "y": 88, "x": 17.5, "skin": "resselectstage/mission2.jpg" }, "compId": 4 }, { "type": "Box", "props": { "y": 447, "x": 456, "var": "s18" }, "compId": 12, "child": [{ "type": "StageView", "props": { "y": 6.5, "x": 0, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 39 }, { "type": "Image", "props": { "y": 165, "x": 74, "skin": "resselectstage/dian.png" }, "compId": 40 }, { "type": "Image", "props": { "y": 201, "x": 84, "skin": "resselectstage/dian.png" }, "compId": 41 }, { "type": "Image", "props": { "y": 232, "x": 90, "skin": "resselectstage/dian.png" }, "compId": 42 }] }, { "type": "Box", "props": { "y": 800, "x": 200, "var": "s15" }, "compId": 9, "child": [{ "type": "Image", "props": { "y": -74, "x": 91, "skin": "resselectstage/dian.png" }, "compId": 24 }, { "type": "Image", "props": { "y": -37, "x": 115, "skin": "resselectstage/dian.png" }, "compId": 25 }, { "type": "Image", "props": { "y": 3, "x": 128, "skin": "resselectstage/dian.png" }, "compId": 26 }, { "type": "StageView", "props": { "y": -1, "x": 62, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 27 }] }, { "type": "Box", "props": { "y": 644, "x": 479, "var": "s17" }, "compId": 10, "child": [{ "type": "StageView", "props": { "y": -1, "x": 0, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 28 }, { "type": "Image", "props": { "y": 218, "x": 83, "skin": "resselectstage/dian.png" }, "compId": 29 }, { "type": "Image", "props": { "y": 184, "x": 83, "skin": "resselectstage/dian.png" }, "compId": 31 }, { "type": "Image", "props": { "y": 149.5, "x": 83, "skin": "resselectstage/dian.png" }, "compId": 32 }] }, { "type": "Box", "props": { "y": 827, "x": 487, "var": "s16" }, "compId": 11, "child": [{ "type": "StageView", "props": { "y": -1, "x": 0, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 33 }, { "type": "Image", "props": { "y": 131, "x": -142, "skin": "resselectstage/dian.png" }, "compId": 34 }, { "type": "Image", "props": { "y": 161.5, "x": -94, "skin": "resselectstage/dian.png" }, "compId": 35 }, { "type": "Image", "props": { "y": 164.5, "x": -33, "skin": "resselectstage/dian.png" }, "compId": 37 }, { "type": "Image", "props": { "y": 153, "x": 21, "skin": "resselectstage/dian.png" }, "compId": 38 }] }, { "type": "Box", "props": { "y": 415, "x": 234, "var": "s19" }, "compId": 14, "child": [{ "type": "StageView", "props": { "y": -1, "x": 0, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 47 }, { "type": "Image", "props": { "y": 68.5, "x": 201, "skin": "resselectstage/dian.png" }, "compId": 49 }, { "type": "Image", "props": { "y": 72.5, "x": 158, "skin": "resselectstage/dian.png" }, "compId": 50 }, { "type": "Image", "props": { "y": 86, "x": 117, "skin": "resselectstage/dian.png" }, "compId": 51 }, { "type": "Image", "props": { "y": 79, "x": 246, "skin": "resselectstage/dian.png" }, "compId": 64 }] }, { "type": "Box", "props": { "y": 277, "x": 61, "var": "s21" }, "compId": 15, "child": [{ "type": "StageView", "props": { "y": 0, "x": 74, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 52 }, { "type": "Image", "props": { "y": 209, "x": 26, "skin": "resselectstage/dian.png" }, "compId": 53 }, { "type": "Image", "props": { "y": 252, "x": 29, "skin": "resselectstage/dian.png" }, "compId": 54 }, { "type": "Image", "props": { "y": 135.5, "x": 89, "skin": "resselectstage/dian.png" }, "compId": 55 }, { "type": "Image", "props": { "y": 165, "x": 49, "skin": "resselectstage/dian.png" }, "compId": 65 }] }, { "type": "Box", "props": { "y": 164, "x": 193, "var": "s22" }, "compId": 16, "child": [{ "type": "StageView", "props": { "y": 0, "x": 62, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 56 }, { "type": "Image", "props": { "y": 193, "x": 102, "skin": "resselectstage/dian.png" }, "compId": 57 }, { "type": "Image", "props": { "y": 154, "x": 117, "skin": "resselectstage/dian.png" }, "compId": 58 }, { "type": "Image", "props": { "y": 216, "x": 59, "skin": "resselectstage/dian.png" }, "compId": 59 }] }, { "type": "Box", "props": { "y": 457, "x": 62, "var": "s20" }, "compId": 13, "child": [{ "type": "StageView", "props": { "y": -1, "x": 0, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 44 }, { "type": "Image", "props": { "y": 115.5, "x": 157, "skin": "resselectstage/dian.png" }, "compId": 45 }, { "type": "Image", "props": { "y": 127, "x": 113, "skin": "resselectstage/dian.png" }, "compId": 46 }, { "type": "Image", "props": { "y": 95.5, "x": 195, "skin": "resselectstage/dian.png" }, "compId": 62 }] }, { "type": "Image", "props": { "skin": "sence/biaotifu.png", "centerX": 1 }, "compId": 66, "child": [{ "type": "Image", "props": { "y": 17, "var": "titleimg", "skin": "sence/diwanglingmu.png", "centerX": 0 }, "compId": 67 }] }, { "type": "Box", "props": { "y": 600, "x": 92, "var": "s14" }, "compId": 8, "child": [{ "type": "Image", "props": { "y": 198, "x": 14, "skin": "resselectstage/dian.png" }, "compId": 20 }, { "type": "Image", "props": { "y": 152, "x": 26, "skin": "resselectstage/dian.png" }, "compId": 21 }, { "type": "Image", "props": { "y": 121, "x": 59, "skin": "resselectstage/dian.png" }, "compId": 22 }, { "type": "StageView", "props": { "y": -1, "x": 62, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 23 }] }, { "type": "BossStageView", "props": { "y": 564, "x": 312, "var": "s23", "runtime": "ui.scene.BossStageViewUI" }, "compId": 71 }, { "type": "Box", "props": { "y": 795, "x": 48, "var": "s13" }, "compId": 7, "child": [{ "type": "StageView", "props": { "y": -1, "x": 0, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 19 }] }, { "type": "BossStageView", "props": { "y": 215, "x": 368, "var": "s24", "runtime": "ui.scene.BossStageViewUI" }, "compId": 72 }, { "type": "Button", "props": { "y": 1085, "x": 30, "width": 80, "var": "closeBtn", "stateNum": 1, "skin": "sence/btn_guanbi.png", "name": "close", "height": 80 }, "compId": 74 }] }], "loadList": ["resselectstage/kuangBG.png", "resselectstage/mission2.jpg", "resselectstage/dian.png", "sence/biaotifu.png", "sence/diwanglingmu.png", "sence/btn_guanbi.png"], "loadList3D": [] };
            return SelectStage2UI;
        }(Laya.Dialog));
        scene.SelectStage2UI = SelectStage2UI;
        REG("ui.scene.SelectStage2UI", SelectStage2UI);
        var SelectStage3UI = /** @class */ (function (_super) {
            __extends(SelectStage3UI, _super);
            function SelectStage3UI() {
                return _super.call(this) || this;
            }
            SelectStage3UI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(SelectStage3UI.uiView);
            };
            SelectStage3UI.uiView = { "type": "Dialog", "props": { "width": 680, "isModal": true, "height": 1200 }, "compId": 2, "child": [{ "type": "Box", "props": { "y": 0, "x": 48, "scaleY": 0.85, "scaleX": 0.85 }, "compId": 114, "child": [{ "type": "Image", "props": { "y": 5, "width": 680, "skin": "resselectstage/kuangBG.png", "sizeGrid": "72,59,70,63", "height": 1171 }, "compId": 3 }, { "type": "Image", "props": { "y": 92, "x": 17, "skin": "resselectstage/mission3.jpg" }, "compId": 4, "child": [{ "type": "Box", "props": { "y": 711, "x": 48, "var": "s25" }, "compId": 61, "child": [{ "type": "StageView", "props": { "y": -1, "x": 0, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 71 }] }, { "type": "Box", "props": { "y": 525.5, "x": -70, "var": "s26" }, "compId": 62, "child": [{ "type": "Image", "props": { "y": 268, "x": 115, "skin": "resselectstage/dian.png" }, "compId": 72 }, { "type": "Image", "props": { "y": 222, "x": 92, "skin": "resselectstage/dian.png" }, "compId": 73 }, { "type": "Image", "props": { "y": 167, "x": 94, "skin": "resselectstage/dian.png" }, "compId": 74 }, { "type": "StageView", "props": { "y": -4.5, "x": 61, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 75 }] }, { "type": "Box", "props": { "y": 645, "x": 150, "var": "s27" }, "compId": 63, "child": [{ "type": "Image", "props": { "y": -21, "x": -20, "skin": "resselectstage/dian.png" }, "compId": 76 }, { "type": "Image", "props": { "y": -2, "x": 35, "skin": "resselectstage/dian.png" }, "compId": 77 }, { "type": "Image", "props": { "y": 25, "x": 76, "skin": "resselectstage/dian.png" }, "compId": 78 }, { "type": "StageView", "props": { "y": -5, "x": 59, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 79 }] }, { "type": "Box", "props": { "y": 747, "x": 486, "var": "s28" }, "compId": 65, "child": [{ "type": "StageView", "props": { "y": -1, "x": 0, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 85 }, { "type": "Image", "props": { "y": 64, "x": -199, "skin": "resselectstage/dian.png" }, "compId": 86 }, { "type": "Image", "props": { "y": 109, "x": -170, "skin": "resselectstage/dian.png" }, "compId": 87 }, { "type": "Image", "props": { "y": 146, "x": -111, "skin": "resselectstage/dian.png" }, "compId": 88 }, { "type": "Image", "props": { "y": 147, "x": -45, "skin": "resselectstage/dian.png" }, "compId": 89 }, { "type": "Image", "props": { "y": 131.5, "x": 11, "skin": "resselectstage/dian.png" }, "compId": 90 }] }, { "type": "Box", "props": { "y": 418, "x": 464, "var": "s29" }, "compId": 64, "child": [{ "type": "StageView", "props": { "y": -1, "x": 0, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 80 }, { "type": "Image", "props": { "y": 337, "x": 112.5, "skin": "resselectstage/dian.png" }, "compId": 81 }, { "type": "Image", "props": { "y": 279, "x": 126.5, "skin": "resselectstage/dian.png" }, "compId": 82 }, { "type": "Image", "props": { "y": 216, "x": 137, "skin": "resselectstage/dian.png" }, "compId": 83 }, { "type": "Image", "props": { "y": 157, "x": 115, "skin": "resselectstage/dian.png" }, "compId": 84 }] }, { "type": "Box", "props": { "y": 362, "x": 224, "var": "s30" }, "compId": 66, "child": [{ "type": "StageView", "props": { "y": 7, "x": 8, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 91 }, { "type": "Image", "props": { "y": 144, "x": 250, "skin": "resselectstage/dian.png" }, "compId": 92 }, { "type": "Image", "props": { "y": 128.5, "x": 210, "skin": "resselectstage/dian.png" }, "compId": 93 }, { "type": "Image", "props": { "y": 121.5, "x": 166, "skin": "resselectstage/dian.png" }, "compId": 94 }, { "type": "Image", "props": { "y": 116, "x": 128, "skin": "resselectstage/dian.png" }, "compId": 95 }] }, { "type": "Box", "props": { "y": 64, "x": 14, "var": "s31" }, "compId": 67, "child": [{ "type": "StageView", "props": { "y": -1, "x": 0, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 96 }, { "type": "Image", "props": { "y": 203, "x": 32, "skin": "resselectstage/dian.png" }, "compId": 97 }, { "type": "Image", "props": { "y": 166, "x": 38, "skin": "resselectstage/dian.png" }, "compId": 98 }] }, { "type": "Box", "props": { "y": 262, "x": -11, "var": "s32" }, "compId": 68, "child": [{ "type": "StageView", "props": { "y": 0, "x": 11, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 99 }, { "type": "Image", "props": { "y": 223, "x": 233, "skin": "resselectstage/dian.png" }, "compId": 100 }, { "type": "Image", "props": { "y": 217, "x": 173, "skin": "resselectstage/dian.png" }, "compId": 101 }, { "type": "Image", "props": { "y": 194, "x": 115, "skin": "resselectstage/dian.png" }, "compId": 102 }, { "type": "Image", "props": { "y": 163, "x": 77, "skin": "resselectstage/dian.png" }, "compId": 103 }] }, { "type": "Box", "props": { "y": 117, "x": 127, "var": "s33" }, "compId": 69, "child": [{ "type": "StageView", "props": { "y": 0, "x": 74, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 104 }, { "type": "Image", "props": { "y": 52, "x": 13, "skin": "resselectstage/dian.png" }, "compId": 105 }, { "type": "Image", "props": { "y": 52, "x": 52, "skin": "resselectstage/dian.png" }, "compId": 106 }, { "type": "Image", "props": { "y": 63.5, "x": 90, "skin": "resselectstage/dian.png" }, "compId": 107 }] }, { "type": "Box", "props": { "y": 102, "x": 329, "var": "s34" }, "compId": 70, "child": [{ "type": "StageView", "props": { "y": 0, "x": 66, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 108 }, { "type": "Image", "props": { "y": 237, "x": 51, "skin": "resselectstage/dian.png" }, "compId": 109 }, { "type": "Image", "props": { "y": 214, "x": 106, "skin": "resselectstage/dian.png" }, "compId": 110 }, { "type": "Image", "props": { "y": 162, "x": 128, "skin": "resselectstage/dian.png" }, "compId": 111 }, { "type": "Image", "props": { "y": 218.5, "x": 0, "skin": "resselectstage/dian.png" }, "compId": 112 }, { "type": "Image", "props": { "y": 183.5, "x": -38, "skin": "resselectstage/dian.png" }, "compId": 113 }] }] }, { "type": "Image", "props": { "skin": "sence/biaotifu.png", "centerX": 0 }, "compId": 15, "child": [{ "type": "Image", "props": { "y": 17, "skin": "sence/haidaochengbao.png", "centerX": 0 }, "compId": 60 }] }, { "type": "BossStageView", "props": { "y": 305, "x": 101, "visible": false, "var": "s36", "runtime": "ui.scene.BossStageViewUI" }, "compId": 16 }, { "type": "BossStageView", "props": { "y": 670, "x": 349, "visible": false, "var": "s35", "runtime": "ui.scene.BossStageViewUI" }, "compId": 17 }, { "type": "Button", "props": { "y": 1089, "x": 34, "width": 80, "var": "closeBtn", "stateNum": 1, "skin": "sence/btn_guanbi.png", "name": "close", "height": 80 }, "compId": 18 }] }], "loadList": ["resselectstage/kuangBG.png", "resselectstage/mission3.jpg", "resselectstage/dian.png", "sence/biaotifu.png", "sence/haidaochengbao.png", "sence/btn_guanbi.png"], "loadList3D": [] };
            return SelectStage3UI;
        }(Laya.Dialog));
        scene.SelectStage3UI = SelectStage3UI;
        REG("ui.scene.SelectStage3UI", SelectStage3UI);
        var SelectStageDialogUI = /** @class */ (function (_super) {
            __extends(SelectStageDialogUI, _super);
            function SelectStageDialogUI() {
                return _super.call(this) || this;
            }
            SelectStageDialogUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(SelectStageDialogUI.uiView);
            };
            SelectStageDialogUI.uiView = { "type": "Dialog", "props": { "width": 680, "isModal": true, "height": 1200 }, "compId": 2, "child": [{ "type": "Box", "props": { "y": 0, "x": 50, "scaleY": 0.85, "scaleX": 0.85 }, "compId": 79, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 680, "skin": "resselectstage/kuangBG.png", "sizeGrid": "72,59,70,63", "height": 1186 }, "compId": 4 }, { "type": "Image", "props": { "y": 79, "x": 18, "skin": "resselectstage/mission1.jpg" }, "compId": 3 }, { "type": "Box", "props": { "y": 793, "x": 66, "var": "s1" }, "compId": 61, "child": [{ "type": "StageView", "props": { "y": -1, "x": 0, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 17 }] }, { "type": "Box", "props": { "y": 854, "x": 180, "var": "s2" }, "compId": 52, "child": [{ "type": "Image", "props": { "y": 73, "x": 0, "skin": "resselectstage/dian.png" }, "compId": 8 }, { "type": "Image", "props": { "y": 89, "x": 28, "skin": "resselectstage/dian.png" }, "compId": 9 }, { "type": "Image", "props": { "y": 100, "x": 62, "skin": "resselectstage/dian.png" }, "compId": 10 }, { "type": "StageView", "props": { "y": -1, "x": 62, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 18 }] }, { "type": "Box", "props": { "y": 857, "x": 359, "var": "s3" }, "compId": 53, "child": [{ "type": "Image", "props": { "y": 115, "x": 0, "skin": "resselectstage/dian.png" }, "compId": 13 }, { "type": "Image", "props": { "y": 120, "x": 35, "skin": "resselectstage/dian.png" }, "compId": 14 }, { "type": "Image", "props": { "y": 120, "x": 69, "skin": "resselectstage/dian.png" }, "compId": 15 }, { "type": "StageView", "props": { "y": -1, "x": 62, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 19 }] }, { "type": "Box", "props": { "y": 442, "x": 364, "var": "s5" }, "compId": 55, "child": [{ "type": "StageView", "props": { "y": -1, "x": 0, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 21 }, { "type": "Image", "props": { "y": 204, "x": 209, "skin": "resselectstage/dian.png" }, "compId": 32 }, { "type": "Image", "props": { "y": 161, "x": 203, "skin": "resselectstage/dian.png" }, "compId": 33 }, { "type": "Image", "props": { "y": 134, "x": 177, "skin": "resselectstage/dian.png" }, "compId": 34 }, { "type": "Image", "props": { "y": 115, "x": 135, "skin": "resselectstage/dian.png" }, "compId": 35 }] }, { "type": "Box", "props": { "y": 627, "x": 512, "var": "s4" }, "compId": 54, "child": [{ "type": "StageView", "props": { "y": -1, "x": 0, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 20 }, { "type": "Image", "props": { "y": 310, "x": 32, "skin": "resselectstage/dian.png" }, "compId": 27 }, { "type": "Image", "props": { "y": 278, "x": 54, "skin": "resselectstage/dian.png" }, "compId": 28 }, { "type": "Image", "props": { "y": 242, "x": 65, "skin": "resselectstage/dian.png" }, "compId": 29 }, { "type": "Image", "props": { "y": 204, "x": 69, "skin": "resselectstage/dian.png" }, "compId": 30 }, { "type": "Image", "props": { "y": 165, "x": 70, "skin": "resselectstage/dian.png" }, "compId": 31 }] }, { "type": "Box", "props": { "y": 565, "x": 144, "var": "s6" }, "compId": 56, "child": [{ "type": "StageView", "props": { "y": 6.5, "x": 0, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 22 }, { "type": "Image", "props": { "y": -1.5, "x": 209, "skin": "resselectstage/dian.png" }, "compId": 36 }, { "type": "Image", "props": { "y": 28.5, "x": 176, "skin": "resselectstage/dian.png" }, "compId": 37 }, { "type": "Image", "props": { "y": 69.5, "x": 165, "skin": "resselectstage/dian.png" }, "compId": 38 }, { "type": "Image", "props": { "y": 106.5, "x": 137, "skin": "resselectstage/dian.png" }, "compId": 39 }] }, { "type": "Box", "props": { "y": 234, "x": 46, "var": "s8" }, "compId": 58, "child": [{ "type": "StageView", "props": { "y": -1, "x": 0, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 24 }, { "type": "Image", "props": { "y": 203, "x": 32, "skin": "resselectstage/dian.png" }, "compId": 44 }, { "type": "Image", "props": { "y": 166, "x": 38, "skin": "resselectstage/dian.png" }, "compId": 45 }] }, { "type": "Box", "props": { "y": 417, "x": 15, "var": "s7" }, "compId": 57, "child": [{ "type": "StageView", "props": { "y": -1, "x": 0, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 23 }, { "type": "Image", "props": { "y": 252, "x": 126, "skin": "resselectstage/dian.png" }, "compId": 40 }, { "type": "Image", "props": { "y": 217, "x": 95, "skin": "resselectstage/dian.png" }, "compId": 41 }, { "type": "Image", "props": { "y": 186, "x": 75, "skin": "resselectstage/dian.png" }, "compId": 42 }, { "type": "Image", "props": { "y": 151, "x": 64, "skin": "resselectstage/dian.png" }, "compId": 43 }] }, { "type": "Box", "props": { "y": 122, "x": 160, "var": "s9" }, "compId": 59, "child": [{ "type": "StageView", "props": { "y": 0, "x": 74, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 25 }, { "type": "Image", "props": { "y": 166, "x": 0, "skin": "resselectstage/dian.png" }, "compId": 46 }, { "type": "Image", "props": { "y": 138, "x": 34, "skin": "resselectstage/dian.png" }, "compId": 47 }, { "type": "Image", "props": { "y": 116, "x": 74, "skin": "resselectstage/dian.png" }, "compId": 48 }] }, { "type": "Box", "props": { "y": 186, "x": 352, "var": "s10" }, "compId": 60, "child": [{ "type": "StageView", "props": { "y": 0, "x": 62, "name": "stageview", "runtime": "ui.scene.StageViewUI" }, "compId": 26 }, { "type": "Image", "props": { "y": 47, "x": 0, "skin": "resselectstage/dian.png" }, "compId": 49 }, { "type": "Image", "props": { "y": 63, "x": 32, "skin": "resselectstage/dian.png" }, "compId": 50 }, { "type": "Image", "props": { "y": 86, "x": 62, "skin": "resselectstage/dian.png" }, "compId": 51 }] }, { "type": "Image", "props": { "y": -9, "skin": "sence/biaotifu.png", "centerX": 9 }, "compId": 69, "child": [{ "type": "Image", "props": { "y": 17, "skin": "sence/youansenlin.png", "centerX": 0 }, "compId": 70 }] }, { "type": "BossStageView", "props": { "y": 289, "x": 172, "var": "s12", "runtime": "ui.scene.BossStageViewUI" }, "compId": 73 }, { "type": "BossStageView", "props": { "y": 606, "x": 342, "var": "s11", "runtime": "ui.scene.BossStageViewUI" }, "compId": 74 }, { "type": "Button", "props": { "y": 1081, "x": 18, "width": 80, "var": "closeBtn", "stateNum": 1, "skin": "sence/btn_guanbi.png", "name": "close", "height": 80 }, "compId": 77 }] }], "loadList": ["resselectstage/kuangBG.png", "resselectstage/mission1.jpg", "resselectstage/dian.png", "sence/biaotifu.png", "sence/youansenlin.png", "sence/btn_guanbi.png"], "loadList3D": [] };
            return SelectStageDialogUI;
        }(Laya.Dialog));
        scene.SelectStageDialogUI = SelectStageDialogUI;
        REG("ui.scene.SelectStageDialogUI", SelectStageDialogUI);
        var SellDialogUI = /** @class */ (function (_super) {
            __extends(SellDialogUI, _super);
            function SellDialogUI() {
                return _super.call(this) || this;
            }
            SellDialogUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(SellDialogUI.uiView);
            };
            SellDialogUI.uiView = { "type": "Dialog", "props": { "width": 700, "isModal": true, "height": 500 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 700, "skin": "sence/kuangBG.png", "sizeGrid": "81,70,76,69", "height": 500 }, "compId": 4 }, { "type": "Image", "props": { "y": 20, "skin": "sence/biaoti_tishi.png", "centerX": 0 }, "compId": 3 }, { "type": "Image", "props": { "y": 75, "width": 668, "skin": "sence/chuangkoubai.png", "sizeGrid": "20,23,19,22", "height": 360, "centerX": 0 }, "compId": 5 }, { "type": "Text", "props": { "y": 175, "x": 177.9892578125, "text": "确定出售选中物品吗?", "fontSize": 36, "color": "#482910", "bold": true, "runtime": "laya.display.Text" }, "compId": 6 }, { "type": "Button", "props": { "y": 314.5, "x": 119, "width": 150, "var": "cancelBtn", "stateNum": 1, "skin": "sence/btn_hong.png", "sizeGrid": "0,19,0,18", "name": "close", "height": 61 }, "compId": 7, "child": [{ "type": "Sprite", "props": { "y": 15.5, "x": 47.5, "texture": "sence/quxiao.png" }, "compId": 9 }] }, { "type": "Button", "props": { "y": 314.5, "x": 423, "width": 150, "var": "yesBtn", "stateNum": 1, "skin": "sence/btn_lv.png", "sizeGrid": "0,20,0,18", "name": "close", "height": 61 }, "compId": 8, "child": [{ "type": "Sprite", "props": { "y": 15.5, "x": 47, "texture": "sence/queding.png" }, "compId": 10 }] }], "loadList": ["sence/kuangBG.png", "sence/biaoti_tishi.png", "sence/chuangkoubai.png", "sence/btn_hong.png", "sence/quxiao.png", "sence/btn_lv.png", "sence/queding.png"], "loadList3D": [] };
            return SellDialogUI;
        }(Laya.Dialog));
        scene.SellDialogUI = SellDialogUI;
        REG("ui.scene.SellDialogUI", SellDialogUI);
        var SettingDialogUI = /** @class */ (function (_super) {
            __extends(SettingDialogUI, _super);
            function SettingDialogUI() {
                return _super.call(this) || this;
            }
            SettingDialogUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(SettingDialogUI.uiView);
            };
            SettingDialogUI.uiView = { "type": "Dialog", "props": { "width": 700, "isModal": true, "height": 485 }, "compId": 2, "child": [{ "type": "Image", "props": { "x": 0, "width": 700, "skin": "sence/kuangBG.png", "sizeGrid": "81,70,76,69", "height": 485 }, "compId": 3, "child": [{ "type": "Image", "props": { "y": 72, "width": 668, "skin": "sence/chuangkoubai.png", "sizeGrid": "20,23,19,22", "height": 353, "centerX": 1 }, "compId": 12 }, { "type": "Button", "props": { "y": 231, "x": 353, "width": 240, "var": "btn2", "stateNum": 1, "skin": "sence/btn_hong.png", "sizeGrid": "0,19,0,18", "height": 61, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 14, "child": [{ "type": "Image", "props": { "y": 13.5, "x": 62.5, "var": "img2", "skin": "setdialog/yinxiaoguan.png" }, "compId": 30 }] }, { "type": "Button", "props": { "y": 41, "x": 616, "stateNum": 1, "skin": "sence/btn_guanbi.png", "name": "close", "anchorY": 0.5, "anchorX": 0.5 }, "compId": 21 }, { "type": "Button", "props": { "y": 329, "x": 353, "width": 239, "var": "yesBtn", "stateNum": 1, "skin": "sence/btn_lv.png", "sizeGrid": "0,20,0,18", "height": 61, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 24, "child": [{ "type": "Sprite", "props": { "y": 14.5, "x": 67.5, "texture": "setdialog/tuichuzhandou.png" }, "compId": 26 }] }, { "type": "Button", "props": { "y": 132, "x": 353, "width": 239, "var": "btn1", "stateNum": 1, "skin": "sence/btn_lv.png", "sizeGrid": "0,20,0,18", "height": 61, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 27, "child": [{ "type": "Image", "props": { "y": 12.5, "x": 64, "var": "img1", "skin": "setdialog/shengyinkai.png" }, "compId": 31 }] }, { "type": "Sprite", "props": { "y": -16, "x": 135, "texture": "sence/biaotifu.png" }, "compId": 35, "child": [{ "type": "Image", "props": { "y": 10, "x": 10, "skin": "setdialog/biaoti_shezhi.png", "centerX": 0 }, "compId": 36 }] }, { "type": "Text", "props": { "y": 375, "x": 238, "width": 234, "var": "idtext", "text": "ID:", "height": 30, "fontSize": 30, "color": "#492a0e", "align": "center", "runtime": "laya.display.Text" }, "compId": 39 }, { "type": "Button", "props": { "y": 132, "x": 117, "width": 140, "var": "clearBtn", "stateNum": 1, "skin": "sence/btn_lv.png", "sizeGrid": "0,20,0,18", "labelSize": 30, "label": "清档", "height": 61, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 40 }] }], "loadList": ["sence/kuangBG.png", "sence/chuangkoubai.png", "sence/btn_hong.png", "setdialog/yinxiaoguan.png", "sence/btn_guanbi.png", "sence/btn_lv.png", "setdialog/tuichuzhandou.png", "setdialog/shengyinkai.png", "sence/biaotifu.png", "setdialog/biaoti_shezhi.png"], "loadList3D": [] };
            return SettingDialogUI;
        }(Laya.Dialog));
        scene.SettingDialogUI = SettingDialogUI;
        REG("ui.scene.SettingDialogUI", SettingDialogUI);
        var shengliUI = /** @class */ (function (_super) {
            __extends(shengliUI, _super);
            function shengliUI() {
                return _super.call(this) || this;
            }
            shengliUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(shengliUI.uiView);
            };
            shengliUI.uiView = { "type": "Dialog", "props": { "width": 750, "isModal": true, "height": 1334 }, "compId": 2, "child": [{ "type": "LightView", "props": { "y": 370, "x": 375, "var": "light", "anchorY": 0.5, "anchorX": 0.5, "runtime": "ui.scene.LightViewUI" }, "compId": 33 }, { "type": "Image", "props": { "y": 322.5, "x": 371, "skin": "shengli/qi.png", "scaleY": 0, "anchorX": 0.5 }, "compId": 9 }, { "type": "Image", "props": { "y": 370, "x": 430, "visible": false, "skin": "shengli/haojiao.png", "scaleX": 1, "anchorY": 0.5, "anchorX": 0 }, "compId": 5 }, { "type": "Image", "props": { "y": 370, "x": 303, "visible": false, "skin": "shengli/haojiao.png", "scaleX": -1, "anchorY": 0.5, "anchorX": 0 }, "compId": 6 }, { "type": "Image", "props": { "y": 398, "x": 375, "visible": true, "skin": "shengli/shenglibu.png", "scaleY": 1, "scaleX": 0, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 4 }, { "type": "Image", "props": { "y": 383, "x": 371, "visible": false, "skin": "shengli/dunpai.png", "scaleY": 1, "scaleX": 1, "anchorY": 0.5, "anchorX": 0.5, "alpha": 1 }, "compId": 7 }, { "type": "Image", "props": { "y": 370, "x": 375, "visible": false, "skin": "shengli/chengli.png", "scaleY": 1, "scaleX": 1, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 8 }, { "type": "Button", "props": { "y": 688, "x": 385, "width": 361, "var": "btn1", "stateNum": 1, "skin": "sence/btn_lv.png", "sizeGrid": "24,20,21,17", "height": 106, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 13, "child": [{ "type": "Sprite", "props": { "y": 31.5, "x": 35, "texture": "sence/shenglilingqu.png" }, "compId": 21 }, { "type": "Sprite", "props": { "y": 19, "x": 252, "width": 86, "texture": "sence/jinbidai.png", "height": 70 }, "compId": 24 }, { "type": "FontClip", "props": { "y": 34, "x": 136.5, "value": "1000", "spaceX": -4, "skin": "sence/clip_shuzi.png", "sheet": "01234 56789", "scaleY": 1.6, "scaleX": 1.6 }, "compId": 25 }] }, { "type": "Button", "props": { "y": 841, "x": 384, "width": 355, "var": "btn2", "stateNum": 1, "skin": "sence/btn_zi.png", "sizeGrid": "24,17,23,20", "height": 106, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 14, "child": [{ "type": "Sprite", "props": { "y": 18, "x": 42, "texture": "sence/action.png" }, "compId": 17 }, { "type": "chengshi", "props": { "y": -61, "x": 254, "var": "ten", "runtime": "ui.scene.chengshiUI" }, "compId": 30 }, { "type": "Image", "props": { "y": 27.5, "x": 115, "skin": "sence/shibeiling.png" }, "compId": 31 }] }, { "type": "Button", "props": { "y": 996, "x": 385, "width": 355, "var": "btn3", "stateNum": 1, "skin": "sence/btn_lv.png", "sizeGrid": "24,17,23,20", "height": 106, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 15, "child": [{ "type": "Sprite", "props": { "y": 29, "x": 138, "texture": "sence/fenxiangyouli.png" }, "compId": 20 }, { "type": "Sprite", "props": { "y": 15, "x": 44, "texture": "resselectstage/xiaoguan.png", "scaleY": 0.8, "scaleX": 0.8 }, "compId": 35 }] }, { "type": "Box", "props": { "y": 318, "x": 272, "var": "libox" }, "compId": 29 }, { "type": "Button", "props": { "y": 1151, "x": 384, "width": 355, "var": "btn4", "stateNum": 1, "skin": "sence/btn_zi.png", "sizeGrid": "24,17,23,20", "height": 106, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 47, "child": [{ "type": "Label", "props": { "y": 31, "x": 9, "width": 340, "valign": "middle", "text": "分享录屏", "strokeColor": "#080707", "stroke": 4, "height": 45, "fontSize": 42, "font": "SimHei", "color": "#fbf6f6", "bold": true, "align": "center" }, "compId": 54 }, { "type": "chengshi", "props": { "y": -61, "x": 254, "runtime": "ui.scene.chengshiUI" }, "compId": 55 }] }], "animations": [{ "nodes": [{ "target": 4, "keyframes": { "visible": [{ "value": true, "tweenMethod": "linearNone", "tween": false, "target": 4, "key": "visible", "index": 0 }], "skin": [{ "value": "shengli/shenglibu.png", "tweenMethod": "linearNone", "tween": false, "target": 4, "key": "skin", "index": 0 }], "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleY", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleY", "index": 3 }], "scaleX": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleX", "index": 0 }, { "value": 1.2, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleX", "index": 3 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleX", "index": 5 }] } }, { "target": 6, "keyframes": { "visible": [{ "value": false, "tweenMethod": "linearNone", "tween": false, "target": 6, "key": "visible", "index": 0 }, { "value": true, "tweenMethod": "linearNone", "tween": false, "target": 6, "key": "visible", "index": 4 }], "skin": [{ "value": "shengli/haojiao.png", "tweenMethod": "linearNone", "tween": false, "target": 6, "key": "skin", "index": 0 }], "scaleX": [{ "value": -1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 4 }, { "value": -1.1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 6 }, { "value": -1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 7 }] } }, { "target": 5, "keyframes": { "visible": [{ "value": false, "tweenMethod": "linearNone", "tween": false, "target": 5, "key": "visible", "index": 0 }, { "value": true, "tweenMethod": "linearNone", "tween": false, "target": 5, "key": "visible", "index": 6 }], "skin": [{ "value": "shengli/haojiao.png", "tweenMethod": "linearNone", "tween": false, "target": 5, "key": "skin", "index": 0 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "scaleX", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "scaleX", "index": 6 }, { "value": 1.2, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "scaleX", "index": 8 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 5, "key": "scaleX", "index": 9 }] } }, { "target": 7, "keyframes": { "visible": [{ "value": false, "tweenMethod": "linearNone", "tween": false, "target": 7, "key": "visible", "index": 0 }, { "value": true, "tweenMethod": "linearNone", "tween": false, "target": 7, "key": "visible", "index": 8 }], "skin": [{ "value": "shengli/dunpai.png", "tweenMethod": "linearNone", "tween": false, "target": 7, "key": "skin", "index": 0 }], "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "scaleY", "index": 0 }, { "value": 5, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "scaleY", "index": 8 }, { "value": 0.8, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "scaleY", "index": 12 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "scaleY", "index": 14 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "scaleX", "index": 0 }, { "value": 5, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "scaleX", "index": 8 }, { "value": 0.8, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "scaleX", "index": 12 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "scaleX", "index": 14 }], "alpha": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "alpha", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "alpha", "index": 8 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 7, "key": "alpha", "index": 12 }] } }, { "target": 8, "keyframes": { "visible": [{ "value": false, "tweenMethod": "linearNone", "tween": false, "target": 8, "key": "visible", "index": 0 }, { "value": true, "tweenMethod": "linearNone", "tween": false, "target": 8, "key": "visible", "index": 10 }], "skin": [{ "value": "shengli/chengli.png", "tweenMethod": "linearNone", "tween": false, "target": 8, "key": "skin", "index": 0 }], "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "scaleY", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "scaleY", "index": 10 }, { "value": 1.3, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "scaleY", "index": 15 }, { "value": 0.8, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "scaleY", "index": 18 }, { "value": 0.9, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "scaleY", "index": 20 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "scaleY", "index": 22 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "scaleX", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "scaleX", "index": 10 }, { "value": 1.3, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "scaleX", "index": 15 }, { "value": 0.8, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "scaleX", "index": 18 }, { "value": 0.9, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "scaleX", "index": 20 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 8, "key": "scaleX", "index": 22 }] } }, { "target": 9, "keyframes": { "skin": [{ "value": "shengli/qi.png", "tweenMethod": "linearNone", "tween": false, "target": 9, "key": "skin", "index": 0 }], "scaleY": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 9, "key": "scaleY", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 9, "key": "scaleY", "index": 7 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 9, "key": "scaleY", "index": 12 }] } }], "name": "ani1", "id": 1, "frameRate": 60, "action": 0 }], "loadList": ["shengli/qi.png", "shengli/haojiao.png", "shengli/shenglibu.png", "shengli/dunpai.png", "shengli/chengli.png", "sence/btn_lv.png", "sence/shenglilingqu.png", "sence/jinbidai.png", "sence/clip_shuzi.png", "sence/btn_zi.png", "sence/action.png", "sence/shibeiling.png", "sence/fenxiangyouli.png", "resselectstage/xiaoguan.png"], "loadList3D": [] };
            return shengliUI;
        }(Laya.Dialog));
        scene.shengliUI = shengliUI;
        REG("ui.scene.shengliUI", shengliUI);
        var Stage1ViewUI = /** @class */ (function (_super) {
            __extends(Stage1ViewUI, _super);
            function Stage1ViewUI() {
                return _super.call(this) || this;
            }
            Stage1ViewUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(Stage1ViewUI.uiView);
            };
            Stage1ViewUI.uiView = { "type": "View", "props": { "width": 2250, "height": 1456 }, "compId": 2, "child": [{ "type": "Sprite", "props": { "y": 0, "x": 0, "texture": "battlescene/bg0.jpg" }, "compId": 3 }, { "type": "Sprite", "props": { "y": 0, "x": 750, "texture": "battlescene/bg0.jpg" }, "compId": 4 }, { "type": "Sprite", "props": { "y": 0, "x": 1500, "texture": "battlescene/bg0.jpg" }, "compId": 5 }, { "type": "Sprite", "props": { "y": 0, "x": 71, "texture": "battlescene/shu1.png" }, "compId": 6 }, { "type": "Sprite", "props": { "y": 0, "x": 1264, "texture": "battlescene/shu2.png" }, "compId": 7 }], "loadList": ["battlescene/bg0.jpg", "battlescene/shu1.png", "battlescene/shu2.png"], "loadList3D": [] };
            return Stage1ViewUI;
        }(Laya.View));
        scene.Stage1ViewUI = Stage1ViewUI;
        REG("ui.scene.Stage1ViewUI", Stage1ViewUI);
        var Stage2ViewUI = /** @class */ (function (_super) {
            __extends(Stage2ViewUI, _super);
            function Stage2ViewUI() {
                return _super.call(this) || this;
            }
            Stage2ViewUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(Stage2ViewUI.uiView);
            };
            Stage2ViewUI.uiView = { "type": "View", "props": { "width": 2250, "height": 1456 }, "compId": 2, "child": [{ "type": "Sprite", "props": { "y": 0, "x": 0, "texture": "battlescene/bg1.jpg" }, "compId": 3 }, { "type": "Sprite", "props": { "y": 0, "x": 750, "texture": "battlescene/bg1.jpg" }, "compId": 4 }, { "type": "Sprite", "props": { "y": 0, "x": 1500, "texture": "battlescene/bg1.jpg" }, "compId": 5 }], "loadList": ["battlescene/bg1.jpg"], "loadList3D": [] };
            return Stage2ViewUI;
        }(Laya.View));
        scene.Stage2ViewUI = Stage2ViewUI;
        REG("ui.scene.Stage2ViewUI", Stage2ViewUI);
        var Stage3AniUI = /** @class */ (function (_super) {
            __extends(Stage3AniUI, _super);
            function Stage3AniUI() {
                return _super.call(this) || this;
            }
            Stage3AniUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(Stage3AniUI.uiView);
            };
            Stage3AniUI.uiView = { "type": "View", "props": { "width": 197, "height": 232 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 95, "x": 94.5, "skin": "mainscene/dunpai.png", "blendMode": "lighter", "anchorY": 0.5, "anchorX": 0.65 }, "compId": 3 }], "animations": [{ "nodes": [{ "target": 3, "keyframes": { "y": [{ "value": 95, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 0 }], "x": [{ "value": 94.5, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "x", "index": 0 }], "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 0 }, { "value": 2, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 15 }, { "value": 2, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "scaleY", "index": 35 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 0 }, { "value": 2, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleX", "index": 15 }, { "value": 2, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "scaleX", "index": 35 }], "alpha": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "alpha", "index": 0 }, { "value": 0.9, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "alpha", "index": 5 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "alpha", "index": 15 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "alpha", "index": 35 }] } }, { "target": 2, "keyframes": { "width": [{ "value": 750, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "width", "index": 0 }, { "value": 197, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "width", "index": 35 }], "height": [{ "value": 500, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "height", "index": 0 }, { "value": 232, "tweenMethod": "linearNone", "tween": true, "target": 2, "key": "height", "index": 35 }] } }], "name": "ani1", "id": 1, "frameRate": 24, "action": 0 }], "loadList": ["mainscene/dunpai.png"], "loadList3D": [] };
            return Stage3AniUI;
        }(Laya.View));
        scene.Stage3AniUI = Stage3AniUI;
        REG("ui.scene.Stage3AniUI", Stage3AniUI);
        var Stage3ViewUI = /** @class */ (function (_super) {
            __extends(Stage3ViewUI, _super);
            function Stage3ViewUI() {
                return _super.call(this) || this;
            }
            Stage3ViewUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(Stage3ViewUI.uiView);
            };
            Stage3ViewUI.uiView = { "type": "View", "props": { "width": 2250, "height": 1456 }, "compId": 2, "child": [{ "type": "Sprite", "props": { "y": 0, "x": 0, "texture": "battlescene/bg2.jpg" }, "compId": 3 }, { "type": "Sprite", "props": { "y": 0, "x": 750, "texture": "battlescene/bg2.jpg" }, "compId": 6 }, { "type": "Sprite", "props": { "y": 0, "x": 1500, "texture": "battlescene/bg2.jpg" }, "compId": 7 }, { "type": "Sprite", "props": { "y": 60, "x": 1230, "texture": "battlescene/chuan2.png" }, "compId": 5 }, { "type": "Sprite", "props": { "y": 60, "x": 297, "texture": "battlescene/chuan1.png" }, "compId": 4 }], "loadList": ["battlescene/bg2.jpg", "battlescene/chuan2.png", "battlescene/chuan1.png"], "loadList3D": [] };
            return Stage3ViewUI;
        }(Laya.View));
        scene.Stage3ViewUI = Stage3ViewUI;
        REG("ui.scene.Stage3ViewUI", Stage3ViewUI);
        var StageViewUI = /** @class */ (function (_super) {
            __extends(StageViewUI, _super);
            function StageViewUI() {
                return _super.call(this) || this;
            }
            StageViewUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(StageViewUI.uiView);
            };
            StageViewUI.uiView = { "type": "View", "props": { "width": 150, "height": 150 }, "compId": 2, "child": [{ "type": "Image", "props": { "var": "img1", "skin": "resselectstage/xiaoguan.png", "centerX": 0, "bottom": 0 }, "compId": 3 }, { "type": "Text", "props": { "y": 96, "x": 0, "width": 150, "var": "t1", "valign": "middle", "text": "99", "height": 42, "fontSize": 18, "color": "#ff0000", "bold": true, "align": "center", "runtime": "laya.display.Text" }, "compId": 6 }, { "type": "sanjiao", "props": { "y": 20, "x": 74, "visible": false, "var": "red", "runtime": "ui.scene.sanjiaoUI" }, "compId": 10 }], "loadList": ["resselectstage/xiaoguan.png"], "loadList3D": [] };
            return StageViewUI;
        }(Laya.View));
        scene.StageViewUI = StageViewUI;
        REG("ui.scene.StageViewUI", StageViewUI);
        var TaskCellUI = /** @class */ (function (_super) {
            __extends(TaskCellUI, _super);
            function TaskCellUI() {
                return _super.call(this) || this;
            }
            TaskCellUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(TaskCellUI.uiView);
            };
            TaskCellUI.uiView = { "type": "View", "props": { "width": 560, "height": 87 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 560, "skin": "renwu/dikuang.png", "sizeGrid": "22,27,25,33" }, "compId": 3 }, { "type": "Text", "props": { "y": 7, "x": 19, "wordWrap": true, "width": 404, "var": "t1", "valign": "middle", "text": "获得任意10件装备", "height": 74, "fontSize": 34, "color": "#482910", "bold": true, "align": "left", "runtime": "laya.display.Text" }, "compId": 4 }, { "type": "Button", "props": { "y": 5, "x": 452, "width": 82, "var": "btn", "stateNum": 1, "skin": "sence/jinbidai.png", "height": 67 }, "compId": 5, "child": [{ "type": "Image", "props": { "y": 33, "x": 42, "var": "lingqu", "skin": "renwu/lingquzi.png", "mouseEnabled": false, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 13 }] }, { "type": "Image", "props": { "y": 60, "x": 441, "var": "wai", "skin": "renwu/jindudi.png", "sizeGrid": "6,9,6,9", "scaleY": 1, "scaleX": 2 }, "compId": 8, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "var": "nei", "skin": "renwu/jindushang.png", "sizeGrid": "6,15,6,15" }, "compId": 9 }] }, { "type": "FontClip", "props": { "y": 56, "x": 441, "width": 44, "var": "fc1", "value": "1", "spaceX": -3, "skin": "sence/clip_shuzi.png", "sheet": "01234 56789", "height": 24, "align": "right" }, "compId": 10 }, { "type": "FontClip", "props": { "y": 56, "x": 503, "width": 44, "var": "fc2", "value": "5", "spaceX": -3, "skin": "sence/clip_shuzi.png", "sheet": "01234 56789", "height": 24, "align": "left" }, "compId": 11 }, { "type": "Sprite", "props": { "y": 54, "x": 485, "texture": "sence/xiexian.png" }, "compId": 12 }], "animations": [{ "nodes": [{ "target": 13, "keyframes": { "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 13, "key": "scaleY", "index": 0 }, { "value": 1.2, "tweenMethod": "linearNone", "tween": true, "target": 13, "key": "scaleY", "index": 6 }, { "value": 0.9, "tweenMethod": "linearNone", "tween": true, "target": 13, "key": "scaleY", "index": 9 }, { "value": 1.1, "tweenMethod": "linearNone", "tween": true, "target": 13, "key": "scaleY", "index": 12 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 13, "key": "scaleY", "index": 14 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 13, "label": null, "key": "scaleY", "index": 40 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 13, "key": "scaleX", "index": 0 }, { "value": 1.2, "tweenMethod": "linearNone", "tween": true, "target": 13, "key": "scaleX", "index": 6 }, { "value": 0.9, "tweenMethod": "linearNone", "tween": true, "target": 13, "key": "scaleX", "index": 9 }, { "value": 1.1, "tweenMethod": "linearNone", "tween": true, "target": 13, "key": "scaleX", "index": 12 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 13, "key": "scaleX", "index": 14 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 13, "label": null, "key": "scaleX", "index": 40 }] } }], "name": "ani1", "id": 1, "frameRate": 24, "action": 0 }], "loadList": ["renwu/dikuang.png", "sence/jinbidai.png", "renwu/lingquzi.png", "renwu/jindudi.png", "renwu/jindushang.png", "sence/clip_shuzi.png", "sence/xiexian.png"], "loadList3D": [] };
            return TaskCellUI;
        }(Laya.View));
        scene.TaskCellUI = TaskCellUI;
        REG("ui.scene.TaskCellUI", TaskCellUI);
        var TaskDialogUI = /** @class */ (function (_super) {
            __extends(TaskDialogUI, _super);
            function TaskDialogUI() {
                return _super.call(this) || this;
            }
            TaskDialogUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(TaskDialogUI.uiView);
            };
            TaskDialogUI.uiView = { "type": "Dialog", "props": { "width": 677, "isModal": true, "height": 1200 }, "compId": 2, "child": [{ "type": "Box", "props": { "y": 16, "x": 52, "scaleY": 0.85, "scaleX": 0.85 }, "compId": 81, "child": [{ "type": "Image", "props": { "width": 677, "skin": "sence/kuangBG.png", "sizeGrid": "81,70,76,69", "height": 1145 }, "compId": 3, "child": [{ "type": "Image", "props": { "y": 60, "width": 643, "skin": "sence/chuangkoubai.png", "sizeGrid": "20,23,19,22", "height": 997, "centerX": 1 }, "compId": 4 }, { "type": "Image", "props": { "y": -28, "x": -36.5, "width": 725, "skin": "sence/paihangbangdi.png", "sizeGrid": "0,171,0,178", "height": 117 }, "compId": 59, "child": [{ "type": "Sprite", "props": { "y": 0, "x": 322, "texture": "renwu/biaoti_renwu.png" }, "compId": 62 }] }, { "type": "Button", "props": { "y": 1060, "x": 36, "width": 80, "stateNum": 1, "skin": "sence/btn_guanbi.png", "name": "close", "height": 80 }, "compId": 60 }] }, { "type": "Tab", "props": { "y": 541, "x": 50, "var": "tab", "stateNum": 2, "skin": "sence/tab_huang.png", "selectedIndex": 0, "labels": "," }, "compId": 67 }, { "type": "Sprite", "props": { "y": 547, "x": 80, "texture": "renwu/quanbuzi.png", "mouseEnabled": false }, "compId": 68 }, { "type": "Sprite", "props": { "y": 549, "x": 193, "texture": "renwu/yiwancheng.png", "mouseEnabled": false }, "compId": 69 }, { "type": "Image", "props": { "y": 588, "x": 46, "width": 589, "skin": "sence/paihangbanBG.png", "sizeGrid": "20,27,23,24", "height": 447 }, "compId": 70 }, { "type": "Image", "props": { "y": 149, "x": 45, "width": 589, "skin": "sence/paihangbanBG.png", "sizeGrid": "20,27,23,24", "height": 289 }, "compId": 71 }, { "type": "List", "props": { "y": 597, "x": 60, "width": 560, "var": "list2", "spaceY": 5, "height": 435 }, "compId": 73, "child": [{ "type": "TaskCell", "props": { "y": 0, "x": 0, "renderType": "render", "runtime": "ui.scene.TaskCellUI" }, "compId": 74 }] }, { "type": "List", "props": { "y": 158, "x": 61, "width": 560, "var": "list1", "spaceY": 5, "height": 273 }, "compId": 75, "child": [{ "type": "TaskCell", "props": { "y": 0, "x": 0, "renderType": "render", "runtime": "ui.scene.TaskCellUI" }, "compId": 76 }] }, { "type": "Sprite", "props": { "y": 445, "x": 142, "texture": "sence/biaotifu.png" }, "compId": 77, "child": [{ "type": "Sprite", "props": { "y": 11.75, "x": 156.25, "texture": "renwu/chengjiu.png" }, "compId": 78 }] }, { "type": "Sprite", "props": { "y": 61, "x": 142, "texture": "sence/biaotifu.png" }, "compId": 79, "child": [{ "type": "Sprite", "props": { "y": 9, "x": 129.5, "texture": "renwu/renwuzi.png" }, "compId": 80 }] }] }], "loadList": ["sence/kuangBG.png", "sence/chuangkoubai.png", "sence/paihangbangdi.png", "renwu/biaoti_renwu.png", "sence/btn_guanbi.png", "sence/tab_huang.png", "renwu/quanbuzi.png", "renwu/yiwancheng.png", "sence/paihangbanBG.png", "sence/biaotifu.png", "renwu/chengjiu.png", "renwu/renwuzi.png"], "loadList3D": [] };
            return TaskDialogUI;
        }(Laya.Dialog));
        scene.TaskDialogUI = TaskDialogUI;
        REG("ui.scene.TaskDialogUI", TaskDialogUI);
        var TaskRewardUI = /** @class */ (function (_super) {
            __extends(TaskRewardUI, _super);
            function TaskRewardUI() {
                return _super.call(this) || this;
            }
            TaskRewardUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(TaskRewardUI.uiView);
            };
            TaskRewardUI.uiView = { "type": "Dialog", "props": { "width": 750, "height": 1200 }, "compId": 2, "child": [{ "type": "Box", "props": { "y": -186, "x": -239, "width": 1503, "scaleY": 0.85, "scaleX": 0.85, "height": 1723 }, "compId": 3, "child": [{ "type": "LightView", "props": { "y": 742, "x": 742, "var": "light", "scaleY": 2, "scaleX": 2, "anchorY": 0.5, "anchorX": 0.5, "runtime": "ui.scene.LightViewUI" }, "compId": 4 }, { "type": "Image", "props": { "y": 359, "x": 394, "width": 682, "skin": "sence/kuangBG.png", "sizeGrid": "81,70,76,69", "height": 931 }, "compId": 5 }, { "type": "Image", "props": { "y": 433, "x": 414.5, "width": 643, "skin": "sence/chuangkoubai.png", "sizeGrid": "20,23,19,22", "height": 747 }, "compId": 6 }, { "type": "Image", "props": { "y": 579.5, "x": 552, "skin": "sence/jinbidai.png" }, "compId": 7 }, { "type": "Image", "props": { "y": 774, "x": 414, "width": 642, "skin": "sence/baoxiangBG.png", "sizeGrid": "28,18,26,20", "height": 406, "alpha": 0.3 }, "compId": 8 }, { "type": "FontClip", "props": { "y": 622, "x": 723, "var": "goldFc", "value": "99999", "spaceX": -4, "skin": "sence/clip_shuzi.png", "sheet": "01234 56789", "scaleY": 2.3, "scaleX": 2.3 }, "compId": 9 }, { "type": "Button", "props": { "y": 908, "x": 737, "width": 434, "var": "LingBtn", "stateNum": 1, "skin": "sence/btn_huang.png", "sizeGrid": "18,19,20,18", "height": 94, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 10, "child": [{ "type": "Sprite", "props": { "y": -21.5, "x": 35, "texture": "sence/shenglilingqu.png" }, "compId": 11 }, { "type": "FontClip", "props": { "y": 20, "x": 127, "width": 103, "var": "btn1Fc", "value": "99999", "spaceX": -4, "skin": "sence/clip_shuzi.png", "sheet": "01234 56789", "scaleY": 2.3, "scaleX": 2.3, "height": 24, "align": "center" }, "compId": 12 }] }, { "type": "Button", "props": { "y": 1057, "x": 739, "width": 439, "var": "AdLingBtn", "stateNum": 1, "skin": "sence/btn_zi.png", "sizeGrid": "18,19,20,18", "height": 94, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 13, "child": [{ "type": "FontClip", "props": { "y": 20, "x": 125, "width": 104, "var": "btn2Fc", "value": "99999", "spaceX": -4, "skin": "sence/clip_shuzi.png", "sheet": "01234 56789", "scaleY": 2.3, "scaleX": 2.3, "height": 39, "align": "center" }, "compId": 14 }, { "type": "Sprite", "props": { "y": 14, "x": 54, "texture": "sence/action.png" }, "compId": 15 }] }, { "type": "chengsan", "props": { "y": 942, "x": 855, "var": "effectView", "runtime": "ui.scene.chengsanUI" }, "compId": 16 }, { "type": "Button", "props": { "y": 1191, "x": 437, "width": 80, "stateNum": 1, "skin": "sence/btn_guanbi.png", "name": "close", "height": 80 }, "compId": 17 }, { "type": "Text", "props": { "y": 501, "x": 653.625, "text": "任务奖励", "fontSize": 48, "color": "#48280f", "bold": true, "runtime": "laya.display.Text" }, "compId": 18 }, { "type": "Image", "props": { "y": 350, "width": 761, "skin": "sence/paihangbangdi.png", "sizeGrid": "0,169,0,178", "height": 117, "centerX": -10 }, "compId": 19, "child": [{ "type": "Sprite", "props": { "y": 0, "x": 338, "texture": "renwu/biaoti_renwu.png" }, "compId": 21 }] }] }], "loadList": ["sence/kuangBG.png", "sence/chuangkoubai.png", "sence/jinbidai.png", "sence/baoxiangBG.png", "sence/clip_shuzi.png", "sence/btn_huang.png", "sence/shenglilingqu.png", "sence/btn_zi.png", "sence/action.png", "sence/btn_guanbi.png", "sence/paihangbangdi.png", "renwu/biaoti_renwu.png"], "loadList3D": [] };
            return TaskRewardUI;
        }(Laya.Dialog));
        scene.TaskRewardUI = TaskRewardUI;
        REG("ui.scene.TaskRewardUI", TaskRewardUI);
        var TestLoginUI = /** @class */ (function (_super) {
            __extends(TestLoginUI, _super);
            function TestLoginUI() {
                return _super.call(this) || this;
            }
            TestLoginUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(TestLoginUI.uiView);
            };
            TestLoginUI.uiView = { "type": "View", "props": { "width": 750, "height": 1334 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 756, "skin": "sence/kuangBG.png", "sizeGrid": "103,76,108,79", "height": 1339 }, "compId": 9 }, { "type": "TextInput", "props": { "y": 395, "x": 195.5, "width": 359, "var": "input", "skin": "sence/qiandi.png", "sizeGrid": "10,34,12,32", "prompt": "这里输入用户id", "height": 132, "fontSize": 40, "color": "#ffffff", "borderColor": "#ff0400" }, "compId": 3 }, { "type": "Button", "props": { "y": 609, "x": 222, "width": 306, "var": "btn", "stateNum": 1, "skin": "sence/btn_lv.png", "sizeGrid": "26,22,28,20", "labelSize": 80, "labelColors": "#ffffff", "label": "登陆", "height": 148 }, "compId": 4 }, { "type": "Button", "props": { "y": 0, "x": 165, "stateNum": 1, "skin": "sence/biaotifu.png", "labelSize": 36, "labelColors": "#ffffff", "label": "登陆" }, "compId": 10 }], "animations": [{ "nodes": [{ "target": 4, "keyframes": { "y": [{ "value": 567, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "y", "index": 0 }, { "value": 617, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "y", "index": 3 }] } }], "name": "ani1", "id": 1, "frameRate": 24, "action": 0 }], "loadList": ["sence/kuangBG.png", "sence/qiandi.png", "sence/btn_lv.png", "sence/biaotifu.png"], "loadList3D": [] };
            return TestLoginUI;
        }(Laya.View));
        scene.TestLoginUI = TestLoginUI;
        REG("ui.scene.TestLoginUI", TestLoginUI);
        var TianFuCellUI = /** @class */ (function (_super) {
            __extends(TianFuCellUI, _super);
            function TianFuCellUI() {
                return _super.call(this) || this;
            }
            TianFuCellUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(TianFuCellUI.uiView);
            };
            TianFuCellUI.uiView = { "type": "View", "props": { "width": 175, "height": 212 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 13, "x": 12, "var": "bg1", "skin": "tianfu/PTkuang.png" }, "compId": 3 }, { "type": "Sprite", "props": { "y": 28.5, "x": 29, "var": "box2", "texture": "tianfu/touwen.png" }, "compId": 10 }, { "type": "Image", "props": { "y": 0, "x": 0, "width": 175, "var": "select", "skin": "sence/xuanzhong1.png", "sizeGrid": "50,50,38,47", "height": 212, "blendMode": "lighter" }, "compId": 13 }, { "type": "Box", "props": { "y": 28.5, "x": 29, "width": 117, "var": "box1", "height": 161 }, "compId": 14, "child": [{ "type": "Image", "props": { "var": "logo1", "skin": "tianfu/gongji.png" }, "compId": 9 }, { "type": "Image", "props": { "y": 123, "var": "txtImg", "skin": "tianfu/gongzi.png", "centerX": 0 }, "compId": 11 }, { "type": "FontClip", "props": { "y": 89, "x": 57, "width": 52, "var": "lv", "value": "9", "spaceX": -3, "skin": "sence/clip_shuzi.png", "sheet": "01234 56789", "height": 23, "align": "right" }, "compId": 12 }] }], "loadList": ["tianfu/PTkuang.png", "tianfu/touwen.png", "sence/xuanzhong1.png", "tianfu/gongji.png", "tianfu/gongzi.png", "sence/clip_shuzi.png"], "loadList3D": [] };
            return TianFuCellUI;
        }(Laya.View));
        scene.TianFuCellUI = TianFuCellUI;
        REG("ui.scene.TianFuCellUI", TianFuCellUI);
        var TianFuDialogUI = /** @class */ (function (_super) {
            __extends(TianFuDialogUI, _super);
            function TianFuDialogUI() {
                return _super.call(this) || this;
            }
            TianFuDialogUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(TianFuDialogUI.uiView);
            };
            TianFuDialogUI.uiView = { "type": "Dialog", "props": { "width": 677, "isModal": true, "height": 1200 }, "compId": 2, "child": [{ "type": "Box", "props": { "y": 0, "x": 52, "var": "box", "scaleY": 0.85, "scaleX": 0.85 }, "compId": 108, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 677, "skin": "sence/kuangBG.png", "sizeGrid": "81,70,76,69", "height": 1185 }, "compId": 7 }, { "type": "Image", "props": { "y": 122, "x": 18, "width": 643, "skin": "sence/chuangkoubai.png", "sizeGrid": "20,23,19,22", "height": 965 }, "compId": 113 }, { "type": "Button", "props": { "y": 1092, "x": 40, "width": 80, "stateNum": 1, "skin": "sence/btn_guanbi.png", "name": "close", "height": 80 }, "compId": 114 }, { "type": "Sprite", "props": { "y": 4, "x": 149, "texture": "sence/biaotifu.png" }, "compId": 115, "child": [{ "type": "Sprite", "props": { "y": 11, "x": 159, "texture": "tianfu/biaoti_tianfu.png" }, "compId": 130 }] }, { "type": "Sprite", "props": { "y": 270, "x": 18, "texture": "tianfu/bgg.jpg" }, "compId": 116 }, { "type": "Button", "props": { "y": 955, "x": 199, "width": 300, "var": "btn", "stateNum": 1, "skin": "sence/btn_lv.png", "sizeGrid": "0,20,0,18", "height": 80 }, "compId": 117, "child": [{ "type": "Sprite", "props": { "y": 22, "x": 193, "texture": "sence/jinbi.png", "scaleY": 0.6, "scaleX": 0.6 }, "compId": 131 }, { "type": "FontClip", "props": { "y": 22.5, "x": 39, "width": 111, "var": "fc", "value": "12000", "spaceX": -3, "skin": "sence/clip_shuzi.png", "sheet": "01234 56789", "scaleY": 1.3, "scaleX": 1.3, "height": 30, "align": "right" }, "compId": 132 }] }, { "type": "Text", "props": { "y": 126, "x": 101, "width": 470, "valign": "middle", "text": "天赋可以永久提升角色战斗力!", "height": 46, "fontSize": 26, "color": "#482910", "bold": true, "align": "center", "runtime": "laya.display.Text" }, "compId": 127 }, { "type": "Text", "props": { "y": 882, "x": 114, "width": 470, "var": "lv", "valign": "middle", "text": "已升级12次", "height": 46, "fontSize": 26, "color": "#482910", "bold": true, "align": "center", "runtime": "laya.display.Text" }, "compId": 128 }, { "type": "List", "props": { "y": 187, "x": 56.5, "width": 568, "var": "list", "spaceY": 20, "spaceX": 20, "selectEnable": true, "repeatY": 3, "repeatX": 3, "height": 691 }, "compId": 129, "child": [{ "type": "TianFuCell", "props": { "y": 0, "x": 0, "renderType": "render", "runtime": "ui.scene.TianFuCellUI" }, "compId": 178 }] }, { "type": "Box", "props": { "y": 432.5, "x": 766, "var": "tipBox" }, "compId": 191, "child": [{ "type": "Image", "props": { "y": 53, "x": 0, "width": 447, "skin": "tianfu/qipao.png", "sizeGrid": "104,37,22,51", "height": 163 }, "compId": 192 }, { "type": "Sprite", "props": { "y": 0, "x": 173, "texture": "tianfu/qipaojian.png" }, "compId": 193 }, { "type": "Text", "props": { "y": 59, "x": 14, "width": 419, "var": "txt5", "valign": "middle", "text": "增加攻击力", "height": 153, "fontSize": 36, "align": "center", "runtime": "laya.display.Text" }, "compId": 194 }] }] }], "loadList": ["sence/kuangBG.png", "sence/chuangkoubai.png", "sence/btn_guanbi.png", "sence/biaotifu.png", "tianfu/biaoti_tianfu.png", "tianfu/bgg.jpg", "sence/btn_lv.png", "sence/jinbi.png", "sence/clip_shuzi.png", "tianfu/qipao.png", "tianfu/qipaojian.png"], "loadList3D": [] };
            return TianFuDialogUI;
        }(Laya.Dialog));
        scene.TianFuDialogUI = TianFuDialogUI;
        REG("ui.scene.TianFuDialogUI", TianFuDialogUI);
        var TimeGoldUI = /** @class */ (function (_super) {
            __extends(TimeGoldUI, _super);
            function TimeGoldUI() {
                return _super.call(this) || this;
            }
            TimeGoldUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(TimeGoldUI.uiView);
            };
            TimeGoldUI.uiView = { "type": "Dialog", "props": { "width": 750, "isModal": true, "height": 1200 }, "compId": 2, "child": [{ "type": "Box", "props": { "y": -196, "x": -249, "scaleY": 0.85, "scaleX": 0.85 }, "compId": 24, "child": [{ "type": "LightView", "props": { "y": 742, "x": 742, "var": "light", "scaleY": 2, "scaleX": 2, "anchorY": 0.5, "anchorX": 0.5, "runtime": "ui.scene.LightViewUI" }, "compId": 23 }, { "type": "Image", "props": { "y": 359, "x": 394, "width": 682, "skin": "sence/kuangBG.png", "sizeGrid": "81,70,76,69", "height": 931 }, "compId": 3 }, { "type": "Image", "props": { "y": 433, "x": 414.5, "width": 643, "skin": "sence/chuangkoubai.png", "sizeGrid": "20,23,19,22", "height": 747 }, "compId": 5 }, { "type": "Image", "props": { "y": 568, "x": 552, "skin": "sence/jinbidai.png" }, "compId": 7 }, { "type": "Image", "props": { "y": 774, "x": 414, "width": 642, "skin": "sence/baoxiangBG.png", "sizeGrid": "28,18,26,20", "height": 406, "alpha": 0.3 }, "compId": 9 }, { "type": "FontClip", "props": { "y": 622, "x": 723, "var": "goldFc", "value": "99999", "spaceX": -4, "skin": "sence/clip_shuzi.png", "sheet": "01234 56789", "scaleY": 2.3, "scaleX": 2.3 }, "compId": 10 }, { "type": "Button", "props": { "y": 908, "x": 737, "width": 434, "var": "LingBtn", "stateNum": 1, "skin": "sence/btn_huang.png", "sizeGrid": "18,19,20,18", "height": 94, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 11, "child": [{ "type": "Sprite", "props": { "y": -21.5, "x": 35, "texture": "sence/shenglilingqu.png" }, "compId": 13 }, { "type": "FontClip", "props": { "y": 20, "x": 127, "width": 103, "var": "btn1Fc", "value": "99999", "spaceX": -4, "skin": "sence/clip_shuzi.png", "sheet": "01234 56789", "scaleY": 2.3, "scaleX": 2.3, "height": 24, "align": "center" }, "compId": 14 }] }, { "type": "Button", "props": { "y": 1057, "x": 739, "width": 439, "var": "AdLingBtn", "stateNum": 1, "skin": "sence/btn_zi.png", "sizeGrid": "18,19,20,18", "height": 94, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 15, "child": [{ "type": "FontClip", "props": { "y": 20, "x": 125, "width": 104, "var": "btn2Fc", "value": "99999", "spaceX": -4, "skin": "sence/clip_shuzi.png", "sheet": "01234 56789", "scaleY": 2.3, "scaleX": 2.3, "height": 39, "align": "center" }, "compId": 17 }, { "type": "Sprite", "props": { "y": 14, "x": 54, "texture": "sence/action.png" }, "compId": 18 }] }, { "type": "chengsan", "props": { "y": 942, "x": 855, "var": "effectView", "runtime": "ui.scene.chengsanUI" }, "compId": 19 }, { "type": "Button", "props": { "y": 1191, "x": 437, "width": 80, "stateNum": 1, "skin": "sence/btn_guanbi.png", "name": "close", "height": 80 }, "compId": 21 }, { "type": "Text", "props": { "y": 501, "x": 659, "text": "您赚取了", "fontSize": 36, "color": "#48280f", "bold": true, "runtime": "laya.display.Text" }, "compId": 22 }, { "type": "Image", "props": { "y": 329, "width": 761, "skin": "sence/paihangbangdi.png", "sizeGrid": "0,169,0,178", "height": 117, "centerX": -378 }, "compId": 28, "child": [{ "type": "Image", "props": { "y": 11.5, "x": 250.5, "skin": "sence/biaoti_jinbi.png" }, "compId": 29 }] }] }], "loadList": ["sence/kuangBG.png", "sence/chuangkoubai.png", "sence/jinbidai.png", "sence/baoxiangBG.png", "sence/clip_shuzi.png", "sence/btn_huang.png", "sence/shenglilingqu.png", "sence/btn_zi.png", "sence/action.png", "sence/btn_guanbi.png", "sence/paihangbangdi.png", "sence/biaoti_jinbi.png"], "loadList3D": [] };
            return TimeGoldUI;
        }(Laya.Dialog));
        scene.TimeGoldUI = TimeGoldUI;
        REG("ui.scene.TimeGoldUI", TimeGoldUI);
        var TimeLogoUI = /** @class */ (function (_super) {
            __extends(TimeLogoUI, _super);
            function TimeLogoUI() {
                return _super.call(this) || this;
            }
            TimeLogoUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(TimeLogoUI.uiView);
            };
            TimeLogoUI.uiView = { "type": "View", "props": { "width": 119, "height": 161 }, "compId": 2, "child": [{ "type": "Button", "props": { "y": 0, "x": 0, "width": 119, "var": "goldBtn", "stateNum": 1, "skin": "sence/guanjikuang.png", "sizeGrid": "24,20,27,22", "height": 161 }, "compId": 3, "child": [{ "type": "FontClip", "props": { "y": 127, "x": 5, "width": 113, "var": "goldFc", "value": "10000", "spaceX": -4, "skin": "sence/clip_shuzi.png", "sheet": "01234 56789", "height": 28, "align": "center" }, "compId": 6 }, { "type": "FontClip", "props": { "y": 13, "x": 3, "width": 113, "var": "timeFc", "value": "11 10", "spaceX": -4, "skin": "sence/clip_shuzi.png", "sheet": "01234 56789", "height": 28, "align": "center" }, "compId": 7 }, { "type": "Sprite", "props": { "y": 18, "x": 56, "texture": "sence/maohao.png" }, "compId": 8 }, { "type": "Box", "props": { "width": 119, "var": "shanbox", "top": 0, "right": 0, "left": 0, "height": 161, "bottom": 0, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 12 }, { "type": "Image", "props": { "y": 53, "skin": "sence/heiBG.png", "centerX": 0 }, "compId": 15 }, { "type": "Image", "props": { "y": 54.5, "skin": "sence/jinbi.png", "centerX": 0 }, "compId": 5 }] }], "loadList": ["sence/guanjikuang.png", "sence/clip_shuzi.png", "sence/maohao.png", "sence/heiBG.png", "sence/jinbi.png"], "loadList3D": [] };
            return TimeLogoUI;
        }(Laya.View));
        scene.TimeLogoUI = TimeLogoUI;
        REG("ui.scene.TimeLogoUI", TimeLogoUI);
        var TreasureDialogUI = /** @class */ (function (_super) {
            __extends(TreasureDialogUI, _super);
            function TreasureDialogUI() {
                return _super.call(this) || this;
            }
            TreasureDialogUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(TreasureDialogUI.uiView);
            };
            TreasureDialogUI.uiView = { "type": "Dialog", "props": { "width": 675, "isModal": true, "height": 1200 }, "compId": 2, "child": [{ "type": "Box", "props": { "y": 51, "x": 51, "scaleY": 0.85, "scaleX": 0.85 }, "compId": 57, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 675, "skin": "sence/kuangBG.png", "sizeGrid": "81,70,76,69", "height": 1044 }, "compId": 6, "child": [{ "type": "Image", "props": { "y": 93, "x": 14.5, "width": 646, "skin": "sence/chuangkoubai.png", "sizeGrid": "20,23,19,22", "height": 849 }, "compId": 9, "child": [{ "type": "Image", "props": { "y": 11, "x": 13, "width": 620, "skin": "sence/paihangbanBG.png", "sizeGrid": "17,28,18,25", "height": 824 }, "compId": 11 }] }] }, { "type": "Image", "props": { "y": 0, "x": -34, "width": 742, "skin": "sence/paihangbangdi.png", "sizeGrid": "0,169,0,178", "height": 117 }, "compId": 3, "child": [{ "type": "Image", "props": { "y": 2, "skin": "dabaoxiang/dabaoxiang.png", "centerX": 0 }, "compId": 5 }] }, { "type": "Image", "props": { "y": 117, "x": 62.5, "skin": "dabaoxiang/xiaobao.png" }, "compId": 15 }, { "type": "Image", "props": { "y": 374, "x": 62.5, "skin": "dabaoxiang/zhongbao.png" }, "compId": 16 }, { "type": "Box", "props": { "y": 111, "x": 400.5, "width": 245, "height": 268 }, "compId": 36, "child": [{ "type": "Sprite", "props": { "y": 43, "x": 13.5, "texture": "sence/baoxiangBG.png" }, "compId": 18 }, { "type": "Sprite", "props": { "x": 37.5, "texture": "dabaoxiang/xiaobaobiao.png" }, "compId": 17 }, { "type": "Button", "props": { "y": 207, "x": 119.5, "width": 239, "var": "btn1", "stateNum": 1, "skin": "sence/btn_lv.png", "sizeGrid": "0,20,0,18", "height": 61, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 20, "child": [{ "type": "Sprite", "props": { "y": 0, "x": 40, "texture": "sence/jinbi.png" }, "compId": 23 }, { "type": "FontClip", "props": { "y": 15.5, "x": 119.5, "var": "priceFc", "value": "99998", "spaceX": -5, "skin": "sence/clip_shuzi.png", "sheet": "01234 56789", "align": "left" }, "compId": 24 }] }, { "type": "Text", "props": { "y": 59, "x": 32.5, "wordWrap": true, "width": 174, "var": "t1", "valign": "middle", "text": "随机掉落普通装备", "strokeColor": "#000000", "stroke": 2, "height": 100, "fontSize": 30, "color": "#ffffff", "align": "center", "runtime": "laya.display.Text" }, "compId": 48 }] }, { "type": "Box", "props": { "y": 357, "x": 396.5, "width": 253, "height": 259 }, "compId": 37, "child": [{ "type": "Sprite", "props": { "y": 43, "x": 12.5, "texture": "sence/baoxiangBG.png" }, "compId": 25 }, { "type": "Sprite", "props": { "x": 37.5, "texture": "dabaoxiang/zhongbaobiao.png" }, "compId": 26 }, { "type": "Button", "props": { "y": 207, "x": 119.5, "width": 239, "var": "btn2", "stateNum": 1, "skin": "sence/btn_lv.png", "sizeGrid": "0,20,0,18", "height": 61, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 27, "child": [{ "type": "Sprite", "props": { "y": 0, "x": 40, "texture": "sence/jinbi.png" }, "compId": 28 }, { "type": "FontClip", "props": { "y": 15.5, "x": 119.5, "var": "gold2", "value": "99998", "spaceX": -5, "skin": "sence/clip_shuzi.png", "sheet": "01234 56789", "align": "left" }, "compId": 29 }] }, { "type": "Text", "props": { "y": 61, "x": 30, "wordWrap": true, "width": 174, "var": "t2", "valign": "middle", "text": "随机掉落普通装备", "strokeColor": "#000000", "stroke": 2, "height": 100, "fontSize": 30, "color": "#ffffff", "align": "center", "runtime": "laya.display.Text" }, "compId": 47 }] }, { "type": "Box", "props": { "y": 642, "x": 394.5, "width": 257, "height": 277 }, "compId": 38, "child": [{ "type": "Sprite", "props": { "y": 41, "x": 12.5, "texture": "sence/baoxiangBG.png" }, "compId": 30 }, { "type": "Sprite", "props": { "x": 37.5, "texture": "dabaoxiang/dabaobiao.png" }, "compId": 31 }, { "type": "Button", "props": { "y": 207, "x": 119.5, "width": 239, "var": "adBtn", "stateNum": 1, "skin": "sence/btn_zi.png", "sizeGrid": "20,20,21,18", "height": 78, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 32, "child": [{ "type": "Sprite", "props": { "y": 2, "x": 36, "texture": "sence/action.png" }, "compId": 33 }, { "type": "Sprite", "props": { "y": 20.5, "x": 109, "texture": "sence/mianfeilingqu.png" }, "compId": 35 }] }, { "type": "Text", "props": { "y": 60, "x": 32.5, "wordWrap": true, "width": 174, "var": "t3", "valign": "middle", "text": "随机掉落普通装备", "strokeColor": "#000000", "stroke": 2, "height": 100, "fontSize": 30, "color": "#ffffff", "align": "center", "runtime": "laya.display.Text" }, "compId": 46 }] }, { "type": "Sprite", "props": { "y": 599, "x": 26, "texture": "dabaoxiang/xuxian.png" }, "compId": 39 }, { "type": "Sprite", "props": { "y": 351, "x": 31.5, "texture": "dabaoxiang/xuxian.png" }, "compId": 40 }, { "type": "dabaoxiang", "props": { "y": 579, "x": 0, "var": "adview", "runtime": "ui.scene.dabaoxiangUI" }, "compId": 41 }, { "type": "Button", "props": { "y": 946.5, "x": 47, "width": 80, "var": "closeBtn", "stateNum": 1, "skin": "sence/btn_guanbi.png", "name": "close", "height": 80 }, "compId": 50 }, { "type": "Box", "props": { "y": 873, "x": 87, "var": "timeBox" }, "compId": 54, "child": [{ "type": "Sprite", "props": { "y": 0, "x": 0, "width": 184, "texture": "sence/baoxiangBG.png", "height": 46 }, "compId": 53 }, { "type": "Sprite", "props": { "y": 16, "x": 57, "texture": "sence/maohao.png" }, "compId": 51 }, { "type": "FontClip", "props": { "y": 13, "x": 11, "var": "timeFc", "value": "11 11 11", "skin": "sence/clip_shuzi.png", "sheet": "01234 56789" }, "compId": 52 }, { "type": "Sprite", "props": { "y": 16, "x": 114, "texture": "sence/maohao.png" }, "compId": 55 }] }, { "type": "cheng6", "props": { "y": 619, "x": 146.5, "var": "cheng6", "scaleY": 1.3, "scaleX": 1.3, "runtime": "ui.scene.cheng6UI" }, "compId": 56 }] }], "loadList": ["sence/kuangBG.png", "sence/chuangkoubai.png", "sence/paihangbanBG.png", "sence/paihangbangdi.png", "dabaoxiang/dabaoxiang.png", "dabaoxiang/xiaobao.png", "dabaoxiang/zhongbao.png", "sence/baoxiangBG.png", "dabaoxiang/xiaobaobiao.png", "sence/btn_lv.png", "sence/jinbi.png", "sence/clip_shuzi.png", "dabaoxiang/zhongbaobiao.png", "dabaoxiang/dabaobiao.png", "sence/btn_zi.png", "sence/action.png", "sence/mianfeilingqu.png", "dabaoxiang/xuxian.png", "sence/btn_guanbi.png", "sence/maohao.png"], "loadList3D": [] };
            return TreasureDialogUI;
        }(Laya.Dialog));
        scene.TreasureDialogUI = TreasureDialogUI;
        REG("ui.scene.TreasureDialogUI", TreasureDialogUI);
        var xiaoguaiUI = /** @class */ (function (_super) {
            __extends(xiaoguaiUI, _super);
            function xiaoguaiUI() {
                return _super.call(this) || this;
            }
            xiaoguaiUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(xiaoguaiUI.uiView);
            };
            xiaoguaiUI.uiView = { "type": "View", "props": { "width": 150, "height": 150 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 150, "x": 74, "skin": "player/all/yinying.png", "scaleY": 0.5, "scaleX": 0.5, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 4 }, { "type": "Image", "props": { "y": 76, "x": 35.5, "width": 87, "var": "img1", "skin": "player/all/600001.png", "height": 77 }, "compId": 3 }], "animations": [{ "nodes": [], "name": "wait", "id": 1, "frameRate": 60, "action": 0 }, { "nodes": [{ "target": 3, "keyframes": { "y": [{ "value": 76, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 0 }, { "value": 65, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "y", "index": 3 }, { "value": 76, "tweenMethod": "linearNone", "tween": true, "target": 3, "label": null, "key": "y", "index": 6 }] } }, { "target": 4, "keyframes": { "scaleY": [{ "value": 0.5, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleY", "index": 0 }, { "value": 0.3, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleY", "index": 3 }, { "value": 0.5, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleY", "index": 6 }], "scaleX": [{ "value": 0.5, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleX", "index": 0 }, { "value": 0.3, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleX", "index": 3 }, { "value": 0.5, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleX", "index": 6 }] } }], "name": "walk", "id": 2, "frameRate": 60, "action": 0 }], "loadList": ["player/all/yinying.png", "player/all/600001.png"], "loadList3D": [] };
            return xiaoguaiUI;
        }(Laya.View));
        scene.xiaoguaiUI = xiaoguaiUI;
        REG("ui.scene.xiaoguaiUI", xiaoguaiUI);
        var ZhuanUI = /** @class */ (function (_super) {
            __extends(ZhuanUI, _super);
            function ZhuanUI() {
                return _super.call(this) || this;
            }
            ZhuanUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(ZhuanUI.uiView);
            };
            ZhuanUI.uiView = { "type": "Dialog", "props": { "width": 750, "isModal": true, "height": 1200 }, "compId": 2, "child": [{ "type": "Box", "props": { "y": 14, "x": 108, "width": 627, "scaleY": 0.85, "scaleX": 0.85, "height": 1106 }, "compId": 28, "child": [{ "type": "Image", "props": { "y": 479, "x": 311, "width": 622, "var": "img", "skin": "baoxiang/dazhuanpan.png", "height": 627, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 3, "child": [{ "type": "ZhuanCell", "props": { "y": 65, "x": 386, "width": 130, "var": "s0", "rotation": 30, "height": 130, "runtime": "ui.scene.ZhuanCellUI" }, "compId": 22 }, { "type": "ZhuanCell", "props": { "y": 243, "x": 557, "width": 130, "var": "s1", "rotation": 90, "height": 130, "runtime": "ui.scene.ZhuanCellUI" }, "compId": 23 }, { "type": "ZhuanCell", "props": { "y": 483, "x": 492, "width": 130, "var": "s2", "rotation": 150, "height": 130, "runtime": "ui.scene.ZhuanCellUI" }, "compId": 24 }, { "type": "ZhuanCell", "props": { "y": 548, "x": 246, "width": 130, "var": "s3", "rotation": -148, "height": 130, "runtime": "ui.scene.ZhuanCellUI" }, "compId": 25 }, { "type": "ZhuanCell", "props": { "y": 373, "x": 69.5, "width": 130, "var": "s4", "rotation": -91, "height": 130, "runtime": "ui.scene.ZhuanCellUI" }, "compId": 26 }, { "type": "ZhuanCell", "props": { "y": 128, "x": 141, "width": 130, "var": "s5", "rotation": -27, "height": 130, "runtime": "ui.scene.ZhuanCellUI" }, "compId": 27 }] }, { "type": "Button", "props": { "y": 953, "x": 312, "width": 361, "var": "adBtn", "stateNum": 1, "skin": "sence/btn_zi.png", "sizeGrid": "20,20,21,18", "height": 106, "anchorY": 0.5, "anchorX": 0.5 }, "compId": 5, "child": [{ "type": "Sprite", "props": { "y": 16, "x": 53, "texture": "sence/action.png" }, "compId": 6 }, { "type": "Sprite", "props": { "y": 16.5, "x": 133, "texture": "baoxiang/mianfeichouqu.png" }, "compId": 7 }] }, { "type": "Sprite", "props": { "y": 138, "x": 282, "texture": "baoxiang/zhen.png" }, "compId": 11 }, { "type": "Image", "props": { "x": 4, "width": 596, "skin": "sence/paihangbangdi.png", "sizeGrid": "0,164,0,186", "height": 117 }, "compId": 13, "child": [{ "type": "Sprite", "props": { "y": 3, "x": 187, "texture": "baoxiang/zhuanpan.png" }, "compId": 15 }] }, { "type": "Button", "props": { "y": 26, "x": 509, "var": "closeBtn", "stateNum": 1, "skin": "sence/btn_guanbi.png", "name": "close" }, "compId": 14 }] }], "loadList": ["baoxiang/dazhuanpan.png", "sence/btn_zi.png", "sence/action.png", "baoxiang/mianfeichouqu.png", "baoxiang/zhen.png", "sence/paihangbangdi.png", "baoxiang/zhuanpan.png", "sence/btn_guanbi.png"], "loadList3D": [] };
            return ZhuanUI;
        }(Laya.Dialog));
        scene.ZhuanUI = ZhuanUI;
        REG("ui.scene.ZhuanUI", ZhuanUI);
        var ZhuanCellUI = /** @class */ (function (_super) {
            __extends(ZhuanCellUI, _super);
            function ZhuanCellUI() {
                return _super.call(this) || this;
            }
            ZhuanCellUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(ZhuanCellUI.uiView);
            };
            ZhuanCellUI.uiView = { "type": "View", "props": { "width": 130, "height": 130 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 3, "x": 4, "width": 123, "var": "s0", "skin": "sence/kuang1.png", "height": 123 }, "compId": 3 }, { "type": "Image", "props": { "y": 3, "x": 4, "var": "logo", "skin": "icons/200001.png" }, "compId": 4 }, { "type": "Image", "props": { "y": 84, "x": 89, "var": "bg2Img", "skin": "sence/dengji.png" }, "compId": 5, "child": [{ "type": "FontClip", "props": { "y": 13.5, "x": -17, "width": 90, "var": "fc", "value": "99", "spaceX": -3, "skin": "sence/clip_shuzi.png", "sheet": "01234 56789", "scaleY": 0.8, "scaleX": 0.8, "height": 27, "align": "center" }, "compId": 6 }] }], "loadList": ["sence/kuang1.png", "icons/200001.png", "sence/dengji.png", "sence/clip_shuzi.png"], "loadList3D": [] };
            return ZhuanCellUI;
        }(Laya.View));
        scene.ZhuanCellUI = ZhuanCellUI;
        REG("ui.scene.ZhuanCellUI", ZhuanCellUI);
        var ZJbaoxiangUI = /** @class */ (function (_super) {
            __extends(ZJbaoxiangUI, _super);
            function ZJbaoxiangUI() {
                return _super.call(this) || this;
            }
            ZJbaoxiangUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(ZJbaoxiangUI.uiView);
            };
            ZJbaoxiangUI.uiView = { "type": "Dialog", "props": { "width": 750, "height": 1334 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 815, "x": 374, "skin": "baoxiang/ZDguan.png", "anchorY": 1, "anchorX": 0.5 }, "compId": 3 }, { "type": "Image", "props": { "y": 815, "x": 374, "skin": "baoxiang/ZDkai.png", "anchorY": 1, "anchorX": 0.5 }, "compId": 4 }, { "type": "Image", "props": { "y": 677, "x": 363, "skin": "baoxiang/baoxiangguang.png", "blendMode": "lighter", "anchorY": 1, "anchorX": 0.5, "alpha": 0.5 }, "compId": 6 }], "animations": [{ "nodes": [{ "target": 4, "keyframes": { "y": [{ "value": 815, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "y", "index": 0 }, { "value": 814, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "y", "index": 9 }], "visible": [{ "value": false, "tweenMethod": "linearNone", "tween": false, "target": 4, "key": "visible", "index": 0 }, { "value": false, "tweenMethod": "linearNone", "tween": false, "target": 4, "key": "visible", "index": 7 }, { "value": true, "tweenMethod": "linearNone", "tween": false, "target": 4, "key": "visible", "index": 9 }, { "value": true, "tweenMethod": "linearNone", "tween": false, "target": 4, "key": "visible", "index": 13 }], "skin": [{ "value": "baoxiang/ZDkai.png", "tweenMethod": "linearNone", "tween": false, "target": 4, "key": "skin", "index": 0 }], "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleY", "index": 0 }, { "value": 1.2, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleY", "index": 11 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "scaleY", "index": 13 }], "anchorY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "anchorY", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 4, "key": "anchorY", "index": 9 }] } }, { "target": 3, "keyframes": { "visible": [{ "value": true, "tweenMethod": "linearNone", "tween": false, "target": 3, "key": "visible", "index": 0 }, { "value": false, "tweenMethod": "linearNone", "tween": false, "target": 3, "key": "visible", "index": 9 }], "skin": [{ "value": "baoxiang/ZDguan.png", "tweenMethod": "linearNone", "tween": false, "target": 3, "key": "skin", "index": 0 }], "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 0 }, { "value": 0.8, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 7 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 3, "key": "scaleY", "index": 9 }] } }, { "target": 6, "keyframes": { "skin": [{ "value": "baoxiang/baoxiangguang.png", "tweenMethod": "linearNone", "tween": false, "target": 6, "key": "skin", "index": 0 }], "scaleY": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleY", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleY", "index": 9 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleY", "index": 12 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "scaleX", "index": 12 }], "alpha": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "alpha", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "alpha", "index": 9 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "alpha", "index": 12 }, { "value": 0.5, "tweenMethod": "linearNone", "tween": true, "target": 6, "key": "alpha", "index": 16 }] } }], "name": "ani1", "id": 1, "frameRate": 60, "action": 0 }], "loadList": ["baoxiang/ZDguan.png", "baoxiang/ZDkai.png", "baoxiang/baoxiangguang.png"], "loadList3D": [] };
            return ZJbaoxiangUI;
        }(Laya.Dialog));
        scene.ZJbaoxiangUI = ZJbaoxiangUI;
        REG("ui.scene.ZJbaoxiangUI", ZJbaoxiangUI);
    })(scene = ui.scene || (ui.scene = {}));
})(ui = exports.ui || (exports.ui = {}));
(function (ui) {
    var test;
    (function (test) {
        var TestSceneUI = /** @class */ (function (_super) {
            __extends(TestSceneUI, _super);
            function TestSceneUI() {
                return _super.call(this) || this;
            }
            TestSceneUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(TestSceneUI.uiView);
            };
            TestSceneUI.uiView = { "type": "Scene", "props": { "width": 640, "runtime": "script/GameUI.ts", "name": "gameBox", "height": 1136 }, "compId": 1, "child": [{ "type": "Sprite", "props": { "y": 1116, "x": -83, "width": 805, "texture": "test/block.png", "name": "ground", "height": 20 }, "compId": 3, "child": [{ "type": "Script", "props": { "y": 0, "x": 0, "width": 805, "label": "ground", "height": 20, "runtime": "laya.physics.BoxCollider" }, "compId": 5 }, { "type": "Script", "props": { "type": "static", "runtime": "laya.physics.RigidBody" }, "compId": 6 }] }, { "type": "Sprite", "props": { "y": 0, "x": 0, "name": "gameBox" }, "compId": 18 }, { "type": "Sprite", "props": { "y": 0, "x": 0, "name": "UI" }, "compId": 14, "child": [{ "type": "Label", "props": { "y": 50, "x": 158, "width": 272, "var": "scoreLbl", "height": 47, "fontSize": 40, "color": "#51c524", "align": "center" }, "compId": 17 }, { "type": "Label", "props": { "y": 0, "x": 0, "width": 640, "var": "tipLbll", "valign": "middle", "text": "别让箱子掉下来\\n\\n点击屏幕开始游戏", "height": 1136, "fontSize": 40, "color": "#c6302e", "align": "center" }, "compId": 16 }] }, { "type": "Script", "props": { "enabled": true, "dropBox": "@Prefab:prefab/DropBox.prefab", "bullet": "@Prefab:prefab/Bullet.prefab", "runtime": "script/GameControl.ts" }, "compId": 20 }], "loadList": ["test/block.png", "prefab/DropBox.prefab", "prefab/Bullet.prefab"], "loadList3D": [] };
            return TestSceneUI;
        }(Laya.Scene));
        test.TestSceneUI = TestSceneUI;
        REG("ui.test.TestSceneUI", TestSceneUI);
    })(test = ui.test || (ui.test = {}));
})(ui = exports.ui || (exports.ui = {}));
(function (ui) {
    var youzi;
    (function (youzi) {
        var YouZiBoxUI = /** @class */ (function (_super) {
            __extends(YouZiBoxUI, _super);
            function YouZiBoxUI() {
                return _super.call(this) || this;
            }
            YouZiBoxUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(YouZiBoxUI.uiView);
            };
            YouZiBoxUI.uiView = { "type": "View", "props": { "width": 750, "height": 1500 }, "compId": 2, "child": [{ "type": "Box", "props": { "y": 249, "width": 102, "var": "zhuTui", "right": 648, "name": "zhuTui", "height": 124 }, "compId": 3 }, { "type": "Box", "props": { "y": 750, "x": 0, "width": 102, "var": "chouTi", "name": "chouTi", "height": 124 }, "compId": 4 }, { "type": "Box", "props": { "x": 0, "width": 750, "var": "bottomBox", "name": "bottomBox", "height": 170, "bottom": 0 }, "compId": 6 }], "loadList": [], "loadList3D": [] };
            return YouZiBoxUI;
        }(Laya.View));
        youzi.YouZiBoxUI = YouZiBoxUI;
        REG("ui.youzi.YouZiBoxUI", YouZiBoxUI);
        var Youzi_BottomBannerUI = /** @class */ (function (_super) {
            __extends(Youzi_BottomBannerUI, _super);
            function Youzi_BottomBannerUI() {
                return _super.call(this) || this;
            }
            Youzi_BottomBannerUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(Youzi_BottomBannerUI.uiView);
            };
            Youzi_BottomBannerUI.uiView = { "type": "View", "props": { "width": 640, "visible": false, "name": "YouziBottomView", "height": 170 }, "compId": 2, "child": [{ "type": "Sprite", "props": { "y": 0, "x": 0, "width": 640, "visible": false, "var": "BannerBottomUI", "sizeGrid": "12,10,0,10", "height": 170 }, "compId": 3, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 640, "var": "bannerBottomBg", "skin": "comp/two_round_corner.png", "sizeGrid": "10,12,5,12", "height": 170, "cacheAs": "bitmap" }, "compId": 4 }, { "type": "Image", "props": { "y": 37.5, "x": 14, "skin": "comp/txt_hotgame_v.png", "name": "bannerTitle" }, "compId": 5 }, { "type": "List", "props": { "y": 20, "x": 47, "width": 584, "var": "bottomList", "spaceY": 5, "spaceX": 24, "repeatX": 10, "height": 150, "hScrollBarSkin": "comp/vscroll.png" }, "compId": 6, "child": [{ "type": "Box", "props": { "y": 0, "x": 0, "width": 110, "name": "render", "height": 150 }, "compId": 7, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 110, "name": "icon", "height": 110 }, "compId": 8 }, { "type": "Label", "props": { "y": 130, "x": 55, "text": "弹弹欢乐球", "name": "namelab", "fontSize": 20, "color": "#ffffff", "anchorY": 0.5, "anchorX": 0.5, "align": "center" }, "compId": 9 }] }] }, { "type": "List", "props": { "y": 0, "x": 0, "width": 640, "var": "gameBannerList", "spaceY": 5, "spaceX": 5, "repeatY": 1, "repeatX": 6, "height": 170, "hScrollBarSkin": "comp/vscroll.png" }, "compId": 10, "child": [{ "type": "Box", "props": { "y": 1, "x": 0, "width": 640, "name": "render", "height": 170 }, "compId": 11, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 640, "name": "icon", "height": 170 }, "compId": 12 }] }] }] }], "loadList": ["comp/two_round_corner.png", "comp/txt_hotgame_v.png", "comp/vscroll.png"], "loadList3D": [] };
            return Youzi_BottomBannerUI;
        }(Laya.View));
        youzi.Youzi_BottomBannerUI = Youzi_BottomBannerUI;
        REG("ui.youzi.Youzi_BottomBannerUI", Youzi_BottomBannerUI);
        var Youzi_GuessLikeUI = /** @class */ (function (_super) {
            __extends(Youzi_GuessLikeUI, _super);
            function Youzi_GuessLikeUI() {
                return _super.call(this) || this;
            }
            Youzi_GuessLikeUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(Youzi_GuessLikeUI.uiView);
            };
            Youzi_GuessLikeUI.uiView = { "type": "View", "props": { "width": 464, "name": "YouziGuessLikeView", "height": 124 }, "compId": 2, "child": [{ "type": "Sprite", "props": { "y": 0, "x": 0, "width": 464, "visible": false, "var": "guessUI", "height": 124 }, "compId": 3, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 464, "skin": "comp/full_round_corner.png", "sizeGrid": "10,10,10,10", "name": "guessLikeBg", "height": 124, "cacheAs": "bitmap" }, "compId": 4, "child": [{ "type": "Image", "props": { "y": 15.5, "x": 28, "skin": "comp/txt_guesslike_v.png", "name": "guessTitle", "cacheAs": "bitmap" }, "compId": 5 }, { "type": "List", "props": { "y": 18.5, "x": 87, "width": 369, "var": "guesslist", "spaceX": 18, "repeatX": 8, "height": 90, "hScrollBarSkin": "comp/vscroll.png" }, "compId": 6, "child": [{ "type": "Box", "props": { "y": 0, "x": 0, "width": 90, "name": "render", "height": 90 }, "compId": 7, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 90, "name": "icon", "height": 90 }, "compId": 8 }] }] }] }] }], "loadList": ["comp/full_round_corner.png", "comp/txt_guesslike_v.png", "comp/vscroll.png"], "loadList3D": [] };
            return Youzi_GuessLikeUI;
        }(Laya.View));
        youzi.Youzi_GuessLikeUI = Youzi_GuessLikeUI;
        REG("ui.youzi.Youzi_GuessLikeUI", Youzi_GuessLikeUI);
        var Youzi_GuessLikeHUI = /** @class */ (function (_super) {
            __extends(Youzi_GuessLikeHUI, _super);
            function Youzi_GuessLikeHUI() {
                return _super.call(this) || this;
            }
            Youzi_GuessLikeHUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(Youzi_GuessLikeHUI.uiView);
            };
            Youzi_GuessLikeHUI.uiView = { "type": "View", "props": { "width": 124, "name": "YouziGuessLikeViewH", "height": 464 }, "compId": 2, "child": [{ "type": "Sprite", "props": { "y": 0, "x": 0, "width": 124, "visible": false, "var": "guessUI", "height": 464, "drawCallOptimize": true }, "compId": 3, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 124, "skin": "comp/full_round_corner.png", "sizeGrid": "8,8,8,8", "rotation": 0, "name": "guessLikeBg", "height": 464 }, "compId": 4 }, { "type": "Image", "props": { "y": 30, "x": 12, "width": 100, "skin": "comp/txt_guesslike_h.png", "rotation": 0, "name": "title", "height": 26, "cacheAs": "bitmap" }, "compId": 5 }, { "type": "List", "props": { "y": 289, "x": 17, "width": 90, "var": "guesslist", "vScrollBarSkin": "comp/vslider.png", "spaceY": 18, "rotation": 0, "repeatY": 1, "pivotY": 210, "height": 385, "disabled": false }, "compId": 6, "child": [{ "type": "Box", "props": { "y": 0, "x": 0, "width": 90, "name": "render", "height": 90 }, "compId": 7, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 90, "name": "icon", "height": 90 }, "compId": 8 }] }] }] }], "loadList": ["comp/full_round_corner.png", "comp/txt_guesslike_h.png", "comp/vslider.png"], "loadList3D": [] };
            return Youzi_GuessLikeHUI;
        }(Laya.View));
        youzi.Youzi_GuessLikeHUI = Youzi_GuessLikeHUI;
        REG("ui.youzi.Youzi_GuessLikeHUI", Youzi_GuessLikeHUI);
        var Youzi_MainPushUI = /** @class */ (function (_super) {
            __extends(Youzi_MainPushUI, _super);
            function Youzi_MainPushUI() {
                return _super.call(this) || this;
            }
            Youzi_MainPushUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(Youzi_MainPushUI.uiView);
            };
            Youzi_MainPushUI.uiView = { "type": "View", "props": { "width": 102, "visible": false, "name": "YouziMainPushView", "height": 124 }, "compId": 2, "child": [{ "type": "Image", "props": { "y": 0, "width": 102, "visible": false, "var": "btnMainRecBg", "skin": "comp/icon_bg.png", "sizeGrid": "5,5,5,5", "pivotX": 51, "height": 124, "centerX": 0, "cacheAs": "bitmap" }, "compId": 3, "child": [{ "type": "Button", "props": { "y": 3, "x": 51, "width": 92, "visible": true, "var": "btnMainRec", "stateNum": 1, "pivotX": 46, "height": 90, "cacheAs": "none" }, "compId": 4, "child": [{ "type": "Text", "props": { "y": 100, "x": 45, "width": 102, "valign": "middle", "pivotY": 1, "pivotX": 51, "overflow": "hidden", "name": "slogan", "height": 1, "fontSize": 18, "bold": true, "align": "center", "runtime": "laya.display.Text" }, "compId": 5 }] }] }], "loadList": ["comp/icon_bg.png"], "loadList3D": [] };
            return Youzi_MainPushUI;
        }(Laya.View));
        youzi.Youzi_MainPushUI = Youzi_MainPushUI;
        REG("ui.youzi.Youzi_MainPushUI", Youzi_MainPushUI);
        var Youzi_MoreGameUI = /** @class */ (function (_super) {
            __extends(Youzi_MoreGameUI, _super);
            function Youzi_MoreGameUI() {
                return _super.call(this) || this;
            }
            Youzi_MoreGameUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(Youzi_MoreGameUI.uiView);
            };
            Youzi_MoreGameUI.uiView = { "type": "View", "props": { "y": 0, "x": 0, "width": 720, "visible": false, "name": "YouziMoreGameView", "height": 1280 }, "compId": 2, "child": [{ "type": "Button", "props": { "y": -60, "x": 0, "width": 720, "stateNum": 1, "skin": "comp/blank.png", "name": "maskButton", "mouseEnabled": true, "label": "label", "height": 1400 }, "compId": 22 }, { "type": "Sprite", "props": { "y": 300, "x": 95, "width": 530, "visible": false, "var": "MoreGameUI", "pivotY": 0, "pivotX": 0, "mouseThrough": false, "mouseEnabled": true, "height": 680 }, "compId": 12, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 530, "skin": "comp/full_round_corner.png", "sizeGrid": "8,8,8,8", "pivotX": 0, "name": "panel", "height": 680, "cacheAs": "bitmap" }, "compId": 14 }, { "type": "Image", "props": { "y": 0, "x": 103, "skin": "comp/main_title.png", "name": "title", "cacheAs": "bitmap" }, "compId": 15 }, { "type": "Button", "props": { "y": -11, "x": 498, "width": 42, "var": "moreGameCloseBtn", "stateNum": 1, "skin": "comp/close_button.png", "labelSize": 26, "labelPadding": "-50", "height": 46, "cacheAs": "bitmap" }, "compId": 16 }, { "type": "List", "props": { "y": 59, "x": 25, "width": 480, "var": "moreGameList", "spaceY": 12, "spaceX": 28, "repeatX": 3, "height": 620 }, "compId": 17, "child": [{ "type": "Box", "props": { "y": 0, "x": 0, "width": 140, "name": "render", "height": 180 }, "compId": 18, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 140, "name": "icon", "height": 140 }, "compId": 19 }, { "type": "Label", "props": { "y": 166, "x": 70, "width": 140, "valign": "middle", "text": "弹弹欢乐球", "overflow": "hidden", "name": "namelab", "height": 30, "fontSize": 26, "color": "#ffffff", "anchorY": 0.5, "anchorX": 0.5, "align": "center" }, "compId": 20 }] }] }] }], "loadList": ["comp/blank.png", "comp/full_round_corner.png", "comp/main_title.png", "comp/close_button.png"], "loadList3D": [] };
            return Youzi_MoreGameUI;
        }(Laya.View));
        youzi.Youzi_MoreGameUI = Youzi_MoreGameUI;
        REG("ui.youzi.Youzi_MoreGameUI", Youzi_MoreGameUI);
        var Youzi_MoreGameHUI = /** @class */ (function (_super) {
            __extends(Youzi_MoreGameHUI, _super);
            function Youzi_MoreGameHUI() {
                return _super.call(this) || this;
            }
            Youzi_MoreGameHUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(Youzi_MoreGameHUI.uiView);
            };
            Youzi_MoreGameHUI.uiView = { "type": "View", "props": { "width": 1280, "visible": false, "name": "YouziMoreGameH", "height": 720 }, "compId": 2, "child": [{ "type": "Button", "props": { "y": 0, "x": -60, "width": 1400, "stateNum": 1, "skin": "comp/blank.png", "pivotX": 0, "name": "moreGameMaskBtn", "mouseEnabled": true, "height": 720, "cacheAs": "bitmap" }, "compId": 4 }, { "type": "Sprite", "props": { "y": 60, "x": 376, "width": 528, "visible": false, "var": "MoreGameUI", "pivotY": 0, "pivotX": 0, "mouseThrough": false, "mouseEnabled": true, "height": 600, "drawCallOptimize": true }, "compId": 3, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 528, "skin": "comp/full_round_corner.png", "sizeGrid": "8,8,8,8", "pivotX": 0, "name": "panel", "height": 600, "cacheAs": "bitmap" }, "compId": 5 }, { "type": "Image", "props": { "y": 0, "x": 113, "skin": "comp/main_title.png", "name": "title" }, "compId": 6 }, { "type": "Button", "props": { "y": -8, "x": 497, "var": "moreGameCloseBtn", "stateNum": 1, "skin": "comp/close_button.png", "labelSize": 26, "labelPadding": "-50", "cacheAs": "bitmap" }, "compId": 7 }, { "type": "List", "props": { "y": 70, "x": 31, "width": 466, "var": "moreGameList", "vScrollBarSkin": "comp/vslider.png", "spaceY": 10, "spaceX": 45, "repeatX": 3, "height": 530 }, "compId": 8, "child": [{ "type": "Box", "props": { "y": 0, "x": 0, "width": 120, "name": "render", "height": 153 }, "compId": 9, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 120, "name": "icon", "height": 120 }, "compId": 10 }, { "type": "Label", "props": { "y": 142, "x": 60, "width": 120, "valign": "middle", "text": "弹弹欢乐球", "overflow": "hidden", "name": "namelab", "height": 22, "fontSize": 22, "color": "#ffffff", "anchorY": 0.5, "anchorX": 0.5, "align": "center" }, "compId": 11 }] }] }] }], "loadList": ["comp/blank.png", "comp/full_round_corner.png", "comp/main_title.png", "comp/close_button.png", "comp/vslider.png"], "loadList3D": [] };
            return Youzi_MoreGameHUI;
        }(Laya.View));
        youzi.Youzi_MoreGameHUI = Youzi_MoreGameHUI;
        REG("ui.youzi.Youzi_MoreGameHUI", Youzi_MoreGameHUI);
        var Youzi_OffLineUI = /** @class */ (function (_super) {
            __extends(Youzi_OffLineUI, _super);
            function Youzi_OffLineUI() {
                return _super.call(this) || this;
            }
            Youzi_OffLineUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(Youzi_OffLineUI.uiView);
            };
            Youzi_OffLineUI.uiView = { "type": "View", "props": { "width": 720, "name": "YouziOffLineView", "height": 1280 }, "compId": 2, "child": [{ "type": "Button", "props": { "y": -60, "x": 0, "width": 720, "stateNum": 1, "skin": "comp/blank.png", "name": "OffLineMask", "mouseEnabled": true, "height": 1400, "cacheAs": "normal" }, "compId": 4 }, { "type": "Sprite", "props": { "y": 506, "x": 40, "width": 640, "visible": false, "var": "OffLineUI", "mouseEnabled": true, "height": 268 }, "compId": 3, "child": [{ "type": "Image", "props": { "y": 0, "x": 56, "width": 528, "skin": "comp/full_round_corner.png", "sizeGrid": "9,9,9,9", "name": "OffLineBg", "height": 268, "cacheAs": "bitmap" }, "compId": 5, "child": [{ "type": "List", "props": { "y": 71, "x": 29, "width": 470, "var": "OffLineList", "spaceX": 25, "repeatY": 1, "height": 180 }, "compId": 6, "child": [{ "type": "Box", "props": { "y": 0, "x": 0, "width": 140, "name": "render", "height": 180 }, "compId": 7, "child": [{ "type": "Image", "props": { "x": 0, "width": 140, "name": "icon", "height": 140 }, "compId": 8, "child": [{ "type": "Image", "props": { "y": -14, "x": 126, "visible": false, "skin": "comp/redhit.png", "name": "redhit", "cacheAs": "bitmap" }, "compId": 9 }] }, { "type": "Label", "props": { "y": 150, "width": 140, "valign": "middle", "text": "弹弹欢乐球", "overflow": "hidden", "name": "namelab", "height": 30, "fontSize": 24, "color": "#ffffff", "align": "center" }, "compId": 10 }] }] }] }, { "type": "Button", "props": { "y": -21.5, "x": 552, "width": 42, "var": "OffLineCloseButton", "stateNum": 1, "skin": "comp/close_button.png", "height": 46, "cacheAs": "bitmap" }, "compId": 11 }, { "type": "Image", "props": { "y": 24.5, "x": 265, "width": 110, "skin": "comp/txt_guesslike_h.png", "name": "offlineTitle", "height": 30, "cacheAs": "bitmap" }, "compId": 12 }] }], "loadList": ["comp/blank.png", "comp/full_round_corner.png", "comp/redhit.png", "comp/close_button.png", "comp/txt_guesslike_h.png"], "loadList3D": [] };
            return Youzi_OffLineUI;
        }(Laya.View));
        youzi.Youzi_OffLineUI = Youzi_OffLineUI;
        REG("ui.youzi.Youzi_OffLineUI", Youzi_OffLineUI);
        var Youzi_OffLineHUI = /** @class */ (function (_super) {
            __extends(Youzi_OffLineHUI, _super);
            function Youzi_OffLineHUI() {
                return _super.call(this) || this;
            }
            Youzi_OffLineHUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(Youzi_OffLineHUI.uiView);
            };
            Youzi_OffLineHUI.uiView = { "type": "View", "props": { "width": 1280, "name": "YouziOffLineHView", "height": 720 }, "compId": 2, "child": [{ "type": "Button", "props": { "y": 0, "x": -60, "width": 1400, "stateNum": 1, "skin": "comp/blank.png", "name": "OffLineMask", "mouseThrough": false, "height": 720, "cacheAs": "bitmap" }, "compId": 4 }, { "type": "Sprite", "props": { "y": 180, "x": 320, "width": 640, "visible": false, "var": "OffLineUI", "mouseThrough": true, "mouseEnabled": true, "height": 360, "drawCallOptimize": true }, "compId": 3, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 640, "skin": "comp/full_round_corner.png", "sizeGrid": "8,8,8,8", "name": "OffLineBg", "height": 360 }, "compId": 5 }, { "type": "Image", "props": { "y": 37, "x": 255, "width": 130, "skin": "comp/txt_guesslike_h.png", "name": "title", "height": 32, "cacheAs": "bitmap" }, "compId": 6 }, { "type": "Button", "props": { "y": -9, "x": 609, "var": "OffLineCloseButton", "stateNum": 1, "skin": "comp/close_button.png", "cacheAs": "bitmap" }, "compId": 7 }, { "type": "List", "props": { "y": 101, "x": 0, "width": 640, "var": "OffLineList", "repeatY": 1, "height": 210 }, "compId": 8, "child": [{ "type": "Box", "props": { "y": 15, "x": 25, "width": 180, "name": "render", "height": 180 }, "compId": 9, "child": [{ "type": "Image", "props": { "y": 0, "x": 15, "width": 150, "name": "icon", "height": 150 }, "compId": 10, "child": [{ "type": "Image", "props": { "y": -14, "x": 136, "visible": false, "skin": "comp/redhit.png", "name": "redhit", "cacheAs": "bitmap" }, "compId": 11 }] }, { "type": "Label", "props": { "y": 160, "width": 180, "text": "弹弹欢乐球", "name": "namelab", "height": 30, "fontSize": 30, "color": "#ffffff", "align": "center" }, "compId": 12 }] }] }] }], "loadList": ["comp/blank.png", "comp/full_round_corner.png", "comp/txt_guesslike_h.png", "comp/close_button.png", "comp/redhit.png"], "loadList3D": [] };
            return Youzi_OffLineHUI;
        }(Laya.View));
        youzi.Youzi_OffLineHUI = Youzi_OffLineHUI;
        REG("ui.youzi.Youzi_OffLineHUI", Youzi_OffLineHUI);
        var Youzi_SlideWindowUI = /** @class */ (function (_super) {
            __extends(Youzi_SlideWindowUI, _super);
            function Youzi_SlideWindowUI() {
                return _super.call(this) || this;
            }
            Youzi_SlideWindowUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(Youzi_SlideWindowUI.uiView);
            };
            Youzi_SlideWindowUI.uiView = { "type": "View", "props": { "width": 536, "visible": false, "name": "YouziSlideView", "height": 604 }, "compId": 2, "child": [{ "type": "Sprite", "props": { "y": 0, "x": 0, "width": 536, "visible": false, "var": "SlideWindowUI", "height": 604 }, "compId": 14, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 536, "var": "slideBg", "scaleX": 1, "height": 604 }, "compId": 15, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 497, "skin": "comp/full_round_corner.png", "sizeGrid": "9,9,9,9", "name": "slideBgLeft", "height": 604, "cacheAs": "bitmap" }, "compId": 16 }, { "type": "Image", "props": { "y": 220, "x": 495, "width": 42, "skin": "comp/slide_bg_mid.png", "sizeGrid": "0,40,0,4", "name": "slideBtn", "mouseEnabled": false, "height": 164 }, "compId": 18 }, { "type": "Button", "props": { "y": 281, "x": 504, "width": 26, "var": "btnSLideClose", "stateNum": 1, "height": 38 }, "compId": 24 }] }, { "type": "List", "props": { "y": 11, "x": 34, "width": 463, "var": "slideList", "vScrollBarSkin": "comp/vscroll.png", "spaceX": 26, "repeatX": 3, "height": 593 }, "compId": 19, "child": [{ "type": "Box", "props": { "y": 0, "x": 0, "width": 130, "name": "render", "height": 180 }, "compId": 20, "child": [{ "type": "Image", "props": { "y": 12, "x": 0, "width": 130, "name": "icon", "height": 130 }, "compId": 21, "child": [{ "type": "Image", "props": { "y": -14, "x": 116, "visible": false, "skin": "comp/redhit.png", "name": "markImg", "cacheAs": "bitmap" }, "compId": 22 }] }, { "type": "Label", "props": { "y": 164, "x": 65, "width": 130, "valign": "middle", "text": "弹弹欢乐球", "overflow": "hidden", "name": "namelab", "height": 26, "fontSize": 26, "color": "#ffffff", "anchorY": 0.5, "anchorX": 0.5, "align": "center" }, "compId": 23 }] }] }] }], "loadList": ["comp/full_round_corner.png", "comp/slide_bg_mid.png", "comp/vscroll.png", "comp/redhit.png"], "loadList3D": [] };
            return Youzi_SlideWindowUI;
        }(Laya.View));
        youzi.Youzi_SlideWindowUI = Youzi_SlideWindowUI;
        REG("ui.youzi.Youzi_SlideWindowUI", Youzi_SlideWindowUI);
        var Youzi_SlideWindowHUI = /** @class */ (function (_super) {
            __extends(Youzi_SlideWindowHUI, _super);
            function Youzi_SlideWindowHUI() {
                return _super.call(this) || this;
            }
            Youzi_SlideWindowHUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(Youzi_SlideWindowHUI.uiView);
            };
            Youzi_SlideWindowHUI.uiView = { "type": "View", "props": { "width": 600, "visible": false, "name": "YouziSlideWindowViewH", "height": 614 }, "compId": 2, "child": [{ "type": "Sprite", "props": { "y": 0, "x": 0, "width": 600, "visible": false, "var": "SlideWindowUI", "height": 614, "drawCallOptimize": true }, "compId": 3, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 600, "var": "slideBg", "sizeGrid": "9,7,11,10", "scaleX": 1, "rotation": 0, "height": 614 }, "compId": 4, "child": [{ "type": "Image", "props": { "y": 225, "x": 566, "width": 33, "skin": "comp/slide_bg_mid.png", "sizeGrid": "0,40,0,4", "name": "slideBgMiddle", "height": 164 }, "compId": 5 }, { "type": "Image", "props": { "y": 0, "x": -71, "width": 640, "skin": "comp/full_round_corner.png", "sizeGrid": "10,10,10,10", "name": "zhezhao", "height": 614, "cacheAs": "bitmap" }, "compId": 6 }, { "type": "Button", "props": { "y": 288, "x": 577, "width": 23, "var": "btnSLideClose", "stateNum": 1, "height": 38 }, "compId": 12 }] }, { "type": "List", "props": { "y": 0, "x": 67, "width": 485, "var": "slideList", "vScrollBarSkin": "comp/vscroll.png", "spaceX": 40, "repeatX": 3, "height": 614 }, "compId": 7, "child": [{ "type": "Box", "props": { "y": 0, "x": 0, "width": 130, "name": "render", "height": 190 }, "compId": 8, "child": [{ "type": "Image", "props": { "y": 20, "x": 0, "width": 130, "name": "icon", "height": 130 }, "compId": 9, "child": [{ "type": "Image", "props": { "y": -14, "x": 116, "skin": "comp/redhit.png", "name": "markImg", "cacheAs": "bitmap" }, "compId": 10 }] }, { "type": "Label", "props": { "y": 177, "x": 65, "width": 130, "valign": "bottom", "text": "弹弹欢乐球", "overflow": "hidden", "name": "namelab", "height": 24, "fontSize": 22, "color": "#ffffff", "anchorY": 0.5, "anchorX": 0.5, "align": "center" }, "compId": 11 }] }] }] }], "loadList": ["comp/slide_bg_mid.png", "comp/full_round_corner.png", "comp/vscroll.png", "comp/redhit.png"], "loadList3D": [] };
            return Youzi_SlideWindowHUI;
        }(Laya.View));
        youzi.Youzi_SlideWindowHUI = Youzi_SlideWindowHUI;
        REG("ui.youzi.Youzi_SlideWindowHUI", Youzi_SlideWindowHUI);
    })(youzi = ui.youzi || (ui.youzi = {}));
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[2])